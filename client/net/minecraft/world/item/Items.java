package net.minecraft.world.item;

import java.util.Optional;
import net.minecraft.core.Registry;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.sounds.SoundEvents;
import net.minecraft.tags.BannerPatternTags;
import net.minecraft.tags.InstrumentTags;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.EquipmentSlot;
import net.minecraft.world.entity.vehicle.AbstractMinecart;
import net.minecraft.world.entity.vehicle.Boat;
import net.minecraft.world.food.Foods;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.material.Fluids;

public class Items {
   public static final Item AIR;
   public static final Item STONE;
   public static final Item GRANITE;
   public static final Item POLISHED_GRANITE;
   public static final Item DIORITE;
   public static final Item POLISHED_DIORITE;
   public static final Item ANDESITE;
   public static final Item POLISHED_ANDESITE;
   public static final Item DEEPSLATE;
   public static final Item COBBLED_DEEPSLATE;
   public static final Item POLISHED_DEEPSLATE;
   public static final Item CALCITE;
   public static final Item TUFF;
   public static final Item DRIPSTONE_BLOCK;
   public static final Item GRASS_BLOCK;
   public static final Item DIRT;
   public static final Item COARSE_DIRT;
   public static final Item PODZOL;
   public static final Item ROOTED_DIRT;
   public static final Item MUD;
   public static final Item CRIMSON_NYLIUM;
   public static final Item WARPED_NYLIUM;
   public static final Item COBBLESTONE;
   public static final Item OAK_PLANKS;
   public static final Item SPRUCE_PLANKS;
   public static final Item BIRCH_PLANKS;
   public static final Item JUNGLE_PLANKS;
   public static final Item ACACIA_PLANKS;
   public static final Item DARK_OAK_PLANKS;
   public static final Item MANGROVE_PLANKS;
   public static final Item CRIMSON_PLANKS;
   public static final Item WARPED_PLANKS;
   public static final Item OAK_SAPLING;
   public static final Item SPRUCE_SAPLING;
   public static final Item BIRCH_SAPLING;
   public static final Item JUNGLE_SAPLING;
   public static final Item ACACIA_SAPLING;
   public static final Item DARK_OAK_SAPLING;
   public static final Item MANGROVE_PROPAGULE;
   public static final Item BEDROCK;
   public static final Item SAND;
   public static final Item RED_SAND;
   public static final Item GRAVEL;
   public static final Item COAL_ORE;
   public static final Item DEEPSLATE_COAL_ORE;
   public static final Item IRON_ORE;
   public static final Item DEEPSLATE_IRON_ORE;
   public static final Item COPPER_ORE;
   public static final Item DEEPSLATE_COPPER_ORE;
   public static final Item GOLD_ORE;
   public static final Item DEEPSLATE_GOLD_ORE;
   public static final Item REDSTONE_ORE;
   public static final Item DEEPSLATE_REDSTONE_ORE;
   public static final Item EMERALD_ORE;
   public static final Item DEEPSLATE_EMERALD_ORE;
   public static final Item LAPIS_ORE;
   public static final Item DEEPSLATE_LAPIS_ORE;
   public static final Item DIAMOND_ORE;
   public static final Item DEEPSLATE_DIAMOND_ORE;
   public static final Item NETHER_GOLD_ORE;
   public static final Item NETHER_QUARTZ_ORE;
   public static final Item ANCIENT_DEBRIS;
   public static final Item COAL_BLOCK;
   public static final Item RAW_IRON_BLOCK;
   public static final Item RAW_COPPER_BLOCK;
   public static final Item RAW_GOLD_BLOCK;
   public static final Item AMETHYST_BLOCK;
   public static final Item BUDDING_AMETHYST;
   public static final Item IRON_BLOCK;
   public static final Item COPPER_BLOCK;
   public static final Item GOLD_BLOCK;
   public static final Item DIAMOND_BLOCK;
   public static final Item NETHERITE_BLOCK;
   public static final Item EXPOSED_COPPER;
   public static final Item WEATHERED_COPPER;
   public static final Item OXIDIZED_COPPER;
   public static final Item CUT_COPPER;
   public static final Item EXPOSED_CUT_COPPER;
   public static final Item WEATHERED_CUT_COPPER;
   public static final Item OXIDIZED_CUT_COPPER;
   public static final Item CUT_COPPER_STAIRS;
   public static final Item EXPOSED_CUT_COPPER_STAIRS;
   public static final Item WEATHERED_CUT_COPPER_STAIRS;
   public static final Item OXIDIZED_CUT_COPPER_STAIRS;
   public static final Item CUT_COPPER_SLAB;
   public static final Item EXPOSED_CUT_COPPER_SLAB;
   public static final Item WEATHERED_CUT_COPPER_SLAB;
   public static final Item OXIDIZED_CUT_COPPER_SLAB;
   public static final Item WAXED_COPPER_BLOCK;
   public static final Item WAXED_EXPOSED_COPPER;
   public static final Item WAXED_WEATHERED_COPPER;
   public static final Item WAXED_OXIDIZED_COPPER;
   public static final Item WAXED_CUT_COPPER;
   public static final Item WAXED_EXPOSED_CUT_COPPER;
   public static final Item WAXED_WEATHERED_CUT_COPPER;
   public static final Item WAXED_OXIDIZED_CUT_COPPER;
   public static final Item WAXED_CUT_COPPER_STAIRS;
   public static final Item WAXED_EXPOSED_CUT_COPPER_STAIRS;
   public static final Item WAXED_WEATHERED_CUT_COPPER_STAIRS;
   public static final Item WAXED_OXIDIZED_CUT_COPPER_STAIRS;
   public static final Item WAXED_CUT_COPPER_SLAB;
   public static final Item WAXED_EXPOSED_CUT_COPPER_SLAB;
   public static final Item WAXED_WEATHERED_CUT_COPPER_SLAB;
   public static final Item WAXED_OXIDIZED_CUT_COPPER_SLAB;
   public static final Item OAK_LOG;
   public static final Item SPRUCE_LOG;
   public static final Item BIRCH_LOG;
   public static final Item JUNGLE_LOG;
   public static final Item ACACIA_LOG;
   public static final Item DARK_OAK_LOG;
   public static final Item MANGROVE_LOG;
   public static final Item MANGROVE_ROOTS;
   public static final Item MUDDY_MANGROVE_ROOTS;
   public static final Item CRIMSON_STEM;
   public static final Item WARPED_STEM;
   public static final Item STRIPPED_OAK_LOG;
   public static final Item STRIPPED_SPRUCE_LOG;
   public static final Item STRIPPED_BIRCH_LOG;
   public static final Item STRIPPED_JUNGLE_LOG;
   public static final Item STRIPPED_ACACIA_LOG;
   public static final Item STRIPPED_DARK_OAK_LOG;
   public static final Item STRIPPED_MANGROVE_LOG;
   public static final Item STRIPPED_CRIMSON_STEM;
   public static final Item STRIPPED_WARPED_STEM;
   public static final Item STRIPPED_OAK_WOOD;
   public static final Item STRIPPED_SPRUCE_WOOD;
   public static final Item STRIPPED_BIRCH_WOOD;
   public static final Item STRIPPED_JUNGLE_WOOD;
   public static final Item STRIPPED_ACACIA_WOOD;
   public static final Item STRIPPED_DARK_OAK_WOOD;
   public static final Item STRIPPED_MANGROVE_WOOD;
   public static final Item STRIPPED_CRIMSON_HYPHAE;
   public static final Item STRIPPED_WARPED_HYPHAE;
   public static final Item OAK_WOOD;
   public static final Item SPRUCE_WOOD;
   public static final Item BIRCH_WOOD;
   public static final Item JUNGLE_WOOD;
   public static final Item ACACIA_WOOD;
   public static final Item DARK_OAK_WOOD;
   public static final Item MANGROVE_WOOD;
   public static final Item CRIMSON_HYPHAE;
   public static final Item WARPED_HYPHAE;
   public static final Item OAK_LEAVES;
   public static final Item SPRUCE_LEAVES;
   public static final Item BIRCH_LEAVES;
   public static final Item JUNGLE_LEAVES;
   public static final Item ACACIA_LEAVES;
   public static final Item DARK_OAK_LEAVES;
   public static final Item MANGROVE_LEAVES;
   public static final Item AZALEA_LEAVES;
   public static final Item FLOWERING_AZALEA_LEAVES;
   public static final Item SPONGE;
   public static final Item WET_SPONGE;
   public static final Item GLASS;
   public static final Item TINTED_GLASS;
   public static final Item LAPIS_BLOCK;
   public static final Item SANDSTONE;
   public static final Item CHISELED_SANDSTONE;
   public static final Item CUT_SANDSTONE;
   public static final Item COBWEB;
   public static final Item GRASS;
   public static final Item FERN;
   public static final Item AZALEA;
   public static final Item FLOWERING_AZALEA;
   public static final Item DEAD_BUSH;
   public static final Item SEAGRASS;
   public static final Item SEA_PICKLE;
   public static final Item WHITE_WOOL;
   public static final Item ORANGE_WOOL;
   public static final Item MAGENTA_WOOL;
   public static final Item LIGHT_BLUE_WOOL;
   public static final Item YELLOW_WOOL;
   public static final Item LIME_WOOL;
   public static final Item PINK_WOOL;
   public static final Item GRAY_WOOL;
   public static final Item LIGHT_GRAY_WOOL;
   public static final Item CYAN_WOOL;
   public static final Item PURPLE_WOOL;
   public static final Item BLUE_WOOL;
   public static final Item BROWN_WOOL;
   public static final Item GREEN_WOOL;
   public static final Item RED_WOOL;
   public static final Item BLACK_WOOL;
   public static final Item DANDELION;
   public static final Item POPPY;
   public static final Item BLUE_ORCHID;
   public static final Item ALLIUM;
   public static final Item AZURE_BLUET;
   public static final Item RED_TULIP;
   public static final Item ORANGE_TULIP;
   public static final Item WHITE_TULIP;
   public static final Item PINK_TULIP;
   public static final Item OXEYE_DAISY;
   public static final Item CORNFLOWER;
   public static final Item LILY_OF_THE_VALLEY;
   public static final Item WITHER_ROSE;
   public static final Item SPORE_BLOSSOM;
   public static final Item BROWN_MUSHROOM;
   public static final Item RED_MUSHROOM;
   public static final Item CRIMSON_FUNGUS;
   public static final Item WARPED_FUNGUS;
   public static final Item CRIMSON_ROOTS;
   public static final Item WARPED_ROOTS;
   public static final Item NETHER_SPROUTS;
   public static final Item WEEPING_VINES;
   public static final Item TWISTING_VINES;
   public static final Item SUGAR_CANE;
   public static final Item KELP;
   public static final Item MOSS_CARPET;
   public static final Item MOSS_BLOCK;
   public static final Item HANGING_ROOTS;
   public static final Item BIG_DRIPLEAF;
   public static final Item SMALL_DRIPLEAF;
   public static final Item BAMBOO;
   public static final Item OAK_SLAB;
   public static final Item SPRUCE_SLAB;
   public static final Item BIRCH_SLAB;
   public static final Item JUNGLE_SLAB;
   public static final Item ACACIA_SLAB;
   public static final Item DARK_OAK_SLAB;
   public static final Item MANGROVE_SLAB;
   public static final Item CRIMSON_SLAB;
   public static final Item WARPED_SLAB;
   public static final Item STONE_SLAB;
   public static final Item SMOOTH_STONE_SLAB;
   public static final Item SANDSTONE_SLAB;
   public static final Item CUT_STANDSTONE_SLAB;
   public static final Item PETRIFIED_OAK_SLAB;
   public static final Item COBBLESTONE_SLAB;
   public static final Item BRICK_SLAB;
   public static final Item STONE_BRICK_SLAB;
   public static final Item MUD_BRICK_SLAB;
   public static final Item NETHER_BRICK_SLAB;
   public static final Item QUARTZ_SLAB;
   public static final Item RED_SANDSTONE_SLAB;
   public static final Item CUT_RED_SANDSTONE_SLAB;
   public static final Item PURPUR_SLAB;
   public static final Item PRISMARINE_SLAB;
   public static final Item PRISMARINE_BRICK_SLAB;
   public static final Item DARK_PRISMARINE_SLAB;
   public static final Item SMOOTH_QUARTZ;
   public static final Item SMOOTH_RED_SANDSTONE;
   public static final Item SMOOTH_SANDSTONE;
   public static final Item SMOOTH_STONE;
   public static final Item BRICKS;
   public static final Item BOOKSHELF;
   public static final Item MOSSY_COBBLESTONE;
   public static final Item OBSIDIAN;
   public static final Item TORCH;
   public static final Item END_ROD;
   public static final Item CHORUS_PLANT;
   public static final Item CHORUS_FLOWER;
   public static final Item PURPUR_BLOCK;
   public static final Item PURPUR_PILLAR;
   public static final Item PURPUR_STAIRS;
   public static final Item SPAWNER;
   public static final Item CHEST;
   public static final Item CRAFTING_TABLE;
   public static final Item FARMLAND;
   public static final Item FURNACE;
   public static final Item LADDER;
   public static final Item COBBLESTONE_STAIRS;
   public static final Item SNOW;
   public static final Item ICE;
   public static final Item SNOW_BLOCK;
   public static final Item CACTUS;
   public static final Item CLAY;
   public static final Item JUKEBOX;
   public static final Item OAK_FENCE;
   public static final Item SPRUCE_FENCE;
   public static final Item BIRCH_FENCE;
   public static final Item JUNGLE_FENCE;
   public static final Item ACACIA_FENCE;
   public static final Item DARK_OAK_FENCE;
   public static final Item MANGROVE_FENCE;
   public static final Item CRIMSON_FENCE;
   public static final Item WARPED_FENCE;
   public static final Item PUMPKIN;
   public static final Item CARVED_PUMPKIN;
   public static final Item JACK_O_LANTERN;
   public static final Item NETHERRACK;
   public static final Item SOUL_SAND;
   public static final Item SOUL_SOIL;
   public static final Item BASALT;
   public static final Item POLISHED_BASALT;
   public static final Item SMOOTH_BASALT;
   public static final Item SOUL_TORCH;
   public static final Item GLOWSTONE;
   public static final Item INFESTED_STONE;
   public static final Item INFESTED_COBBLESTONE;
   public static final Item INFESTED_STONE_BRICKS;
   public static final Item INFESTED_MOSSY_STONE_BRICKS;
   public static final Item INFESTED_CRACKED_STONE_BRICKS;
   public static final Item INFESTED_CHISELED_STONE_BRICKS;
   public static final Item INFESTED_DEEPSLATE;
   public static final Item STONE_BRICKS;
   public static final Item MOSSY_STONE_BRICKS;
   public static final Item CRACKED_STONE_BRICKS;
   public static final Item CHISELED_STONE_BRICKS;
   public static final Item PACKED_MUD;
   public static final Item MUD_BRICKS;
   public static final Item DEEPSLATE_BRICKS;
   public static final Item CRACKED_DEEPSLATE_BRICKS;
   public static final Item DEEPSLATE_TILES;
   public static final Item CRACKED_DEEPSLATE_TILES;
   public static final Item CHISELED_DEEPSLATE;
   public static final Item REINFORCED_DEEPSLATE;
   public static final Item BROWN_MUSHROOM_BLOCK;
   public static final Item RED_MUSHROOM_BLOCK;
   public static final Item MUSHROOM_STEM;
   public static final Item IRON_BARS;
   public static final Item CHAIN;
   public static final Item GLASS_PANE;
   public static final Item MELON;
   public static final Item VINE;
   public static final Item GLOW_LICHEN;
   public static final Item BRICK_STAIRS;
   public static final Item STONE_BRICK_STAIRS;
   public static final Item MUD_BRICK_STAIRS;
   public static final Item MYCELIUM;
   public static final Item LILY_PAD;
   public static final Item NETHER_BRICKS;
   public static final Item CRACKED_NETHER_BRICKS;
   public static final Item CHISELED_NETHER_BRICKS;
   public static final Item NETHER_BRICK_FENCE;
   public static final Item NETHER_BRICK_STAIRS;
   public static final Item SCULK;
   public static final Item SCULK_VEIN;
   public static final Item SCULK_CATALYST;
   public static final Item SCULK_SHRIEKER;
   public static final Item ENCHANTING_TABLE;
   public static final Item END_PORTAL_FRAME;
   public static final Item END_STONE;
   public static final Item END_STONE_BRICKS;
   public static final Item DRAGON_EGG;
   public static final Item SANDSTONE_STAIRS;
   public static final Item ENDER_CHEST;
   public static final Item EMERALD_BLOCK;
   public static final Item OAK_STAIRS;
   public static final Item SPRUCE_STAIRS;
   public static final Item BIRCH_STAIRS;
   public static final Item JUNGLE_STAIRS;
   public static final Item ACACIA_STAIRS;
   public static final Item DARK_OAK_STAIRS;
   public static final Item MANGROVE_STAIRS;
   public static final Item CRIMSON_STAIRS;
   public static final Item WARPED_STAIRS;
   public static final Item COMMAND_BLOCK;
   public static final Item BEACON;
   public static final Item COBBLESTONE_WALL;
   public static final Item MOSSY_COBBLESTONE_WALL;
   public static final Item BRICK_WALL;
   public static final Item PRISMARINE_WALL;
   public static final Item RED_SANDSTONE_WALL;
   public static final Item MOSSY_STONE_BRICK_WALL;
   public static final Item GRANITE_WALL;
   public static final Item STONE_BRICK_WALL;
   public static final Item MUD_BRICK_WALL;
   public static final Item NETHER_BRICK_WALL;
   public static final Item ANDESITE_WALL;
   public static final Item RED_NETHER_BRICK_WALL;
   public static final Item SANDSTONE_WALL;
   public static final Item END_STONE_BRICK_WALL;
   public static final Item DIORITE_WALL;
   public static final Item BLACKSTONE_WALL;
   public static final Item POLISHED_BLACKSTONE_WALL;
   public static final Item POLISHED_BLACKSTONE_BRICK_WALL;
   public static final Item COBBLED_DEEPSLATE_WALL;
   public static final Item POLISHED_DEEPSLATE_WALL;
   public static final Item DEEPSLATE_BRICK_WALL;
   public static final Item DEEPSLATE_TILE_WALL;
   public static final Item ANVIL;
   public static final Item CHIPPED_ANVIL;
   public static final Item DAMAGED_ANVIL;
   public static final Item CHISELED_QUARTZ_BLOCK;
   public static final Item QUARTZ_BLOCK;
   public static final Item QUARTZ_BRICKS;
   public static final Item QUARTZ_PILLAR;
   public static final Item QUARTZ_STAIRS;
   public static final Item WHITE_TERRACOTTA;
   public static final Item ORANGE_TERRACOTTA;
   public static final Item MAGENTA_TERRACOTTA;
   public static final Item LIGHT_BLUE_TERRACOTTA;
   public static final Item YELLOW_TERRACOTTA;
   public static final Item LIME_TERRACOTTA;
   public static final Item PINK_TERRACOTTA;
   public static final Item GRAY_TERRACOTTA;
   public static final Item LIGHT_GRAY_TERRACOTTA;
   public static final Item CYAN_TERRACOTTA;
   public static final Item PURPLE_TERRACOTTA;
   public static final Item BLUE_TERRACOTTA;
   public static final Item BROWN_TERRACOTTA;
   public static final Item GREEN_TERRACOTTA;
   public static final Item RED_TERRACOTTA;
   public static final Item BLACK_TERRACOTTA;
   public static final Item BARRIER;
   public static final Item LIGHT;
   public static final Item HAY_BLOCK;
   public static final Item WHITE_CARPET;
   public static final Item ORANGE_CARPET;
   public static final Item MAGENTA_CARPET;
   public static final Item LIGHT_BLUE_CARPET;
   public static final Item YELLOW_CARPET;
   public static final Item LIME_CARPET;
   public static final Item PINK_CARPET;
   public static final Item GRAY_CARPET;
   public static final Item LIGHT_GRAY_CARPET;
   public static final Item CYAN_CARPET;
   public static final Item PURPLE_CARPET;
   public static final Item BLUE_CARPET;
   public static final Item BROWN_CARPET;
   public static final Item GREEN_CARPET;
   public static final Item RED_CARPET;
   public static final Item BLACK_CARPET;
   public static final Item TERRACOTTA;
   public static final Item PACKED_ICE;
   public static final Item DIRT_PATH;
   public static final Item SUNFLOWER;
   public static final Item LILAC;
   public static final Item ROSE_BUSH;
   public static final Item PEONY;
   public static final Item TALL_GRASS;
   public static final Item LARGE_FERN;
   public static final Item WHITE_STAINED_GLASS;
   public static final Item ORANGE_STAINED_GLASS;
   public static final Item MAGENTA_STAINED_GLASS;
   public static final Item LIGHT_BLUE_STAINED_GLASS;
   public static final Item YELLOW_STAINED_GLASS;
   public static final Item LIME_STAINED_GLASS;
   public static final Item PINK_STAINED_GLASS;
   public static final Item GRAY_STAINED_GLASS;
   public static final Item LIGHT_GRAY_STAINED_GLASS;
   public static final Item CYAN_STAINED_GLASS;
   public static final Item PURPLE_STAINED_GLASS;
   public static final Item BLUE_STAINED_GLASS;
   public static final Item BROWN_STAINED_GLASS;
   public static final Item GREEN_STAINED_GLASS;
   public static final Item RED_STAINED_GLASS;
   public static final Item BLACK_STAINED_GLASS;
   public static final Item WHITE_STAINED_GLASS_PANE;
   public static final Item ORANGE_STAINED_GLASS_PANE;
   public static final Item MAGENTA_STAINED_GLASS_PANE;
   public static final Item LIGHT_BLUE_STAINED_GLASS_PANE;
   public static final Item YELLOW_STAINED_GLASS_PANE;
   public static final Item LIME_STAINED_GLASS_PANE;
   public static final Item PINK_STAINED_GLASS_PANE;
   public static final Item GRAY_STAINED_GLASS_PANE;
   public static final Item LIGHT_GRAY_STAINED_GLASS_PANE;
   public static final Item CYAN_STAINED_GLASS_PANE;
   public static final Item PURPLE_STAINED_GLASS_PANE;
   public static final Item BLUE_STAINED_GLASS_PANE;
   public static final Item BROWN_STAINED_GLASS_PANE;
   public static final Item GREEN_STAINED_GLASS_PANE;
   public static final Item RED_STAINED_GLASS_PANE;
   public static final Item BLACK_STAINED_GLASS_PANE;
   public static final Item PRISMARINE;
   public static final Item PRISMARINE_BRICKS;
   public static final Item DARK_PRISMARINE;
   public static final Item PRISMARINE_STAIRS;
   public static final Item PRISMARINE_BRICK_STAIRS;
   public static final Item DARK_PRISMARINE_STAIRS;
   public static final Item SEA_LANTERN;
   public static final Item RED_SANDSTONE;
   public static final Item CHISELED_RED_SANDSTONE;
   public static final Item CUT_RED_SANDSTONE;
   public static final Item RED_SANDSTONE_STAIRS;
   public static final Item REPEATING_COMMAND_BLOCK;
   public static final Item CHAIN_COMMAND_BLOCK;
   public static final Item MAGMA_BLOCK;
   public static final Item NETHER_WART_BLOCK;
   public static final Item WARPED_WART_BLOCK;
   public static final Item RED_NETHER_BRICKS;
   public static final Item BONE_BLOCK;
   public static final Item STRUCTURE_VOID;
   public static final Item SHULKER_BOX;
   public static final Item WHITE_SHULKER_BOX;
   public static final Item ORANGE_SHULKER_BOX;
   public static final Item MAGENTA_SHULKER_BOX;
   public static final Item LIGHT_BLUE_SHULKER_BOX;
   public static final Item YELLOW_SHULKER_BOX;
   public static final Item LIME_SHULKER_BOX;
   public static final Item PINK_SHULKER_BOX;
   public static final Item GRAY_SHULKER_BOX;
   public static final Item LIGHT_GRAY_SHULKER_BOX;
   public static final Item CYAN_SHULKER_BOX;
   public static final Item PURPLE_SHULKER_BOX;
   public static final Item BLUE_SHULKER_BOX;
   public static final Item BROWN_SHULKER_BOX;
   public static final Item GREEN_SHULKER_BOX;
   public static final Item RED_SHULKER_BOX;
   public static final Item BLACK_SHULKER_BOX;
   public static final Item WHITE_GLAZED_TERRACOTTA;
   public static final Item ORANGE_GLAZED_TERRACOTTA;
   public static final Item MAGENTA_GLAZED_TERRACOTTA;
   public static final Item LIGHT_BLUE_GLAZED_TERRACOTTA;
   public static final Item YELLOW_GLAZED_TERRACOTTA;
   public static final Item LIME_GLAZED_TERRACOTTA;
   public static final Item PINK_GLAZED_TERRACOTTA;
   public static final Item GRAY_GLAZED_TERRACOTTA;
   public static final Item LIGHT_GRAY_GLAZED_TERRACOTTA;
   public static final Item CYAN_GLAZED_TERRACOTTA;
   public static final Item PURPLE_GLAZED_TERRACOTTA;
   public static final Item BLUE_GLAZED_TERRACOTTA;
   public static final Item BROWN_GLAZED_TERRACOTTA;
   public static final Item GREEN_GLAZED_TERRACOTTA;
   public static final Item RED_GLAZED_TERRACOTTA;
   public static final Item BLACK_GLAZED_TERRACOTTA;
   public static final Item WHITE_CONCRETE;
   public static final Item ORANGE_CONCRETE;
   public static final Item MAGENTA_CONCRETE;
   public static final Item LIGHT_BLUE_CONCRETE;
   public static final Item YELLOW_CONCRETE;
   public static final Item LIME_CONCRETE;
   public static final Item PINK_CONCRETE;
   public static final Item GRAY_CONCRETE;
   public static final Item LIGHT_GRAY_CONCRETE;
   public static final Item CYAN_CONCRETE;
   public static final Item PURPLE_CONCRETE;
   public static final Item BLUE_CONCRETE;
   public static final Item BROWN_CONCRETE;
   public static final Item GREEN_CONCRETE;
   public static final Item RED_CONCRETE;
   public static final Item BLACK_CONCRETE;
   public static final Item WHITE_CONCRETE_POWDER;
   public static final Item ORANGE_CONCRETE_POWDER;
   public static final Item MAGENTA_CONCRETE_POWDER;
   public static final Item LIGHT_BLUE_CONCRETE_POWDER;
   public static final Item YELLOW_CONCRETE_POWDER;
   public static final Item LIME_CONCRETE_POWDER;
   public static final Item PINK_CONCRETE_POWDER;
   public static final Item GRAY_CONCRETE_POWDER;
   public static final Item LIGHT_GRAY_CONCRETE_POWDER;
   public static final Item CYAN_CONCRETE_POWDER;
   public static final Item PURPLE_CONCRETE_POWDER;
   public static final Item BLUE_CONCRETE_POWDER;
   public static final Item BROWN_CONCRETE_POWDER;
   public static final Item GREEN_CONCRETE_POWDER;
   public static final Item RED_CONCRETE_POWDER;
   public static final Item BLACK_CONCRETE_POWDER;
   public static final Item TURTLE_EGG;
   public static final Item DEAD_TUBE_CORAL_BLOCK;
   public static final Item DEAD_BRAIN_CORAL_BLOCK;
   public static final Item DEAD_BUBBLE_CORAL_BLOCK;
   public static final Item DEAD_FIRE_CORAL_BLOCK;
   public static final Item DEAD_HORN_CORAL_BLOCK;
   public static final Item TUBE_CORAL_BLOCK;
   public static final Item BRAIN_CORAL_BLOCK;
   public static final Item BUBBLE_CORAL_BLOCK;
   public static final Item FIRE_CORAL_BLOCK;
   public static final Item HORN_CORAL_BLOCK;
   public static final Item TUBE_CORAL;
   public static final Item BRAIN_CORAL;
   public static final Item BUBBLE_CORAL;
   public static final Item FIRE_CORAL;
   public static final Item HORN_CORAL;
   public static final Item DEAD_BRAIN_CORAL;
   public static final Item DEAD_BUBBLE_CORAL;
   public static final Item DEAD_FIRE_CORAL;
   public static final Item DEAD_HORN_CORAL;
   public static final Item DEAD_TUBE_CORAL;
   public static final Item TUBE_CORAL_FAN;
   public static final Item BRAIN_CORAL_FAN;
   public static final Item BUBBLE_CORAL_FAN;
   public static final Item FIRE_CORAL_FAN;
   public static final Item HORN_CORAL_FAN;
   public static final Item DEAD_TUBE_CORAL_FAN;
   public static final Item DEAD_BRAIN_CORAL_FAN;
   public static final Item DEAD_BUBBLE_CORAL_FAN;
   public static final Item DEAD_FIRE_CORAL_FAN;
   public static final Item DEAD_HORN_CORAL_FAN;
   public static final Item BLUE_ICE;
   public static final Item CONDUIT;
   public static final Item POLISHED_GRANITE_STAIRS;
   public static final Item SMOOTH_RED_SANDSTONE_STAIRS;
   public static final Item MOSSY_STONE_BRICK_STAIRS;
   public static final Item POLISHED_DIORITE_STAIRS;
   public static final Item MOSSY_COBBLESTONE_STAIRS;
   public static final Item END_STONE_BRICK_STAIRS;
   public static final Item STONE_STAIRS;
   public static final Item SMOOTH_SANDSTONE_STAIRS;
   public static final Item SMOOTH_QUARTZ_STAIRS;
   public static final Item GRANITE_STAIRS;
   public static final Item ANDESITE_STAIRS;
   public static final Item RED_NETHER_BRICK_STAIRS;
   public static final Item POLISHED_ANDESITE_STAIRS;
   public static final Item DIORITE_STAIRS;
   public static final Item COBBLED_DEEPSLATE_STAIRS;
   public static final Item POLISHED_DEEPSLATE_STAIRS;
   public static final Item DEEPSLATE_BRICK_STAIRS;
   public static final Item DEEPSLATE_TILE_STAIRS;
   public static final Item POLISHED_GRANITE_SLAB;
   public static final Item SMOOTH_RED_SANDSTONE_SLAB;
   public static final Item MOSSY_STONE_BRICK_SLAB;
   public static final Item POLISHED_DIORITE_SLAB;
   public static final Item MOSSY_COBBLESTONE_SLAB;
   public static final Item END_STONE_BRICK_SLAB;
   public static final Item SMOOTH_SANDSTONE_SLAB;
   public static final Item SMOOTH_QUARTZ_SLAB;
   public static final Item GRANITE_SLAB;
   public static final Item ANDESITE_SLAB;
   public static final Item RED_NETHER_BRICK_SLAB;
   public static final Item POLISHED_ANDESITE_SLAB;
   public static final Item DIORITE_SLAB;
   public static final Item COBBLED_DEEPSLATE_SLAB;
   public static final Item POLISHED_DEEPSLATE_SLAB;
   public static final Item DEEPSLATE_BRICK_SLAB;
   public static final Item DEEPSLATE_TILE_SLAB;
   public static final Item SCAFFOLDING;
   public static final Item REDSTONE;
   public static final Item REDSTONE_TORCH;
   public static final Item REDSTONE_BLOCK;
   public static final Item REPEATER;
   public static final Item COMPARATOR;
   public static final Item PISTON;
   public static final Item STICKY_PISTON;
   public static final Item SLIME_BLOCK;
   public static final Item HONEY_BLOCK;
   public static final Item OBSERVER;
   public static final Item HOPPER;
   public static final Item DISPENSER;
   public static final Item DROPPER;
   public static final Item LECTERN;
   public static final Item TARGET;
   public static final Item LEVER;
   public static final Item LIGHTNING_ROD;
   public static final Item DAYLIGHT_DETECTOR;
   public static final Item SCULK_SENSOR;
   public static final Item TRIPWIRE_HOOK;
   public static final Item TRAPPED_CHEST;
   public static final Item TNT;
   public static final Item REDSTONE_LAMP;
   public static final Item NOTE_BLOCK;
   public static final Item STONE_BUTTON;
   public static final Item POLISHED_BLACKSTONE_BUTTON;
   public static final Item OAK_BUTTON;
   public static final Item SPRUCE_BUTTON;
   public static final Item BIRCH_BUTTON;
   public static final Item JUNGLE_BUTTON;
   public static final Item ACACIA_BUTTON;
   public static final Item DARK_OAK_BUTTON;
   public static final Item MANGROVE_BUTTON;
   public static final Item CRIMSON_BUTTON;
   public static final Item WARPED_BUTTON;
   public static final Item STONE_PRESSURE_PLATE;
   public static final Item POLISHED_BLACKSTONE_PRESSURE_PLATE;
   public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE;
   public static final Item HEAVY_WEIGHTED_PRESSURE_PLATE;
   public static final Item OAK_PRESSURE_PLATE;
   public static final Item SPRUCE_PRESSURE_PLATE;
   public static final Item BIRCH_PRESSURE_PLATE;
   public static final Item JUNGLE_PRESSURE_PLATE;
   public static final Item ACACIA_PRESSURE_PLATE;
   public static final Item DARK_OAK_PRESSURE_PLATE;
   public static final Item MANGROVE_PRESSURE_PLATE;
   public static final Item CRIMSON_PRESSURE_PLATE;
   public static final Item WARPED_PRESSURE_PLATE;
   public static final Item IRON_DOOR;
   public static final Item OAK_DOOR;
   public static final Item SPRUCE_DOOR;
   public static final Item BIRCH_DOOR;
   public static final Item JUNGLE_DOOR;
   public static final Item ACACIA_DOOR;
   public static final Item DARK_OAK_DOOR;
   public static final Item MANGROVE_DOOR;
   public static final Item CRIMSON_DOOR;
   public static final Item WARPED_DOOR;
   public static final Item IRON_TRAPDOOR;
   public static final Item OAK_TRAPDOOR;
   public static final Item SPRUCE_TRAPDOOR;
   public static final Item BIRCH_TRAPDOOR;
   public static final Item JUNGLE_TRAPDOOR;
   public static final Item ACACIA_TRAPDOOR;
   public static final Item DARK_OAK_TRAPDOOR;
   public static final Item MANGROVE_TRAPDOOR;
   public static final Item CRIMSON_TRAPDOOR;
   public static final Item WARPED_TRAPDOOR;
   public static final Item OAK_FENCE_GATE;
   public static final Item SPRUCE_FENCE_GATE;
   public static final Item BIRCH_FENCE_GATE;
   public static final Item JUNGLE_FENCE_GATE;
   public static final Item ACACIA_FENCE_GATE;
   public static final Item DARK_OAK_FENCE_GATE;
   public static final Item MANGROVE_FENCE_GATE;
   public static final Item CRIMSON_FENCE_GATE;
   public static final Item WARPED_FENCE_GATE;
   public static final Item POWERED_RAIL;
   public static final Item DETECTOR_RAIL;
   public static final Item RAIL;
   public static final Item ACTIVATOR_RAIL;
   public static final Item SADDLE;
   public static final Item MINECART;
   public static final Item CHEST_MINECART;
   public static final Item FURNACE_MINECART;
   public static final Item TNT_MINECART;
   public static final Item HOPPER_MINECART;
   public static final Item CARROT_ON_A_STICK;
   public static final Item WARPED_FUNGUS_ON_A_STICK;
   public static final Item ELYTRA;
   public static final Item OAK_BOAT;
   public static final Item OAK_CHEST_BOAT;
   public static final Item SPRUCE_BOAT;
   public static final Item SPRUCE_CHEST_BOAT;
   public static final Item BIRCH_BOAT;
   public static final Item BIRCH_CHEST_BOAT;
   public static final Item JUNGLE_BOAT;
   public static final Item JUNGLE_CHEST_BOAT;
   public static final Item ACACIA_BOAT;
   public static final Item ACACIA_CHEST_BOAT;
   public static final Item DARK_OAK_BOAT;
   public static final Item DARK_OAK_CHEST_BOAT;
   public static final Item MANGROVE_BOAT;
   public static final Item MANGROVE_CHEST_BOAT;
   public static final Item STRUCTURE_BLOCK;
   public static final Item JIGSAW;
   public static final Item TURTLE_HELMET;
   public static final Item SCUTE;
   public static final Item FLINT_AND_STEEL;
   public static final Item APPLE;
   public static final Item BOW;
   public static final Item ARROW;
   public static final Item COAL;
   public static final Item CHARCOAL;
   public static final Item DIAMOND;
   public static final Item EMERALD;
   public static final Item LAPIS_LAZULI;
   public static final Item QUARTZ;
   public static final Item AMETHYST_SHARD;
   public static final Item RAW_IRON;
   public static final Item IRON_INGOT;
   public static final Item RAW_COPPER;
   public static final Item COPPER_INGOT;
   public static final Item RAW_GOLD;
   public static final Item GOLD_INGOT;
   public static final Item NETHERITE_INGOT;
   public static final Item NETHERITE_SCRAP;
   public static final Item WOODEN_SWORD;
   public static final Item WOODEN_SHOVEL;
   public static final Item WOODEN_PICKAXE;
   public static final Item WOODEN_AXE;
   public static final Item WOODEN_HOE;
   public static final Item STONE_SWORD;
   public static final Item STONE_SHOVEL;
   public static final Item STONE_PICKAXE;
   public static final Item STONE_AXE;
   public static final Item STONE_HOE;
   public static final Item GOLDEN_SWORD;
   public static final Item GOLDEN_SHOVEL;
   public static final Item GOLDEN_PICKAXE;
   public static final Item GOLDEN_AXE;
   public static final Item GOLDEN_HOE;
   public static final Item IRON_SWORD;
   public static final Item IRON_SHOVEL;
   public static final Item IRON_PICKAXE;
   public static final Item IRON_AXE;
   public static final Item IRON_HOE;
   public static final Item DIAMOND_SWORD;
   public static final Item DIAMOND_SHOVEL;
   public static final Item DIAMOND_PICKAXE;
   public static final Item DIAMOND_AXE;
   public static final Item DIAMOND_HOE;
   public static final Item NETHERITE_SWORD;
   public static final Item NETHERITE_SHOVEL;
   public static final Item NETHERITE_PICKAXE;
   public static final Item NETHERITE_AXE;
   public static final Item NETHERITE_HOE;
   public static final Item STICK;
   public static final Item BOWL;
   public static final Item MUSHROOM_STEW;
   public static final Item STRING;
   public static final Item FEATHER;
   public static final Item GUNPOWDER;
   public static final Item WHEAT_SEEDS;
   public static final Item WHEAT;
   public static final Item BREAD;
   public static final Item LEATHER_HELMET;
   public static final Item LEATHER_CHESTPLATE;
   public static final Item LEATHER_LEGGINGS;
   public static final Item LEATHER_BOOTS;
   public static final Item CHAINMAIL_HELMET;
   public static final Item CHAINMAIL_CHESTPLATE;
   public static final Item CHAINMAIL_LEGGINGS;
   public static final Item CHAINMAIL_BOOTS;
   public static final Item IRON_HELMET;
   public static final Item IRON_CHESTPLATE;
   public static final Item IRON_LEGGINGS;
   public static final Item IRON_BOOTS;
   public static final Item DIAMOND_HELMET;
   public static final Item DIAMOND_CHESTPLATE;
   public static final Item DIAMOND_LEGGINGS;
   public static final Item DIAMOND_BOOTS;
   public static final Item GOLDEN_HELMET;
   public static final Item GOLDEN_CHESTPLATE;
   public static final Item GOLDEN_LEGGINGS;
   public static final Item GOLDEN_BOOTS;
   public static final Item NETHERITE_HELMET;
   public static final Item NETHERITE_CHESTPLATE;
   public static final Item NETHERITE_LEGGINGS;
   public static final Item NETHERITE_BOOTS;
   public static final Item FLINT;
   public static final Item PORKCHOP;
   public static final Item COOKED_PORKCHOP;
   public static final Item PAINTING;
   public static final Item GOLDEN_APPLE;
   public static final Item ENCHANTED_GOLDEN_APPLE;
   public static final Item OAK_SIGN;
   public static final Item SPRUCE_SIGN;
   public static final Item BIRCH_SIGN;
   public static final Item JUNGLE_SIGN;
   public static final Item ACACIA_SIGN;
   public static final Item DARK_OAK_SIGN;
   public static final Item MANGROVE_SIGN;
   public static final Item CRIMSON_SIGN;
   public static final Item WARPED_SIGN;
   public static final Item BUCKET;
   public static final Item WATER_BUCKET;
   public static final Item LAVA_BUCKET;
   public static final Item POWDER_SNOW_BUCKET;
   public static final Item SNOWBALL;
   public static final Item LEATHER;
   public static final Item MILK_BUCKET;
   public static final Item PUFFERFISH_BUCKET;
   public static final Item SALMON_BUCKET;
   public static final Item COD_BUCKET;
   public static final Item TROPICAL_FISH_BUCKET;
   public static final Item AXOLOTL_BUCKET;
   public static final Item TADPOLE_BUCKET;
   public static final Item BRICK;
   public static final Item CLAY_BALL;
   public static final Item DRIED_KELP_BLOCK;
   public static final Item PAPER;
   public static final Item BOOK;
   public static final Item SLIME_BALL;
   public static final Item EGG;
   public static final Item COMPASS;
   public static final Item RECOVERY_COMPASS;
   public static final Item BUNDLE;
   public static final Item FISHING_ROD;
   public static final Item CLOCK;
   public static final Item SPYGLASS;
   public static final Item GLOWSTONE_DUST;
   public static final Item COD;
   public static final Item SALMON;
   public static final Item TROPICAL_FISH;
   public static final Item PUFFERFISH;
   public static final Item COOKED_COD;
   public static final Item COOKED_SALMON;
   public static final Item INK_SAC;
   public static final Item GLOW_INK_SAC;
   public static final Item COCOA_BEANS;
   public static final Item WHITE_DYE;
   public static final Item ORANGE_DYE;
   public static final Item MAGENTA_DYE;
   public static final Item LIGHT_BLUE_DYE;
   public static final Item YELLOW_DYE;
   public static final Item LIME_DYE;
   public static final Item PINK_DYE;
   public static final Item GRAY_DYE;
   public static final Item LIGHT_GRAY_DYE;
   public static final Item CYAN_DYE;
   public static final Item PURPLE_DYE;
   public static final Item BLUE_DYE;
   public static final Item BROWN_DYE;
   public static final Item GREEN_DYE;
   public static final Item RED_DYE;
   public static final Item BLACK_DYE;
   public static final Item BONE_MEAL;
   public static final Item BONE;
   public static final Item SUGAR;
   public static final Item CAKE;
   public static final Item WHITE_BED;
   public static final Item ORANGE_BED;
   public static final Item MAGENTA_BED;
   public static final Item LIGHT_BLUE_BED;
   public static final Item YELLOW_BED;
   public static final Item LIME_BED;
   public static final Item PINK_BED;
   public static final Item GRAY_BED;
   public static final Item LIGHT_GRAY_BED;
   public static final Item CYAN_BED;
   public static final Item PURPLE_BED;
   public static final Item BLUE_BED;
   public static final Item BROWN_BED;
   public static final Item GREEN_BED;
   public static final Item RED_BED;
   public static final Item BLACK_BED;
   public static final Item COOKIE;
   public static final Item FILLED_MAP;
   public static final Item SHEARS;
   public static final Item MELON_SLICE;
   public static final Item DRIED_KELP;
   public static final Item PUMPKIN_SEEDS;
   public static final Item MELON_SEEDS;
   public static final Item BEEF;
   public static final Item COOKED_BEEF;
   public static final Item CHICKEN;
   public static final Item COOKED_CHICKEN;
   public static final Item ROTTEN_FLESH;
   public static final Item ENDER_PEARL;
   public static final Item BLAZE_ROD;
   public static final Item GHAST_TEAR;
   public static final Item GOLD_NUGGET;
   public static final Item NETHER_WART;
   public static final Item POTION;
   public static final Item GLASS_BOTTLE;
   public static final Item SPIDER_EYE;
   public static final Item FERMENTED_SPIDER_EYE;
   public static final Item BLAZE_POWDER;
   public static final Item MAGMA_CREAM;
   public static final Item BREWING_STAND;
   public static final Item CAULDRON;
   public static final Item ENDER_EYE;
   public static final Item GLISTERING_MELON_SLICE;
   public static final Item ALLAY_SPAWN_EGG;
   public static final Item AXOLOTL_SPAWN_EGG;
   public static final Item BAT_SPAWN_EGG;
   public static final Item BEE_SPAWN_EGG;
   public static final Item BLAZE_SPAWN_EGG;
   public static final Item CAT_SPAWN_EGG;
   public static final Item CAVE_SPIDER_SPAWN_EGG;
   public static final Item CHICKEN_SPAWN_EGG;
   public static final Item COD_SPAWN_EGG;
   public static final Item COW_SPAWN_EGG;
   public static final Item CREEPER_SPAWN_EGG;
   public static final Item DOLPHIN_SPAWN_EGG;
   public static final Item DONKEY_SPAWN_EGG;
   public static final Item DROWNED_SPAWN_EGG;
   public static final Item ELDER_GUARDIAN_SPAWN_EGG;
   public static final Item ENDERMAN_SPAWN_EGG;
   public static final Item ENDERMITE_SPAWN_EGG;
   public static final Item EVOKER_SPAWN_EGG;
   public static final Item FOX_SPAWN_EGG;
   public static final Item FROG_SPAWN_EGG;
   public static final Item GHAST_SPAWN_EGG;
   public static final Item GLOW_SQUID_SPAWN_EGG;
   public static final Item GOAT_SPAWN_EGG;
   public static final Item GUARDIAN_SPAWN_EGG;
   public static final Item HOGLIN_SPAWN_EGG;
   public static final Item HORSE_SPAWN_EGG;
   public static final Item HUSK_SPAWN_EGG;
   public static final Item LLAMA_SPAWN_EGG;
   public static final Item MAGMA_CUBE_SPAWN_EGG;
   public static final Item MOOSHROOM_SPAWN_EGG;
   public static final Item MULE_SPAWN_EGG;
   public static final Item OCELOT_SPAWN_EGG;
   public static final Item PANDA_SPAWN_EGG;
   public static final Item PARROT_SPAWN_EGG;
   public static final Item PHANTOM_SPAWN_EGG;
   public static final Item PIG_SPAWN_EGG;
   public static final Item PIGLIN_SPAWN_EGG;
   public static final Item PIGLIN_BRUTE_SPAWN_EGG;
   public static final Item PILLAGER_SPAWN_EGG;
   public static final Item POLAR_BEAR_SPAWN_EGG;
   public static final Item PUFFERFISH_SPAWN_EGG;
   public static final Item RABBIT_SPAWN_EGG;
   public static final Item RAVAGER_SPAWN_EGG;
   public static final Item SALMON_SPAWN_EGG;
   public static final Item SHEEP_SPAWN_EGG;
   public static final Item SHULKER_SPAWN_EGG;
   public static final Item SILVERFISH_SPAWN_EGG;
   public static final Item SKELETON_SPAWN_EGG;
   public static final Item SKELETON_HORSE_SPAWN_EGG;
   public static final Item SLIME_SPAWN_EGG;
   public static final Item SPIDER_SPAWN_EGG;
   public static final Item SQUID_SPAWN_EGG;
   public static final Item STRAY_SPAWN_EGG;
   public static final Item STRIDER_SPAWN_EGG;
   public static final Item TADPOLE_SPAWN_EGG;
   public static final Item TRADER_LLAMA_SPAWN_EGG;
   public static final Item TROPICAL_FISH_SPAWN_EGG;
   public static final Item TURTLE_SPAWN_EGG;
   public static final Item VEX_SPAWN_EGG;
   public static final Item VILLAGER_SPAWN_EGG;
   public static final Item VINDICATOR_SPAWN_EGG;
   public static final Item WANDERING_TRADER_SPAWN_EGG;
   public static final Item WARDEN_SPAWN_EGG;
   public static final Item WITCH_SPAWN_EGG;
   public static final Item WITHER_SKELETON_SPAWN_EGG;
   public static final Item WOLF_SPAWN_EGG;
   public static final Item ZOGLIN_SPAWN_EGG;
   public static final Item ZOMBIE_SPAWN_EGG;
   public static final Item ZOMBIE_HORSE_SPAWN_EGG;
   public static final Item ZOMBIE_VILLAGER_SPAWN_EGG;
   public static final Item ZOMBIFIED_PIGLIN_SPAWN_EGG;
   public static final Item EXPERIENCE_BOTTLE;
   public static final Item FIRE_CHARGE;
   public static final Item WRITABLE_BOOK;
   public static final Item WRITTEN_BOOK;
   public static final Item ITEM_FRAME;
   public static final Item GLOW_ITEM_FRAME;
   public static final Item FLOWER_POT;
   public static final Item CARROT;
   public static final Item POTATO;
   public static final Item BAKED_POTATO;
   public static final Item POISONOUS_POTATO;
   public static final Item MAP;
   public static final Item GOLDEN_CARROT;
   public static final Item SKELETON_SKULL;
   public static final Item WITHER_SKELETON_SKULL;
   public static final Item PLAYER_HEAD;
   public static final Item ZOMBIE_HEAD;
   public static final Item CREEPER_HEAD;
   public static final Item DRAGON_HEAD;
   public static final Item NETHER_STAR;
   public static final Item PUMPKIN_PIE;
   public static final Item FIREWORK_ROCKET;
   public static final Item FIREWORK_STAR;
   public static final Item ENCHANTED_BOOK;
   public static final Item NETHER_BRICK;
   public static final Item PRISMARINE_SHARD;
   public static final Item PRISMARINE_CRYSTALS;
   public static final Item RABBIT;
   public static final Item COOKED_RABBIT;
   public static final Item RABBIT_STEW;
   public static final Item RABBIT_FOOT;
   public static final Item RABBIT_HIDE;
   public static final Item ARMOR_STAND;
   public static final Item IRON_HORSE_ARMOR;
   public static final Item GOLDEN_HORSE_ARMOR;
   public static final Item DIAMOND_HORSE_ARMOR;
   public static final Item LEATHER_HORSE_ARMOR;
   public static final Item LEAD;
   public static final Item NAME_TAG;
   public static final Item COMMAND_BLOCK_MINECART;
   public static final Item MUTTON;
   public static final Item COOKED_MUTTON;
   public static final Item WHITE_BANNER;
   public static final Item ORANGE_BANNER;
   public static final Item MAGENTA_BANNER;
   public static final Item LIGHT_BLUE_BANNER;
   public static final Item YELLOW_BANNER;
   public static final Item LIME_BANNER;
   public static final Item PINK_BANNER;
   public static final Item GRAY_BANNER;
   public static final Item LIGHT_GRAY_BANNER;
   public static final Item CYAN_BANNER;
   public static final Item PURPLE_BANNER;
   public static final Item BLUE_BANNER;
   public static final Item BROWN_BANNER;
   public static final Item GREEN_BANNER;
   public static final Item RED_BANNER;
   public static final Item BLACK_BANNER;
   public static final Item END_CRYSTAL;
   public static final Item CHORUS_FRUIT;
   public static final Item POPPED_CHORUS_FRUIT;
   public static final Item BEETROOT;
   public static final Item BEETROOT_SEEDS;
   public static final Item BEETROOT_SOUP;
   public static final Item DRAGON_BREATH;
   public static final Item SPLASH_POTION;
   public static final Item SPECTRAL_ARROW;
   public static final Item TIPPED_ARROW;
   public static final Item LINGERING_POTION;
   public static final Item SHIELD;
   public static final Item TOTEM_OF_UNDYING;
   public static final Item SHULKER_SHELL;
   public static final Item IRON_NUGGET;
   public static final Item KNOWLEDGE_BOOK;
   public static final Item DEBUG_STICK;
   public static final Item MUSIC_DISC_13;
   public static final Item MUSIC_DISC_CAT;
   public static final Item MUSIC_DISC_BLOCKS;
   public static final Item MUSIC_DISC_CHIRP;
   public static final Item MUSIC_DISC_FAR;
   public static final Item MUSIC_DISC_MALL;
   public static final Item MUSIC_DISC_MELLOHI;
   public static final Item MUSIC_DISC_STAL;
   public static final Item MUSIC_DISC_STRAD;
   public static final Item MUSIC_DISC_WARD;
   public static final Item MUSIC_DISC_11;
   public static final Item MUSIC_DISC_WAIT;
   public static final Item MUSIC_DISC_OTHERSIDE;
   public static final Item MUSIC_DISC_5;
   public static final Item MUSIC_DISC_PIGSTEP;
   public static final Item DISC_FRAGMENT_5;
   public static final Item TRIDENT;
   public static final Item PHANTOM_MEMBRANE;
   public static final Item NAUTILUS_SHELL;
   public static final Item HEART_OF_THE_SEA;
   public static final Item CROSSBOW;
   public static final Item SUSPICIOUS_STEW;
   public static final Item LOOM;
   public static final Item FLOWER_BANNER_PATTERN;
   public static final Item CREEPER_BANNER_PATTERN;
   public static final Item SKULL_BANNER_PATTERN;
   public static final Item MOJANG_BANNER_PATTERN;
   public static final Item GLOBE_BANNER_PATTERN;
   public static final Item PIGLIN_BANNER_PATTERN;
   public static final Item GOAT_HORN;
   public static final Item COMPOSTER;
   public static final Item BARREL;
   public static final Item SMOKER;
   public static final Item BLAST_FURNACE;
   public static final Item CARTOGRAPHY_TABLE;
   public static final Item FLETCHING_TABLE;
   public static final Item GRINDSTONE;
   public static final Item SMITHING_TABLE;
   public static final Item STONECUTTER;
   public static final Item BELL;
   public static final Item LANTERN;
   public static final Item SOUL_LANTERN;
   public static final Item SWEET_BERRIES;
   public static final Item GLOW_BERRIES;
   public static final Item CAMPFIRE;
   public static final Item SOUL_CAMPFIRE;
   public static final Item SHROOMLIGHT;
   public static final Item HONEYCOMB;
   public static final Item BEE_NEST;
   public static final Item BEEHIVE;
   public static final Item HONEY_BOTTLE;
   public static final Item HONEYCOMB_BLOCK;
   public static final Item LODESTONE;
   public static final Item CRYING_OBSIDIAN;
   public static final Item BLACKSTONE;
   public static final Item BLACKSTONE_SLAB;
   public static final Item BLACKSTONE_STAIRS;
   public static final Item GILDED_BLACKSTONE;
   public static final Item POLISHED_BLACKSTONE;
   public static final Item POLISHED_BLACKSTONE_SLAB;
   public static final Item POLISHED_BLACKSTONE_STAIRS;
   public static final Item CHISELED_POLISHED_BLACKSTONE;
   public static final Item POLISHED_BLACKSTONE_BRICKS;
   public static final Item POLISHED_BLACKSTONE_BRICK_SLAB;
   public static final Item POLISHED_BLACKSTONE_BRICK_STAIRS;
   public static final Item CRACKED_POLISHED_BLACKSTONE_BRICKS;
   public static final Item RESPAWN_ANCHOR;
   public static final Item CANDLE;
   public static final Item WHITE_CANDLE;
   public static final Item ORANGE_CANDLE;
   public static final Item MAGENTA_CANDLE;
   public static final Item LIGHT_BLUE_CANDLE;
   public static final Item YELLOW_CANDLE;
   public static final Item LIME_CANDLE;
   public static final Item PINK_CANDLE;
   public static final Item GRAY_CANDLE;
   public static final Item LIGHT_GRAY_CANDLE;
   public static final Item CYAN_CANDLE;
   public static final Item PURPLE_CANDLE;
   public static final Item BLUE_CANDLE;
   public static final Item BROWN_CANDLE;
   public static final Item GREEN_CANDLE;
   public static final Item RED_CANDLE;
   public static final Item BLACK_CANDLE;
   public static final Item SMALL_AMETHYST_BUD;
   public static final Item MEDIUM_AMETHYST_BUD;
   public static final Item LARGE_AMETHYST_BUD;
   public static final Item AMETHYST_CLUSTER;
   public static final Item POINTED_DRIPSTONE;
   public static final Item OCHRE_FROGLIGHT;
   public static final Item VERDANT_FROGLIGHT;
   public static final Item PEARLESCENT_FROGLIGHT;
   public static final Item FROGSPAWN;
   public static final Item ECHO_SHARD;

   public Items() {
      super();
   }

   private static <T> Optional<T> ifPart2(T var0) {
      return Optional.empty();
   }

   private static Item registerBlock(Block var0) {
      return registerBlock(new BlockItem(var0, new Item.Properties()));
   }

   private static Item registerBlock(Block var0, CreativeModeTab var1) {
      return registerBlock(new BlockItem(var0, (new Item.Properties()).tab(var1)));
   }

   private static Item registerBlock(Block var0, Optional<CreativeModeTab> var1) {
      return (Item)var1.map((var1x) -> {
         return registerBlock(var0, var1x);
      }).orElseGet(() -> {
         return registerBlock(var0);
      });
   }

   private static Item registerBlock(Block var0, CreativeModeTab var1, Block... var2) {
      BlockItem var3 = new BlockItem(var0, (new Item.Properties()).tab(var1));
      Block[] var4 = var2;
      int var5 = var2.length;

      for(int var6 = 0; var6 < var5; ++var6) {
         Block var7 = var4[var6];
         Item.BY_BLOCK.put(var7, var3);
      }

      return registerBlock(var3);
   }

   private static Item registerBlock(BlockItem var0) {
      return registerBlock(var0.getBlock(), (Item)var0);
   }

   protected static Item registerBlock(Block var0, Item var1) {
      return registerItem(Registry.BLOCK.getKey(var0), var1);
   }

   private static Item registerItem(String var0, Item var1) {
      return registerItem(new ResourceLocation(var0), var1);
   }

   private static Item registerItem(ResourceLocation var0, Item var1) {
      if (var1 instanceof BlockItem) {
         ((BlockItem)var1).registerBlocks(Item.BY_BLOCK, var1);
      }

      return (Item)Registry.register(Registry.ITEM, (ResourceLocation)var0, var1);
   }

   static {
      AIR = registerBlock(Blocks.AIR, (Item)(new AirItem(Blocks.AIR, new Item.Properties())));
      STONE = registerBlock(Blocks.STONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRANITE = registerBlock(Blocks.GRANITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_GRANITE = registerBlock(Blocks.POLISHED_GRANITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DIORITE = registerBlock(Blocks.DIORITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_DIORITE = registerBlock(Blocks.POLISHED_DIORITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ANDESITE = registerBlock(Blocks.ANDESITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_ANDESITE = registerBlock(Blocks.POLISHED_ANDESITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE = registerBlock(Blocks.DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COBBLED_DEEPSLATE = registerBlock(Blocks.COBBLED_DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_DEEPSLATE = registerBlock(Blocks.POLISHED_DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CALCITE = registerBlock(Blocks.CALCITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      TUFF = registerBlock(Blocks.TUFF, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DRIPSTONE_BLOCK = registerBlock(Blocks.DRIPSTONE_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRASS_BLOCK = registerBlock(Blocks.GRASS_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DIRT = registerBlock(Blocks.DIRT, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COARSE_DIRT = registerBlock(Blocks.COARSE_DIRT, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PODZOL = registerBlock(Blocks.PODZOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ROOTED_DIRT = registerBlock(Blocks.ROOTED_DIRT, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MUD = registerBlock(Blocks.MUD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRIMSON_NYLIUM = registerBlock(Blocks.CRIMSON_NYLIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WARPED_NYLIUM = registerBlock(Blocks.WARPED_NYLIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COBBLESTONE = registerBlock(Blocks.COBBLESTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OAK_PLANKS = registerBlock(Blocks.OAK_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SPRUCE_PLANKS = registerBlock(Blocks.SPRUCE_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BIRCH_PLANKS = registerBlock(Blocks.BIRCH_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      JUNGLE_PLANKS = registerBlock(Blocks.JUNGLE_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ACACIA_PLANKS = registerBlock(Blocks.ACACIA_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_OAK_PLANKS = registerBlock(Blocks.DARK_OAK_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MANGROVE_PLANKS = registerBlock(Blocks.MANGROVE_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRIMSON_PLANKS = registerBlock(Blocks.CRIMSON_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WARPED_PLANKS = registerBlock(Blocks.WARPED_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OAK_SAPLING = registerBlock(Blocks.OAK_SAPLING, CreativeModeTab.TAB_DECORATIONS);
      SPRUCE_SAPLING = registerBlock(Blocks.SPRUCE_SAPLING, CreativeModeTab.TAB_DECORATIONS);
      BIRCH_SAPLING = registerBlock(Blocks.BIRCH_SAPLING, CreativeModeTab.TAB_DECORATIONS);
      JUNGLE_SAPLING = registerBlock(Blocks.JUNGLE_SAPLING, CreativeModeTab.TAB_DECORATIONS);
      ACACIA_SAPLING = registerBlock(Blocks.ACACIA_SAPLING, CreativeModeTab.TAB_DECORATIONS);
      DARK_OAK_SAPLING = registerBlock(Blocks.DARK_OAK_SAPLING, CreativeModeTab.TAB_DECORATIONS);
      MANGROVE_PROPAGULE = registerBlock(Blocks.MANGROVE_PROPAGULE, CreativeModeTab.TAB_DECORATIONS);
      BEDROCK = registerBlock(Blocks.BEDROCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SAND = registerBlock(Blocks.SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_SAND = registerBlock(Blocks.RED_SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRAVEL = registerBlock(Blocks.GRAVEL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COAL_ORE = registerBlock(Blocks.COAL_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_COAL_ORE = registerBlock(Blocks.DEEPSLATE_COAL_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      IRON_ORE = registerBlock(Blocks.IRON_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_IRON_ORE = registerBlock(Blocks.DEEPSLATE_IRON_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COPPER_ORE = registerBlock(Blocks.COPPER_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_COPPER_ORE = registerBlock(Blocks.DEEPSLATE_COPPER_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GOLD_ORE = registerBlock(Blocks.GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_GOLD_ORE = registerBlock(Blocks.DEEPSLATE_GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      REDSTONE_ORE = registerBlock(Blocks.REDSTONE_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_REDSTONE_ORE = registerBlock(Blocks.DEEPSLATE_REDSTONE_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      EMERALD_ORE = registerBlock(Blocks.EMERALD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_EMERALD_ORE = registerBlock(Blocks.DEEPSLATE_EMERALD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LAPIS_ORE = registerBlock(Blocks.LAPIS_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_LAPIS_ORE = registerBlock(Blocks.DEEPSLATE_LAPIS_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DIAMOND_ORE = registerBlock(Blocks.DIAMOND_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_DIAMOND_ORE = registerBlock(Blocks.DEEPSLATE_DIAMOND_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      NETHER_GOLD_ORE = registerBlock(Blocks.NETHER_GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      NETHER_QUARTZ_ORE = registerBlock(Blocks.NETHER_QUARTZ_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ANCIENT_DEBRIS = registerBlock(new BlockItem(Blocks.ANCIENT_DEBRIS, (new Item.Properties()).tab(CreativeModeTab.TAB_BUILDING_BLOCKS).fireResistant()));
      COAL_BLOCK = registerBlock(Blocks.COAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RAW_IRON_BLOCK = registerBlock(Blocks.RAW_IRON_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RAW_COPPER_BLOCK = registerBlock(Blocks.RAW_COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RAW_GOLD_BLOCK = registerBlock(Blocks.RAW_GOLD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      AMETHYST_BLOCK = registerBlock(Blocks.AMETHYST_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BUDDING_AMETHYST = registerBlock(Blocks.BUDDING_AMETHYST, CreativeModeTab.TAB_BUILDING_BLOCKS);
      IRON_BLOCK = registerBlock(Blocks.IRON_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COPPER_BLOCK = registerBlock(Blocks.COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GOLD_BLOCK = registerBlock(Blocks.GOLD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DIAMOND_BLOCK = registerBlock(Blocks.DIAMOND_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      NETHERITE_BLOCK = registerBlock(new BlockItem(Blocks.NETHERITE_BLOCK, (new Item.Properties()).tab(CreativeModeTab.TAB_BUILDING_BLOCKS).fireResistant()));
      EXPOSED_COPPER = registerBlock(Blocks.EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WEATHERED_COPPER = registerBlock(Blocks.WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OXIDIZED_COPPER = registerBlock(Blocks.OXIDIZED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CUT_COPPER = registerBlock(Blocks.CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      EXPOSED_CUT_COPPER = registerBlock(Blocks.EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WEATHERED_CUT_COPPER = registerBlock(Blocks.WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OXIDIZED_CUT_COPPER = registerBlock(Blocks.OXIDIZED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CUT_COPPER_STAIRS = registerBlock(Blocks.CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OXIDIZED_CUT_COPPER_STAIRS = registerBlock(Blocks.OXIDIZED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CUT_COPPER_SLAB = registerBlock(Blocks.CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OXIDIZED_CUT_COPPER_SLAB = registerBlock(Blocks.OXIDIZED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_COPPER_BLOCK = registerBlock(Blocks.WAXED_COPPER_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_EXPOSED_COPPER = registerBlock(Blocks.WAXED_EXPOSED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_WEATHERED_COPPER = registerBlock(Blocks.WAXED_WEATHERED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_OXIDIZED_COPPER = registerBlock(Blocks.WAXED_OXIDIZED_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_CUT_COPPER = registerBlock(Blocks.WAXED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_EXPOSED_CUT_COPPER = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_WEATHERED_CUT_COPPER = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_OXIDIZED_CUT_COPPER = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_EXPOSED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_WEATHERED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_OXIDIZED_CUT_COPPER_STAIRS = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_EXPOSED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_WEATHERED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WAXED_OXIDIZED_CUT_COPPER_SLAB = registerBlock(Blocks.WAXED_OXIDIZED_CUT_COPPER_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OAK_LOG = registerBlock(Blocks.OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SPRUCE_LOG = registerBlock(Blocks.SPRUCE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BIRCH_LOG = registerBlock(Blocks.BIRCH_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      JUNGLE_LOG = registerBlock(Blocks.JUNGLE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ACACIA_LOG = registerBlock(Blocks.ACACIA_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_OAK_LOG = registerBlock(Blocks.DARK_OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MANGROVE_LOG = registerBlock(Blocks.MANGROVE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MANGROVE_ROOTS = registerBlock(Blocks.MANGROVE_ROOTS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MUDDY_MANGROVE_ROOTS = registerBlock(Blocks.MUDDY_MANGROVE_ROOTS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRIMSON_STEM = registerBlock(Blocks.CRIMSON_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WARPED_STEM = registerBlock(Blocks.WARPED_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_OAK_LOG = registerBlock(Blocks.STRIPPED_OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_SPRUCE_LOG = registerBlock(Blocks.STRIPPED_SPRUCE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_BIRCH_LOG = registerBlock(Blocks.STRIPPED_BIRCH_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_JUNGLE_LOG = registerBlock(Blocks.STRIPPED_JUNGLE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_ACACIA_LOG = registerBlock(Blocks.STRIPPED_ACACIA_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_DARK_OAK_LOG = registerBlock(Blocks.STRIPPED_DARK_OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_MANGROVE_LOG = registerBlock(Blocks.STRIPPED_MANGROVE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_CRIMSON_STEM = registerBlock(Blocks.STRIPPED_CRIMSON_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_WARPED_STEM = registerBlock(Blocks.STRIPPED_WARPED_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_OAK_WOOD = registerBlock(Blocks.STRIPPED_OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_SPRUCE_WOOD = registerBlock(Blocks.STRIPPED_SPRUCE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_BIRCH_WOOD = registerBlock(Blocks.STRIPPED_BIRCH_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_JUNGLE_WOOD = registerBlock(Blocks.STRIPPED_JUNGLE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_ACACIA_WOOD = registerBlock(Blocks.STRIPPED_ACACIA_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_DARK_OAK_WOOD = registerBlock(Blocks.STRIPPED_DARK_OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_MANGROVE_WOOD = registerBlock(Blocks.STRIPPED_MANGROVE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_CRIMSON_HYPHAE = registerBlock(Blocks.STRIPPED_CRIMSON_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRIPPED_WARPED_HYPHAE = registerBlock(Blocks.STRIPPED_WARPED_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OAK_WOOD = registerBlock(Blocks.OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SPRUCE_WOOD = registerBlock(Blocks.SPRUCE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BIRCH_WOOD = registerBlock(Blocks.BIRCH_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      JUNGLE_WOOD = registerBlock(Blocks.JUNGLE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ACACIA_WOOD = registerBlock(Blocks.ACACIA_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_OAK_WOOD = registerBlock(Blocks.DARK_OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MANGROVE_WOOD = registerBlock(Blocks.MANGROVE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRIMSON_HYPHAE = registerBlock(Blocks.CRIMSON_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WARPED_HYPHAE = registerBlock(Blocks.WARPED_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OAK_LEAVES = registerBlock(Blocks.OAK_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      SPRUCE_LEAVES = registerBlock(Blocks.SPRUCE_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      BIRCH_LEAVES = registerBlock(Blocks.BIRCH_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      JUNGLE_LEAVES = registerBlock(Blocks.JUNGLE_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      ACACIA_LEAVES = registerBlock(Blocks.ACACIA_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      DARK_OAK_LEAVES = registerBlock(Blocks.DARK_OAK_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      MANGROVE_LEAVES = registerBlock(Blocks.MANGROVE_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      AZALEA_LEAVES = registerBlock(Blocks.AZALEA_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      FLOWERING_AZALEA_LEAVES = registerBlock(Blocks.FLOWERING_AZALEA_LEAVES, CreativeModeTab.TAB_DECORATIONS);
      SPONGE = registerBlock(Blocks.SPONGE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WET_SPONGE = registerBlock(Blocks.WET_SPONGE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GLASS = registerBlock(Blocks.GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      TINTED_GLASS = registerBlock(Blocks.TINTED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LAPIS_BLOCK = registerBlock(Blocks.LAPIS_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SANDSTONE = registerBlock(Blocks.SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CHISELED_SANDSTONE = registerBlock(Blocks.CHISELED_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CUT_SANDSTONE = registerBlock(Blocks.CUT_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COBWEB = registerBlock(Blocks.COBWEB, CreativeModeTab.TAB_DECORATIONS);
      GRASS = registerBlock(Blocks.GRASS, CreativeModeTab.TAB_DECORATIONS);
      FERN = registerBlock(Blocks.FERN, CreativeModeTab.TAB_DECORATIONS);
      AZALEA = registerBlock(Blocks.AZALEA, CreativeModeTab.TAB_DECORATIONS);
      FLOWERING_AZALEA = registerBlock(Blocks.FLOWERING_AZALEA, CreativeModeTab.TAB_DECORATIONS);
      DEAD_BUSH = registerBlock(Blocks.DEAD_BUSH, CreativeModeTab.TAB_DECORATIONS);
      SEAGRASS = registerBlock(Blocks.SEAGRASS, CreativeModeTab.TAB_DECORATIONS);
      SEA_PICKLE = registerBlock(Blocks.SEA_PICKLE, CreativeModeTab.TAB_DECORATIONS);
      WHITE_WOOL = registerBlock(Blocks.WHITE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ORANGE_WOOL = registerBlock(Blocks.ORANGE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MAGENTA_WOOL = registerBlock(Blocks.MAGENTA_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_BLUE_WOOL = registerBlock(Blocks.LIGHT_BLUE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      YELLOW_WOOL = registerBlock(Blocks.YELLOW_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIME_WOOL = registerBlock(Blocks.LIME_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PINK_WOOL = registerBlock(Blocks.PINK_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRAY_WOOL = registerBlock(Blocks.GRAY_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_GRAY_WOOL = registerBlock(Blocks.LIGHT_GRAY_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CYAN_WOOL = registerBlock(Blocks.CYAN_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPLE_WOOL = registerBlock(Blocks.PURPLE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLUE_WOOL = registerBlock(Blocks.BLUE_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BROWN_WOOL = registerBlock(Blocks.BROWN_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GREEN_WOOL = registerBlock(Blocks.GREEN_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_WOOL = registerBlock(Blocks.RED_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACK_WOOL = registerBlock(Blocks.BLACK_WOOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DANDELION = registerBlock(Blocks.DANDELION, CreativeModeTab.TAB_DECORATIONS);
      POPPY = registerBlock(Blocks.POPPY, CreativeModeTab.TAB_DECORATIONS);
      BLUE_ORCHID = registerBlock(Blocks.BLUE_ORCHID, CreativeModeTab.TAB_DECORATIONS);
      ALLIUM = registerBlock(Blocks.ALLIUM, CreativeModeTab.TAB_DECORATIONS);
      AZURE_BLUET = registerBlock(Blocks.AZURE_BLUET, CreativeModeTab.TAB_DECORATIONS);
      RED_TULIP = registerBlock(Blocks.RED_TULIP, CreativeModeTab.TAB_DECORATIONS);
      ORANGE_TULIP = registerBlock(Blocks.ORANGE_TULIP, CreativeModeTab.TAB_DECORATIONS);
      WHITE_TULIP = registerBlock(Blocks.WHITE_TULIP, CreativeModeTab.TAB_DECORATIONS);
      PINK_TULIP = registerBlock(Blocks.PINK_TULIP, CreativeModeTab.TAB_DECORATIONS);
      OXEYE_DAISY = registerBlock(Blocks.OXEYE_DAISY, CreativeModeTab.TAB_DECORATIONS);
      CORNFLOWER = registerBlock(Blocks.CORNFLOWER, CreativeModeTab.TAB_DECORATIONS);
      LILY_OF_THE_VALLEY = registerBlock(Blocks.LILY_OF_THE_VALLEY, CreativeModeTab.TAB_DECORATIONS);
      WITHER_ROSE = registerBlock(Blocks.WITHER_ROSE, CreativeModeTab.TAB_DECORATIONS);
      SPORE_BLOSSOM = registerBlock(Blocks.SPORE_BLOSSOM, CreativeModeTab.TAB_DECORATIONS);
      BROWN_MUSHROOM = registerBlock(Blocks.BROWN_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
      RED_MUSHROOM = registerBlock(Blocks.RED_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
      CRIMSON_FUNGUS = registerBlock(Blocks.CRIMSON_FUNGUS, CreativeModeTab.TAB_DECORATIONS);
      WARPED_FUNGUS = registerBlock(Blocks.WARPED_FUNGUS, CreativeModeTab.TAB_DECORATIONS);
      CRIMSON_ROOTS = registerBlock(Blocks.CRIMSON_ROOTS, CreativeModeTab.TAB_DECORATIONS);
      WARPED_ROOTS = registerBlock(Blocks.WARPED_ROOTS, CreativeModeTab.TAB_DECORATIONS);
      NETHER_SPROUTS = registerBlock(Blocks.NETHER_SPROUTS, CreativeModeTab.TAB_DECORATIONS);
      WEEPING_VINES = registerBlock(Blocks.WEEPING_VINES, CreativeModeTab.TAB_DECORATIONS);
      TWISTING_VINES = registerBlock(Blocks.TWISTING_VINES, CreativeModeTab.TAB_DECORATIONS);
      SUGAR_CANE = registerBlock(Blocks.SUGAR_CANE, CreativeModeTab.TAB_DECORATIONS);
      KELP = registerBlock(Blocks.KELP, CreativeModeTab.TAB_DECORATIONS);
      MOSS_CARPET = registerBlock(Blocks.MOSS_CARPET, CreativeModeTab.TAB_DECORATIONS);
      MOSS_BLOCK = registerBlock(Blocks.MOSS_BLOCK, CreativeModeTab.TAB_DECORATIONS);
      HANGING_ROOTS = registerBlock(Blocks.HANGING_ROOTS, CreativeModeTab.TAB_DECORATIONS);
      BIG_DRIPLEAF = registerBlock(Blocks.BIG_DRIPLEAF, CreativeModeTab.TAB_DECORATIONS);
      SMALL_DRIPLEAF = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.SMALL_DRIPLEAF, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      BAMBOO = registerBlock(Blocks.BAMBOO, CreativeModeTab.TAB_DECORATIONS);
      OAK_SLAB = registerBlock(Blocks.OAK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SPRUCE_SLAB = registerBlock(Blocks.SPRUCE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BIRCH_SLAB = registerBlock(Blocks.BIRCH_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      JUNGLE_SLAB = registerBlock(Blocks.JUNGLE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ACACIA_SLAB = registerBlock(Blocks.ACACIA_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_OAK_SLAB = registerBlock(Blocks.DARK_OAK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MANGROVE_SLAB = registerBlock(Blocks.MANGROVE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRIMSON_SLAB = registerBlock(Blocks.CRIMSON_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WARPED_SLAB = registerBlock(Blocks.WARPED_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STONE_SLAB = registerBlock(Blocks.STONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_STONE_SLAB = registerBlock(Blocks.SMOOTH_STONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SANDSTONE_SLAB = registerBlock(Blocks.SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CUT_STANDSTONE_SLAB = registerBlock(Blocks.CUT_SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PETRIFIED_OAK_SLAB = registerBlock(Blocks.PETRIFIED_OAK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COBBLESTONE_SLAB = registerBlock(Blocks.COBBLESTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BRICK_SLAB = registerBlock(Blocks.BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STONE_BRICK_SLAB = registerBlock(Blocks.STONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MUD_BRICK_SLAB = registerBlock(Blocks.MUD_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      NETHER_BRICK_SLAB = registerBlock(Blocks.NETHER_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      QUARTZ_SLAB = registerBlock(Blocks.QUARTZ_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_SANDSTONE_SLAB = registerBlock(Blocks.RED_SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CUT_RED_SANDSTONE_SLAB = registerBlock(Blocks.CUT_RED_SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPUR_SLAB = registerBlock(Blocks.PURPUR_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PRISMARINE_SLAB = registerBlock(Blocks.PRISMARINE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PRISMARINE_BRICK_SLAB = registerBlock(Blocks.PRISMARINE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_PRISMARINE_SLAB = registerBlock(Blocks.DARK_PRISMARINE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_QUARTZ = registerBlock(Blocks.SMOOTH_QUARTZ, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_RED_SANDSTONE = registerBlock(Blocks.SMOOTH_RED_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_SANDSTONE = registerBlock(Blocks.SMOOTH_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_STONE = registerBlock(Blocks.SMOOTH_STONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BRICKS = registerBlock(Blocks.BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BOOKSHELF = registerBlock(Blocks.BOOKSHELF, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MOSSY_COBBLESTONE = registerBlock(Blocks.MOSSY_COBBLESTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OBSIDIAN = registerBlock(Blocks.OBSIDIAN, CreativeModeTab.TAB_BUILDING_BLOCKS);
      TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.TORCH, Blocks.WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      END_ROD = registerBlock(Blocks.END_ROD, CreativeModeTab.TAB_DECORATIONS);
      CHORUS_PLANT = registerBlock(Blocks.CHORUS_PLANT, CreativeModeTab.TAB_DECORATIONS);
      CHORUS_FLOWER = registerBlock(Blocks.CHORUS_FLOWER, CreativeModeTab.TAB_DECORATIONS);
      PURPUR_BLOCK = registerBlock(Blocks.PURPUR_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPUR_PILLAR = registerBlock(Blocks.PURPUR_PILLAR, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPUR_STAIRS = registerBlock(Blocks.PURPUR_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SPAWNER = registerBlock(new BlockItem(Blocks.SPAWNER, (new Item.Properties()).rarity(Rarity.EPIC)));
      CHEST = registerBlock(Blocks.CHEST, CreativeModeTab.TAB_DECORATIONS);
      CRAFTING_TABLE = registerBlock(Blocks.CRAFTING_TABLE, CreativeModeTab.TAB_DECORATIONS);
      FARMLAND = registerBlock(Blocks.FARMLAND, CreativeModeTab.TAB_DECORATIONS);
      FURNACE = registerBlock(Blocks.FURNACE, CreativeModeTab.TAB_DECORATIONS);
      LADDER = registerBlock(Blocks.LADDER, CreativeModeTab.TAB_DECORATIONS);
      COBBLESTONE_STAIRS = registerBlock(Blocks.COBBLESTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SNOW = registerBlock(Blocks.SNOW, CreativeModeTab.TAB_DECORATIONS);
      ICE = registerBlock(Blocks.ICE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SNOW_BLOCK = registerBlock(Blocks.SNOW_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CACTUS = registerBlock(Blocks.CACTUS, CreativeModeTab.TAB_DECORATIONS);
      CLAY = registerBlock(Blocks.CLAY, CreativeModeTab.TAB_BUILDING_BLOCKS);
      JUKEBOX = registerBlock(Blocks.JUKEBOX, CreativeModeTab.TAB_DECORATIONS);
      OAK_FENCE = registerBlock(Blocks.OAK_FENCE, CreativeModeTab.TAB_DECORATIONS);
      SPRUCE_FENCE = registerBlock(Blocks.SPRUCE_FENCE, CreativeModeTab.TAB_DECORATIONS);
      BIRCH_FENCE = registerBlock(Blocks.BIRCH_FENCE, CreativeModeTab.TAB_DECORATIONS);
      JUNGLE_FENCE = registerBlock(Blocks.JUNGLE_FENCE, CreativeModeTab.TAB_DECORATIONS);
      ACACIA_FENCE = registerBlock(Blocks.ACACIA_FENCE, CreativeModeTab.TAB_DECORATIONS);
      DARK_OAK_FENCE = registerBlock(Blocks.DARK_OAK_FENCE, CreativeModeTab.TAB_DECORATIONS);
      MANGROVE_FENCE = registerBlock(Blocks.MANGROVE_FENCE, CreativeModeTab.TAB_DECORATIONS);
      CRIMSON_FENCE = registerBlock(Blocks.CRIMSON_FENCE, CreativeModeTab.TAB_DECORATIONS);
      WARPED_FENCE = registerBlock(Blocks.WARPED_FENCE, CreativeModeTab.TAB_DECORATIONS);
      PUMPKIN = registerBlock(Blocks.PUMPKIN, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CARVED_PUMPKIN = registerBlock(Blocks.CARVED_PUMPKIN, CreativeModeTab.TAB_BUILDING_BLOCKS);
      JACK_O_LANTERN = registerBlock(Blocks.JACK_O_LANTERN, CreativeModeTab.TAB_BUILDING_BLOCKS);
      NETHERRACK = registerBlock(Blocks.NETHERRACK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SOUL_SAND = registerBlock(Blocks.SOUL_SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SOUL_SOIL = registerBlock(Blocks.SOUL_SOIL, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BASALT = registerBlock(Blocks.BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_BASALT = registerBlock(Blocks.POLISHED_BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_BASALT = registerBlock(Blocks.SMOOTH_BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SOUL_TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.SOUL_TORCH, Blocks.SOUL_WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      GLOWSTONE = registerBlock(Blocks.GLOWSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      INFESTED_STONE = registerBlock(Blocks.INFESTED_STONE, CreativeModeTab.TAB_DECORATIONS);
      INFESTED_COBBLESTONE = registerBlock(Blocks.INFESTED_COBBLESTONE, CreativeModeTab.TAB_DECORATIONS);
      INFESTED_STONE_BRICKS = registerBlock(Blocks.INFESTED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
      INFESTED_MOSSY_STONE_BRICKS = registerBlock(Blocks.INFESTED_MOSSY_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
      INFESTED_CRACKED_STONE_BRICKS = registerBlock(Blocks.INFESTED_CRACKED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
      INFESTED_CHISELED_STONE_BRICKS = registerBlock(Blocks.INFESTED_CHISELED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
      INFESTED_DEEPSLATE = registerBlock(Blocks.INFESTED_DEEPSLATE, CreativeModeTab.TAB_DECORATIONS);
      STONE_BRICKS = registerBlock(Blocks.STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MOSSY_STONE_BRICKS = registerBlock(Blocks.MOSSY_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRACKED_STONE_BRICKS = registerBlock(Blocks.CRACKED_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CHISELED_STONE_BRICKS = registerBlock(Blocks.CHISELED_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PACKED_MUD = registerBlock(Blocks.PACKED_MUD, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MUD_BRICKS = registerBlock(Blocks.MUD_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_BRICKS = registerBlock(Blocks.DEEPSLATE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRACKED_DEEPSLATE_BRICKS = registerBlock(Blocks.CRACKED_DEEPSLATE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_TILES = registerBlock(Blocks.DEEPSLATE_TILES, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRACKED_DEEPSLATE_TILES = registerBlock(Blocks.CRACKED_DEEPSLATE_TILES, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CHISELED_DEEPSLATE = registerBlock(Blocks.CHISELED_DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      REINFORCED_DEEPSLATE = registerBlock(Blocks.REINFORCED_DEEPSLATE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BROWN_MUSHROOM_BLOCK = registerBlock(Blocks.BROWN_MUSHROOM_BLOCK, CreativeModeTab.TAB_DECORATIONS);
      RED_MUSHROOM_BLOCK = registerBlock(Blocks.RED_MUSHROOM_BLOCK, CreativeModeTab.TAB_DECORATIONS);
      MUSHROOM_STEM = registerBlock(Blocks.MUSHROOM_STEM, CreativeModeTab.TAB_DECORATIONS);
      IRON_BARS = registerBlock(Blocks.IRON_BARS, CreativeModeTab.TAB_DECORATIONS);
      CHAIN = registerBlock(Blocks.CHAIN, CreativeModeTab.TAB_DECORATIONS);
      GLASS_PANE = registerBlock(Blocks.GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      MELON = registerBlock(Blocks.MELON, CreativeModeTab.TAB_BUILDING_BLOCKS);
      VINE = registerBlock(Blocks.VINE, CreativeModeTab.TAB_DECORATIONS);
      GLOW_LICHEN = registerBlock(Blocks.GLOW_LICHEN, CreativeModeTab.TAB_DECORATIONS);
      BRICK_STAIRS = registerBlock(Blocks.BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STONE_BRICK_STAIRS = registerBlock(Blocks.STONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MUD_BRICK_STAIRS = registerBlock(Blocks.MUD_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MYCELIUM = registerBlock(Blocks.MYCELIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LILY_PAD = registerBlock((BlockItem)(new PlaceOnWaterBlockItem(Blocks.LILY_PAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      NETHER_BRICKS = registerBlock(Blocks.NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRACKED_NETHER_BRICKS = registerBlock(Blocks.CRACKED_NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CHISELED_NETHER_BRICKS = registerBlock(Blocks.CHISELED_NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      NETHER_BRICK_FENCE = registerBlock(Blocks.NETHER_BRICK_FENCE, CreativeModeTab.TAB_DECORATIONS);
      NETHER_BRICK_STAIRS = registerBlock(Blocks.NETHER_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SCULK = registerBlock(Blocks.SCULK, CreativeModeTab.TAB_DECORATIONS);
      SCULK_VEIN = registerBlock(Blocks.SCULK_VEIN, CreativeModeTab.TAB_DECORATIONS);
      SCULK_CATALYST = registerBlock(Blocks.SCULK_CATALYST, CreativeModeTab.TAB_DECORATIONS);
      SCULK_SHRIEKER = registerBlock(Blocks.SCULK_SHRIEKER, CreativeModeTab.TAB_DECORATIONS);
      ENCHANTING_TABLE = registerBlock(Blocks.ENCHANTING_TABLE, CreativeModeTab.TAB_DECORATIONS);
      END_PORTAL_FRAME = registerBlock(Blocks.END_PORTAL_FRAME, CreativeModeTab.TAB_DECORATIONS);
      END_STONE = registerBlock(Blocks.END_STONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      END_STONE_BRICKS = registerBlock(Blocks.END_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DRAGON_EGG = registerBlock(new BlockItem(Blocks.DRAGON_EGG, (new Item.Properties()).rarity(Rarity.EPIC)));
      SANDSTONE_STAIRS = registerBlock(Blocks.SANDSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ENDER_CHEST = registerBlock(Blocks.ENDER_CHEST, CreativeModeTab.TAB_DECORATIONS);
      EMERALD_BLOCK = registerBlock(Blocks.EMERALD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      OAK_STAIRS = registerBlock(Blocks.OAK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SPRUCE_STAIRS = registerBlock(Blocks.SPRUCE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BIRCH_STAIRS = registerBlock(Blocks.BIRCH_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      JUNGLE_STAIRS = registerBlock(Blocks.JUNGLE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ACACIA_STAIRS = registerBlock(Blocks.ACACIA_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_OAK_STAIRS = registerBlock(Blocks.DARK_OAK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MANGROVE_STAIRS = registerBlock(Blocks.MANGROVE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRIMSON_STAIRS = registerBlock(Blocks.CRIMSON_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WARPED_STAIRS = registerBlock(Blocks.WARPED_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COMMAND_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.COMMAND_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
      BEACON = registerBlock(new BlockItem(Blocks.BEACON, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
      COBBLESTONE_WALL = registerBlock(Blocks.COBBLESTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
      MOSSY_COBBLESTONE_WALL = registerBlock(Blocks.MOSSY_COBBLESTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
      BRICK_WALL = registerBlock(Blocks.BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      PRISMARINE_WALL = registerBlock(Blocks.PRISMARINE_WALL, CreativeModeTab.TAB_DECORATIONS);
      RED_SANDSTONE_WALL = registerBlock(Blocks.RED_SANDSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
      MOSSY_STONE_BRICK_WALL = registerBlock(Blocks.MOSSY_STONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      GRANITE_WALL = registerBlock(Blocks.GRANITE_WALL, CreativeModeTab.TAB_DECORATIONS);
      STONE_BRICK_WALL = registerBlock(Blocks.STONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      MUD_BRICK_WALL = registerBlock(Blocks.MUD_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      NETHER_BRICK_WALL = registerBlock(Blocks.NETHER_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      ANDESITE_WALL = registerBlock(Blocks.ANDESITE_WALL, CreativeModeTab.TAB_DECORATIONS);
      RED_NETHER_BRICK_WALL = registerBlock(Blocks.RED_NETHER_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      SANDSTONE_WALL = registerBlock(Blocks.SANDSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
      END_STONE_BRICK_WALL = registerBlock(Blocks.END_STONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      DIORITE_WALL = registerBlock(Blocks.DIORITE_WALL, CreativeModeTab.TAB_DECORATIONS);
      BLACKSTONE_WALL = registerBlock(Blocks.BLACKSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
      POLISHED_BLACKSTONE_WALL = registerBlock(Blocks.POLISHED_BLACKSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
      POLISHED_BLACKSTONE_BRICK_WALL = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      COBBLED_DEEPSLATE_WALL = registerBlock(Blocks.COBBLED_DEEPSLATE_WALL, CreativeModeTab.TAB_DECORATIONS);
      POLISHED_DEEPSLATE_WALL = registerBlock(Blocks.POLISHED_DEEPSLATE_WALL, CreativeModeTab.TAB_DECORATIONS);
      DEEPSLATE_BRICK_WALL = registerBlock(Blocks.DEEPSLATE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
      DEEPSLATE_TILE_WALL = registerBlock(Blocks.DEEPSLATE_TILE_WALL, CreativeModeTab.TAB_DECORATIONS);
      ANVIL = registerBlock(Blocks.ANVIL, CreativeModeTab.TAB_DECORATIONS);
      CHIPPED_ANVIL = registerBlock(Blocks.CHIPPED_ANVIL, CreativeModeTab.TAB_DECORATIONS);
      DAMAGED_ANVIL = registerBlock(Blocks.DAMAGED_ANVIL, CreativeModeTab.TAB_DECORATIONS);
      CHISELED_QUARTZ_BLOCK = registerBlock(Blocks.CHISELED_QUARTZ_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      QUARTZ_BLOCK = registerBlock(Blocks.QUARTZ_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      QUARTZ_BRICKS = registerBlock(Blocks.QUARTZ_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      QUARTZ_PILLAR = registerBlock(Blocks.QUARTZ_PILLAR, CreativeModeTab.TAB_BUILDING_BLOCKS);
      QUARTZ_STAIRS = registerBlock(Blocks.QUARTZ_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WHITE_TERRACOTTA = registerBlock(Blocks.WHITE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ORANGE_TERRACOTTA = registerBlock(Blocks.ORANGE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MAGENTA_TERRACOTTA = registerBlock(Blocks.MAGENTA_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_BLUE_TERRACOTTA = registerBlock(Blocks.LIGHT_BLUE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      YELLOW_TERRACOTTA = registerBlock(Blocks.YELLOW_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIME_TERRACOTTA = registerBlock(Blocks.LIME_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PINK_TERRACOTTA = registerBlock(Blocks.PINK_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRAY_TERRACOTTA = registerBlock(Blocks.GRAY_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_GRAY_TERRACOTTA = registerBlock(Blocks.LIGHT_GRAY_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CYAN_TERRACOTTA = registerBlock(Blocks.CYAN_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPLE_TERRACOTTA = registerBlock(Blocks.PURPLE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLUE_TERRACOTTA = registerBlock(Blocks.BLUE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BROWN_TERRACOTTA = registerBlock(Blocks.BROWN_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GREEN_TERRACOTTA = registerBlock(Blocks.GREEN_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_TERRACOTTA = registerBlock(Blocks.RED_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACK_TERRACOTTA = registerBlock(Blocks.BLACK_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BARRIER = registerBlock(new BlockItem(Blocks.BARRIER, (new Item.Properties()).rarity(Rarity.EPIC)));
      LIGHT = registerBlock(new BlockItem(Blocks.LIGHT, (new Item.Properties()).rarity(Rarity.EPIC)));
      HAY_BLOCK = registerBlock(Blocks.HAY_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WHITE_CARPET = registerBlock(Blocks.WHITE_CARPET, CreativeModeTab.TAB_DECORATIONS);
      ORANGE_CARPET = registerBlock(Blocks.ORANGE_CARPET, CreativeModeTab.TAB_DECORATIONS);
      MAGENTA_CARPET = registerBlock(Blocks.MAGENTA_CARPET, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_BLUE_CARPET = registerBlock(Blocks.LIGHT_BLUE_CARPET, CreativeModeTab.TAB_DECORATIONS);
      YELLOW_CARPET = registerBlock(Blocks.YELLOW_CARPET, CreativeModeTab.TAB_DECORATIONS);
      LIME_CARPET = registerBlock(Blocks.LIME_CARPET, CreativeModeTab.TAB_DECORATIONS);
      PINK_CARPET = registerBlock(Blocks.PINK_CARPET, CreativeModeTab.TAB_DECORATIONS);
      GRAY_CARPET = registerBlock(Blocks.GRAY_CARPET, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_GRAY_CARPET = registerBlock(Blocks.LIGHT_GRAY_CARPET, CreativeModeTab.TAB_DECORATIONS);
      CYAN_CARPET = registerBlock(Blocks.CYAN_CARPET, CreativeModeTab.TAB_DECORATIONS);
      PURPLE_CARPET = registerBlock(Blocks.PURPLE_CARPET, CreativeModeTab.TAB_DECORATIONS);
      BLUE_CARPET = registerBlock(Blocks.BLUE_CARPET, CreativeModeTab.TAB_DECORATIONS);
      BROWN_CARPET = registerBlock(Blocks.BROWN_CARPET, CreativeModeTab.TAB_DECORATIONS);
      GREEN_CARPET = registerBlock(Blocks.GREEN_CARPET, CreativeModeTab.TAB_DECORATIONS);
      RED_CARPET = registerBlock(Blocks.RED_CARPET, CreativeModeTab.TAB_DECORATIONS);
      BLACK_CARPET = registerBlock(Blocks.BLACK_CARPET, CreativeModeTab.TAB_DECORATIONS);
      TERRACOTTA = registerBlock(Blocks.TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PACKED_ICE = registerBlock(Blocks.PACKED_ICE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DIRT_PATH = registerBlock(Blocks.DIRT_PATH, CreativeModeTab.TAB_DECORATIONS);
      SUNFLOWER = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.SUNFLOWER, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      LILAC = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.LILAC, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      ROSE_BUSH = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.ROSE_BUSH, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      PEONY = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.PEONY, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      TALL_GRASS = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.TALL_GRASS, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      LARGE_FERN = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.LARGE_FERN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      WHITE_STAINED_GLASS = registerBlock(Blocks.WHITE_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ORANGE_STAINED_GLASS = registerBlock(Blocks.ORANGE_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MAGENTA_STAINED_GLASS = registerBlock(Blocks.MAGENTA_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_BLUE_STAINED_GLASS = registerBlock(Blocks.LIGHT_BLUE_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      YELLOW_STAINED_GLASS = registerBlock(Blocks.YELLOW_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIME_STAINED_GLASS = registerBlock(Blocks.LIME_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PINK_STAINED_GLASS = registerBlock(Blocks.PINK_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRAY_STAINED_GLASS = registerBlock(Blocks.GRAY_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_GRAY_STAINED_GLASS = registerBlock(Blocks.LIGHT_GRAY_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CYAN_STAINED_GLASS = registerBlock(Blocks.CYAN_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPLE_STAINED_GLASS = registerBlock(Blocks.PURPLE_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLUE_STAINED_GLASS = registerBlock(Blocks.BLUE_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BROWN_STAINED_GLASS = registerBlock(Blocks.BROWN_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GREEN_STAINED_GLASS = registerBlock(Blocks.GREEN_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_STAINED_GLASS = registerBlock(Blocks.RED_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACK_STAINED_GLASS = registerBlock(Blocks.BLACK_STAINED_GLASS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WHITE_STAINED_GLASS_PANE = registerBlock(Blocks.WHITE_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      ORANGE_STAINED_GLASS_PANE = registerBlock(Blocks.ORANGE_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      MAGENTA_STAINED_GLASS_PANE = registerBlock(Blocks.MAGENTA_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_BLUE_STAINED_GLASS_PANE = registerBlock(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      YELLOW_STAINED_GLASS_PANE = registerBlock(Blocks.YELLOW_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      LIME_STAINED_GLASS_PANE = registerBlock(Blocks.LIME_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      PINK_STAINED_GLASS_PANE = registerBlock(Blocks.PINK_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      GRAY_STAINED_GLASS_PANE = registerBlock(Blocks.GRAY_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_GRAY_STAINED_GLASS_PANE = registerBlock(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      CYAN_STAINED_GLASS_PANE = registerBlock(Blocks.CYAN_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      PURPLE_STAINED_GLASS_PANE = registerBlock(Blocks.PURPLE_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      BLUE_STAINED_GLASS_PANE = registerBlock(Blocks.BLUE_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      BROWN_STAINED_GLASS_PANE = registerBlock(Blocks.BROWN_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      GREEN_STAINED_GLASS_PANE = registerBlock(Blocks.GREEN_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      RED_STAINED_GLASS_PANE = registerBlock(Blocks.RED_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      BLACK_STAINED_GLASS_PANE = registerBlock(Blocks.BLACK_STAINED_GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
      PRISMARINE = registerBlock(Blocks.PRISMARINE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PRISMARINE_BRICKS = registerBlock(Blocks.PRISMARINE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_PRISMARINE = registerBlock(Blocks.DARK_PRISMARINE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PRISMARINE_STAIRS = registerBlock(Blocks.PRISMARINE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PRISMARINE_BRICK_STAIRS = registerBlock(Blocks.PRISMARINE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DARK_PRISMARINE_STAIRS = registerBlock(Blocks.DARK_PRISMARINE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SEA_LANTERN = registerBlock(Blocks.SEA_LANTERN, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_SANDSTONE = registerBlock(Blocks.RED_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CHISELED_RED_SANDSTONE = registerBlock(Blocks.CHISELED_RED_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CUT_RED_SANDSTONE = registerBlock(Blocks.CUT_RED_SANDSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_SANDSTONE_STAIRS = registerBlock(Blocks.RED_SANDSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      REPEATING_COMMAND_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.REPEATING_COMMAND_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
      CHAIN_COMMAND_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.CHAIN_COMMAND_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
      MAGMA_BLOCK = registerBlock(Blocks.MAGMA_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      NETHER_WART_BLOCK = registerBlock(Blocks.NETHER_WART_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WARPED_WART_BLOCK = registerBlock(Blocks.WARPED_WART_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_NETHER_BRICKS = registerBlock(Blocks.RED_NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BONE_BLOCK = registerBlock(Blocks.BONE_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STRUCTURE_VOID = registerBlock(new BlockItem(Blocks.STRUCTURE_VOID, (new Item.Properties()).rarity(Rarity.EPIC)));
      SHULKER_BOX = registerBlock(new BlockItem(Blocks.SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      WHITE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.WHITE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      ORANGE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.ORANGE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      MAGENTA_SHULKER_BOX = registerBlock(new BlockItem(Blocks.MAGENTA_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      LIGHT_BLUE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.LIGHT_BLUE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      YELLOW_SHULKER_BOX = registerBlock(new BlockItem(Blocks.YELLOW_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      LIME_SHULKER_BOX = registerBlock(new BlockItem(Blocks.LIME_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      PINK_SHULKER_BOX = registerBlock(new BlockItem(Blocks.PINK_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      GRAY_SHULKER_BOX = registerBlock(new BlockItem(Blocks.GRAY_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      LIGHT_GRAY_SHULKER_BOX = registerBlock(new BlockItem(Blocks.LIGHT_GRAY_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      CYAN_SHULKER_BOX = registerBlock(new BlockItem(Blocks.CYAN_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      PURPLE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.PURPLE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      BLUE_SHULKER_BOX = registerBlock(new BlockItem(Blocks.BLUE_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      BROWN_SHULKER_BOX = registerBlock(new BlockItem(Blocks.BROWN_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      GREEN_SHULKER_BOX = registerBlock(new BlockItem(Blocks.GREEN_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      RED_SHULKER_BOX = registerBlock(new BlockItem(Blocks.RED_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      BLACK_SHULKER_BOX = registerBlock(new BlockItem(Blocks.BLACK_SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
      WHITE_GLAZED_TERRACOTTA = registerBlock(Blocks.WHITE_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      ORANGE_GLAZED_TERRACOTTA = registerBlock(Blocks.ORANGE_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      MAGENTA_GLAZED_TERRACOTTA = registerBlock(Blocks.MAGENTA_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_BLUE_GLAZED_TERRACOTTA = registerBlock(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      YELLOW_GLAZED_TERRACOTTA = registerBlock(Blocks.YELLOW_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      LIME_GLAZED_TERRACOTTA = registerBlock(Blocks.LIME_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      PINK_GLAZED_TERRACOTTA = registerBlock(Blocks.PINK_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      GRAY_GLAZED_TERRACOTTA = registerBlock(Blocks.GRAY_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_GRAY_GLAZED_TERRACOTTA = registerBlock(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      CYAN_GLAZED_TERRACOTTA = registerBlock(Blocks.CYAN_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      PURPLE_GLAZED_TERRACOTTA = registerBlock(Blocks.PURPLE_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      BLUE_GLAZED_TERRACOTTA = registerBlock(Blocks.BLUE_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      BROWN_GLAZED_TERRACOTTA = registerBlock(Blocks.BROWN_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      GREEN_GLAZED_TERRACOTTA = registerBlock(Blocks.GREEN_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      RED_GLAZED_TERRACOTTA = registerBlock(Blocks.RED_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      BLACK_GLAZED_TERRACOTTA = registerBlock(Blocks.BLACK_GLAZED_TERRACOTTA, CreativeModeTab.TAB_DECORATIONS);
      WHITE_CONCRETE = registerBlock(Blocks.WHITE_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ORANGE_CONCRETE = registerBlock(Blocks.ORANGE_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MAGENTA_CONCRETE = registerBlock(Blocks.MAGENTA_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_BLUE_CONCRETE = registerBlock(Blocks.LIGHT_BLUE_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      YELLOW_CONCRETE = registerBlock(Blocks.YELLOW_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIME_CONCRETE = registerBlock(Blocks.LIME_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PINK_CONCRETE = registerBlock(Blocks.PINK_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRAY_CONCRETE = registerBlock(Blocks.GRAY_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_GRAY_CONCRETE = registerBlock(Blocks.LIGHT_GRAY_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CYAN_CONCRETE = registerBlock(Blocks.CYAN_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPLE_CONCRETE = registerBlock(Blocks.PURPLE_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLUE_CONCRETE = registerBlock(Blocks.BLUE_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BROWN_CONCRETE = registerBlock(Blocks.BROWN_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GREEN_CONCRETE = registerBlock(Blocks.GREEN_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_CONCRETE = registerBlock(Blocks.RED_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACK_CONCRETE = registerBlock(Blocks.BLACK_CONCRETE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      WHITE_CONCRETE_POWDER = registerBlock(Blocks.WHITE_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ORANGE_CONCRETE_POWDER = registerBlock(Blocks.ORANGE_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MAGENTA_CONCRETE_POWDER = registerBlock(Blocks.MAGENTA_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_BLUE_CONCRETE_POWDER = registerBlock(Blocks.LIGHT_BLUE_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      YELLOW_CONCRETE_POWDER = registerBlock(Blocks.YELLOW_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIME_CONCRETE_POWDER = registerBlock(Blocks.LIME_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PINK_CONCRETE_POWDER = registerBlock(Blocks.PINK_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRAY_CONCRETE_POWDER = registerBlock(Blocks.GRAY_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      LIGHT_GRAY_CONCRETE_POWDER = registerBlock(Blocks.LIGHT_GRAY_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CYAN_CONCRETE_POWDER = registerBlock(Blocks.CYAN_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PURPLE_CONCRETE_POWDER = registerBlock(Blocks.PURPLE_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLUE_CONCRETE_POWDER = registerBlock(Blocks.BLUE_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BROWN_CONCRETE_POWDER = registerBlock(Blocks.BROWN_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GREEN_CONCRETE_POWDER = registerBlock(Blocks.GREEN_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_CONCRETE_POWDER = registerBlock(Blocks.RED_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACK_CONCRETE_POWDER = registerBlock(Blocks.BLACK_CONCRETE_POWDER, CreativeModeTab.TAB_BUILDING_BLOCKS);
      TURTLE_EGG = registerBlock(Blocks.TURTLE_EGG, CreativeModeTab.TAB_MISC);
      DEAD_TUBE_CORAL_BLOCK = registerBlock(Blocks.DEAD_TUBE_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEAD_BRAIN_CORAL_BLOCK = registerBlock(Blocks.DEAD_BRAIN_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEAD_BUBBLE_CORAL_BLOCK = registerBlock(Blocks.DEAD_BUBBLE_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEAD_FIRE_CORAL_BLOCK = registerBlock(Blocks.DEAD_FIRE_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEAD_HORN_CORAL_BLOCK = registerBlock(Blocks.DEAD_HORN_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      TUBE_CORAL_BLOCK = registerBlock(Blocks.TUBE_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BRAIN_CORAL_BLOCK = registerBlock(Blocks.BRAIN_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BUBBLE_CORAL_BLOCK = registerBlock(Blocks.BUBBLE_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      FIRE_CORAL_BLOCK = registerBlock(Blocks.FIRE_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      HORN_CORAL_BLOCK = registerBlock(Blocks.HORN_CORAL_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      TUBE_CORAL = registerBlock(Blocks.TUBE_CORAL, CreativeModeTab.TAB_DECORATIONS);
      BRAIN_CORAL = registerBlock(Blocks.BRAIN_CORAL, CreativeModeTab.TAB_DECORATIONS);
      BUBBLE_CORAL = registerBlock(Blocks.BUBBLE_CORAL, CreativeModeTab.TAB_DECORATIONS);
      FIRE_CORAL = registerBlock(Blocks.FIRE_CORAL, CreativeModeTab.TAB_DECORATIONS);
      HORN_CORAL = registerBlock(Blocks.HORN_CORAL, CreativeModeTab.TAB_DECORATIONS);
      DEAD_BRAIN_CORAL = registerBlock(Blocks.DEAD_BRAIN_CORAL, CreativeModeTab.TAB_DECORATIONS);
      DEAD_BUBBLE_CORAL = registerBlock(Blocks.DEAD_BUBBLE_CORAL, CreativeModeTab.TAB_DECORATIONS);
      DEAD_FIRE_CORAL = registerBlock(Blocks.DEAD_FIRE_CORAL, CreativeModeTab.TAB_DECORATIONS);
      DEAD_HORN_CORAL = registerBlock(Blocks.DEAD_HORN_CORAL, CreativeModeTab.TAB_DECORATIONS);
      DEAD_TUBE_CORAL = registerBlock(Blocks.DEAD_TUBE_CORAL, CreativeModeTab.TAB_DECORATIONS);
      TUBE_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.TUBE_CORAL_FAN, Blocks.TUBE_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      BRAIN_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.BRAIN_CORAL_FAN, Blocks.BRAIN_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      BUBBLE_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.BUBBLE_CORAL_FAN, Blocks.BUBBLE_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      FIRE_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.FIRE_CORAL_FAN, Blocks.FIRE_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      HORN_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.HORN_CORAL_FAN, Blocks.HORN_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      DEAD_TUBE_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.DEAD_TUBE_CORAL_FAN, Blocks.DEAD_TUBE_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      DEAD_BRAIN_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.DEAD_BRAIN_CORAL_FAN, Blocks.DEAD_BRAIN_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      DEAD_BUBBLE_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.DEAD_BUBBLE_CORAL_FAN, Blocks.DEAD_BUBBLE_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      DEAD_FIRE_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.DEAD_FIRE_CORAL_FAN, Blocks.DEAD_FIRE_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      DEAD_HORN_CORAL_FAN = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.DEAD_HORN_CORAL_FAN, Blocks.DEAD_HORN_CORAL_WALL_FAN, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      BLUE_ICE = registerBlock(Blocks.BLUE_ICE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CONDUIT = registerBlock(new BlockItem(Blocks.CONDUIT, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
      POLISHED_GRANITE_STAIRS = registerBlock(Blocks.POLISHED_GRANITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_RED_SANDSTONE_STAIRS = registerBlock(Blocks.SMOOTH_RED_SANDSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MOSSY_STONE_BRICK_STAIRS = registerBlock(Blocks.MOSSY_STONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_DIORITE_STAIRS = registerBlock(Blocks.POLISHED_DIORITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MOSSY_COBBLESTONE_STAIRS = registerBlock(Blocks.MOSSY_COBBLESTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      END_STONE_BRICK_STAIRS = registerBlock(Blocks.END_STONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      STONE_STAIRS = registerBlock(Blocks.STONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_SANDSTONE_STAIRS = registerBlock(Blocks.SMOOTH_SANDSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_QUARTZ_STAIRS = registerBlock(Blocks.SMOOTH_QUARTZ_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRANITE_STAIRS = registerBlock(Blocks.GRANITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ANDESITE_STAIRS = registerBlock(Blocks.ANDESITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_NETHER_BRICK_STAIRS = registerBlock(Blocks.RED_NETHER_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_ANDESITE_STAIRS = registerBlock(Blocks.POLISHED_ANDESITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DIORITE_STAIRS = registerBlock(Blocks.DIORITE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COBBLED_DEEPSLATE_STAIRS = registerBlock(Blocks.COBBLED_DEEPSLATE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_DEEPSLATE_STAIRS = registerBlock(Blocks.POLISHED_DEEPSLATE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_BRICK_STAIRS = registerBlock(Blocks.DEEPSLATE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_TILE_STAIRS = registerBlock(Blocks.DEEPSLATE_TILE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_GRANITE_SLAB = registerBlock(Blocks.POLISHED_GRANITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_RED_SANDSTONE_SLAB = registerBlock(Blocks.SMOOTH_RED_SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MOSSY_STONE_BRICK_SLAB = registerBlock(Blocks.MOSSY_STONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_DIORITE_SLAB = registerBlock(Blocks.POLISHED_DIORITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      MOSSY_COBBLESTONE_SLAB = registerBlock(Blocks.MOSSY_COBBLESTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      END_STONE_BRICK_SLAB = registerBlock(Blocks.END_STONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_SANDSTONE_SLAB = registerBlock(Blocks.SMOOTH_SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SMOOTH_QUARTZ_SLAB = registerBlock(Blocks.SMOOTH_QUARTZ_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GRANITE_SLAB = registerBlock(Blocks.GRANITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      ANDESITE_SLAB = registerBlock(Blocks.ANDESITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RED_NETHER_BRICK_SLAB = registerBlock(Blocks.RED_NETHER_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_ANDESITE_SLAB = registerBlock(Blocks.POLISHED_ANDESITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DIORITE_SLAB = registerBlock(Blocks.DIORITE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      COBBLED_DEEPSLATE_SLAB = registerBlock(Blocks.COBBLED_DEEPSLATE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_DEEPSLATE_SLAB = registerBlock(Blocks.POLISHED_DEEPSLATE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_BRICK_SLAB = registerBlock(Blocks.DEEPSLATE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      DEEPSLATE_TILE_SLAB = registerBlock(Blocks.DEEPSLATE_TILE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      SCAFFOLDING = registerBlock((BlockItem)(new ScaffoldingBlockItem(Blocks.SCAFFOLDING, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
      REDSTONE = registerItem((String)"redstone", new ItemNameBlockItem(Blocks.REDSTONE_WIRE, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE)));
      REDSTONE_TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.REDSTONE_TORCH, Blocks.REDSTONE_WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      REDSTONE_BLOCK = registerBlock(Blocks.REDSTONE_BLOCK, CreativeModeTab.TAB_REDSTONE);
      REPEATER = registerBlock(Blocks.REPEATER, CreativeModeTab.TAB_REDSTONE);
      COMPARATOR = registerBlock(Blocks.COMPARATOR, CreativeModeTab.TAB_REDSTONE);
      PISTON = registerBlock(Blocks.PISTON, CreativeModeTab.TAB_REDSTONE);
      STICKY_PISTON = registerBlock(Blocks.STICKY_PISTON, CreativeModeTab.TAB_REDSTONE);
      SLIME_BLOCK = registerBlock(Blocks.SLIME_BLOCK, CreativeModeTab.TAB_REDSTONE);
      HONEY_BLOCK = registerBlock(Blocks.HONEY_BLOCK, CreativeModeTab.TAB_REDSTONE);
      OBSERVER = registerBlock(Blocks.OBSERVER, CreativeModeTab.TAB_REDSTONE);
      HOPPER = registerBlock(Blocks.HOPPER, CreativeModeTab.TAB_REDSTONE);
      DISPENSER = registerBlock(Blocks.DISPENSER, CreativeModeTab.TAB_REDSTONE);
      DROPPER = registerBlock(Blocks.DROPPER, CreativeModeTab.TAB_REDSTONE);
      LECTERN = registerBlock(Blocks.LECTERN, CreativeModeTab.TAB_REDSTONE);
      TARGET = registerBlock(Blocks.TARGET, CreativeModeTab.TAB_REDSTONE);
      LEVER = registerBlock(Blocks.LEVER, CreativeModeTab.TAB_REDSTONE);
      LIGHTNING_ROD = registerBlock(Blocks.LIGHTNING_ROD, CreativeModeTab.TAB_REDSTONE);
      DAYLIGHT_DETECTOR = registerBlock(Blocks.DAYLIGHT_DETECTOR, CreativeModeTab.TAB_REDSTONE);
      SCULK_SENSOR = registerBlock(Blocks.SCULK_SENSOR, CreativeModeTab.TAB_REDSTONE);
      TRIPWIRE_HOOK = registerBlock(Blocks.TRIPWIRE_HOOK, CreativeModeTab.TAB_REDSTONE);
      TRAPPED_CHEST = registerBlock(Blocks.TRAPPED_CHEST, CreativeModeTab.TAB_REDSTONE);
      TNT = registerBlock(Blocks.TNT, CreativeModeTab.TAB_REDSTONE);
      REDSTONE_LAMP = registerBlock(Blocks.REDSTONE_LAMP, CreativeModeTab.TAB_REDSTONE);
      NOTE_BLOCK = registerBlock(Blocks.NOTE_BLOCK, CreativeModeTab.TAB_REDSTONE);
      STONE_BUTTON = registerBlock(Blocks.STONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
      POLISHED_BLACKSTONE_BUTTON = registerBlock(Blocks.POLISHED_BLACKSTONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
      OAK_BUTTON = registerBlock(Blocks.OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
      SPRUCE_BUTTON = registerBlock(Blocks.SPRUCE_BUTTON, CreativeModeTab.TAB_REDSTONE);
      BIRCH_BUTTON = registerBlock(Blocks.BIRCH_BUTTON, CreativeModeTab.TAB_REDSTONE);
      JUNGLE_BUTTON = registerBlock(Blocks.JUNGLE_BUTTON, CreativeModeTab.TAB_REDSTONE);
      ACACIA_BUTTON = registerBlock(Blocks.ACACIA_BUTTON, CreativeModeTab.TAB_REDSTONE);
      DARK_OAK_BUTTON = registerBlock(Blocks.DARK_OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
      MANGROVE_BUTTON = registerBlock(Blocks.MANGROVE_BUTTON, CreativeModeTab.TAB_REDSTONE);
      CRIMSON_BUTTON = registerBlock(Blocks.CRIMSON_BUTTON, CreativeModeTab.TAB_REDSTONE);
      WARPED_BUTTON = registerBlock(Blocks.WARPED_BUTTON, CreativeModeTab.TAB_REDSTONE);
      STONE_PRESSURE_PLATE = registerBlock(Blocks.STONE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      POLISHED_BLACKSTONE_PRESSURE_PLATE = registerBlock(Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      LIGHT_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      HEAVY_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      OAK_PRESSURE_PLATE = registerBlock(Blocks.OAK_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      SPRUCE_PRESSURE_PLATE = registerBlock(Blocks.SPRUCE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      BIRCH_PRESSURE_PLATE = registerBlock(Blocks.BIRCH_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      JUNGLE_PRESSURE_PLATE = registerBlock(Blocks.JUNGLE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      ACACIA_PRESSURE_PLATE = registerBlock(Blocks.ACACIA_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      DARK_OAK_PRESSURE_PLATE = registerBlock(Blocks.DARK_OAK_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      MANGROVE_PRESSURE_PLATE = registerBlock(Blocks.MANGROVE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      CRIMSON_PRESSURE_PLATE = registerBlock(Blocks.CRIMSON_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      WARPED_PRESSURE_PLATE = registerBlock(Blocks.WARPED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
      IRON_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.IRON_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      OAK_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.OAK_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      SPRUCE_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.SPRUCE_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      BIRCH_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.BIRCH_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      JUNGLE_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.JUNGLE_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      ACACIA_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.ACACIA_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      DARK_OAK_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.DARK_OAK_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      MANGROVE_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.MANGROVE_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      CRIMSON_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.CRIMSON_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      WARPED_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.WARPED_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
      IRON_TRAPDOOR = registerBlock(Blocks.IRON_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      OAK_TRAPDOOR = registerBlock(Blocks.OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      SPRUCE_TRAPDOOR = registerBlock(Blocks.SPRUCE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      BIRCH_TRAPDOOR = registerBlock(Blocks.BIRCH_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      JUNGLE_TRAPDOOR = registerBlock(Blocks.JUNGLE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      ACACIA_TRAPDOOR = registerBlock(Blocks.ACACIA_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      DARK_OAK_TRAPDOOR = registerBlock(Blocks.DARK_OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      MANGROVE_TRAPDOOR = registerBlock(Blocks.MANGROVE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      CRIMSON_TRAPDOOR = registerBlock(Blocks.CRIMSON_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      WARPED_TRAPDOOR = registerBlock(Blocks.WARPED_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
      OAK_FENCE_GATE = registerBlock(Blocks.OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      SPRUCE_FENCE_GATE = registerBlock(Blocks.SPRUCE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      BIRCH_FENCE_GATE = registerBlock(Blocks.BIRCH_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      JUNGLE_FENCE_GATE = registerBlock(Blocks.JUNGLE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      ACACIA_FENCE_GATE = registerBlock(Blocks.ACACIA_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      DARK_OAK_FENCE_GATE = registerBlock(Blocks.DARK_OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      MANGROVE_FENCE_GATE = registerBlock(Blocks.MANGROVE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      CRIMSON_FENCE_GATE = registerBlock(Blocks.CRIMSON_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      WARPED_FENCE_GATE = registerBlock(Blocks.WARPED_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
      POWERED_RAIL = registerBlock(Blocks.POWERED_RAIL, CreativeModeTab.TAB_TRANSPORTATION);
      DETECTOR_RAIL = registerBlock(Blocks.DETECTOR_RAIL, CreativeModeTab.TAB_TRANSPORTATION);
      RAIL = registerBlock(Blocks.RAIL, CreativeModeTab.TAB_TRANSPORTATION);
      ACTIVATOR_RAIL = registerBlock(Blocks.ACTIVATOR_RAIL, CreativeModeTab.TAB_TRANSPORTATION);
      SADDLE = registerItem((String)"saddle", new SaddleItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      MINECART = registerItem((String)"minecart", new MinecartItem(AbstractMinecart.Type.RIDEABLE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      CHEST_MINECART = registerItem((String)"chest_minecart", new MinecartItem(AbstractMinecart.Type.CHEST, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      FURNACE_MINECART = registerItem((String)"furnace_minecart", new MinecartItem(AbstractMinecart.Type.FURNACE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      TNT_MINECART = registerItem((String)"tnt_minecart", new MinecartItem(AbstractMinecart.Type.TNT, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      HOPPER_MINECART = registerItem((String)"hopper_minecart", new MinecartItem(AbstractMinecart.Type.HOPPER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      CARROT_ON_A_STICK = registerItem((String)"carrot_on_a_stick", new FoodOnAStickItem((new Item.Properties()).durability(25).tab(CreativeModeTab.TAB_TRANSPORTATION), EntityType.PIG, 7));
      WARPED_FUNGUS_ON_A_STICK = registerItem((String)"warped_fungus_on_a_stick", new FoodOnAStickItem((new Item.Properties()).durability(100).tab(CreativeModeTab.TAB_TRANSPORTATION), EntityType.STRIDER, 1));
      ELYTRA = registerItem((String)"elytra", new ElytraItem((new Item.Properties()).durability(432).tab(CreativeModeTab.TAB_TRANSPORTATION).rarity(Rarity.UNCOMMON)));
      OAK_BOAT = registerItem((String)"oak_boat", new BoatItem(false, Boat.Type.OAK, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      OAK_CHEST_BOAT = registerItem((String)"oak_chest_boat", new BoatItem(true, Boat.Type.OAK, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      SPRUCE_BOAT = registerItem((String)"spruce_boat", new BoatItem(false, Boat.Type.SPRUCE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      SPRUCE_CHEST_BOAT = registerItem((String)"spruce_chest_boat", new BoatItem(true, Boat.Type.SPRUCE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      BIRCH_BOAT = registerItem((String)"birch_boat", new BoatItem(false, Boat.Type.BIRCH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      BIRCH_CHEST_BOAT = registerItem((String)"birch_chest_boat", new BoatItem(true, Boat.Type.BIRCH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      JUNGLE_BOAT = registerItem((String)"jungle_boat", new BoatItem(false, Boat.Type.JUNGLE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      JUNGLE_CHEST_BOAT = registerItem((String)"jungle_chest_boat", new BoatItem(true, Boat.Type.JUNGLE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      ACACIA_BOAT = registerItem((String)"acacia_boat", new BoatItem(false, Boat.Type.ACACIA, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      ACACIA_CHEST_BOAT = registerItem((String)"acacia_chest_boat", new BoatItem(true, Boat.Type.ACACIA, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      DARK_OAK_BOAT = registerItem((String)"dark_oak_boat", new BoatItem(false, Boat.Type.DARK_OAK, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      DARK_OAK_CHEST_BOAT = registerItem((String)"dark_oak_chest_boat", new BoatItem(true, Boat.Type.DARK_OAK, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      MANGROVE_BOAT = registerItem((String)"mangrove_boat", new BoatItem(false, Boat.Type.MANGROVE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      MANGROVE_CHEST_BOAT = registerItem((String)"mangrove_chest_boat", new BoatItem(true, Boat.Type.MANGROVE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
      STRUCTURE_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.STRUCTURE_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
      JIGSAW = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.JIGSAW, (new Item.Properties()).rarity(Rarity.EPIC))));
      TURTLE_HELMET = registerItem((String)"turtle_helmet", new ArmorItem(ArmorMaterials.TURTLE, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      SCUTE = registerItem("scute", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      FLINT_AND_STEEL = registerItem((String)"flint_and_steel", new FlintAndSteelItem((new Item.Properties()).durability(64).tab(CreativeModeTab.TAB_TOOLS)));
      APPLE = registerItem("apple", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.APPLE)));
      BOW = registerItem((String)"bow", new BowItem((new Item.Properties()).durability(384).tab(CreativeModeTab.TAB_COMBAT)));
      ARROW = registerItem((String)"arrow", new ArrowItem((new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      COAL = registerItem("coal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      CHARCOAL = registerItem("charcoal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      DIAMOND = registerItem("diamond", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      EMERALD = registerItem("emerald", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      LAPIS_LAZULI = registerItem("lapis_lazuli", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      QUARTZ = registerItem("quartz", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      AMETHYST_SHARD = registerItem("amethyst_shard", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      RAW_IRON = registerItem("raw_iron", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      IRON_INGOT = registerItem("iron_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      RAW_COPPER = registerItem("raw_copper", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      COPPER_INGOT = registerItem("copper_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      RAW_GOLD = registerItem("raw_gold", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      GOLD_INGOT = registerItem("gold_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      NETHERITE_INGOT = registerItem("netherite_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).fireResistant()));
      NETHERITE_SCRAP = registerItem("netherite_scrap", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).fireResistant()));
      WOODEN_SWORD = registerItem((String)"wooden_sword", new SwordItem(Tiers.WOOD, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      WOODEN_SHOVEL = registerItem((String)"wooden_shovel", new ShovelItem(Tiers.WOOD, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      WOODEN_PICKAXE = registerItem((String)"wooden_pickaxe", new PickaxeItem(Tiers.WOOD, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      WOODEN_AXE = registerItem((String)"wooden_axe", new AxeItem(Tiers.WOOD, 6.0F, -3.2F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      WOODEN_HOE = registerItem((String)"wooden_hoe", new HoeItem(Tiers.WOOD, 0, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      STONE_SWORD = registerItem((String)"stone_sword", new SwordItem(Tiers.STONE, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      STONE_SHOVEL = registerItem((String)"stone_shovel", new ShovelItem(Tiers.STONE, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      STONE_PICKAXE = registerItem((String)"stone_pickaxe", new PickaxeItem(Tiers.STONE, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      STONE_AXE = registerItem((String)"stone_axe", new AxeItem(Tiers.STONE, 7.0F, -3.2F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      STONE_HOE = registerItem((String)"stone_hoe", new HoeItem(Tiers.STONE, -1, -2.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      GOLDEN_SWORD = registerItem((String)"golden_sword", new SwordItem(Tiers.GOLD, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      GOLDEN_SHOVEL = registerItem((String)"golden_shovel", new ShovelItem(Tiers.GOLD, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      GOLDEN_PICKAXE = registerItem((String)"golden_pickaxe", new PickaxeItem(Tiers.GOLD, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      GOLDEN_AXE = registerItem((String)"golden_axe", new AxeItem(Tiers.GOLD, 6.0F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      GOLDEN_HOE = registerItem((String)"golden_hoe", new HoeItem(Tiers.GOLD, 0, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      IRON_SWORD = registerItem((String)"iron_sword", new SwordItem(Tiers.IRON, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      IRON_SHOVEL = registerItem((String)"iron_shovel", new ShovelItem(Tiers.IRON, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      IRON_PICKAXE = registerItem((String)"iron_pickaxe", new PickaxeItem(Tiers.IRON, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      IRON_AXE = registerItem((String)"iron_axe", new AxeItem(Tiers.IRON, 6.0F, -3.1F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      IRON_HOE = registerItem((String)"iron_hoe", new HoeItem(Tiers.IRON, -2, -1.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      DIAMOND_SWORD = registerItem((String)"diamond_sword", new SwordItem(Tiers.DIAMOND, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      DIAMOND_SHOVEL = registerItem((String)"diamond_shovel", new ShovelItem(Tiers.DIAMOND, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      DIAMOND_PICKAXE = registerItem((String)"diamond_pickaxe", new PickaxeItem(Tiers.DIAMOND, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      DIAMOND_AXE = registerItem((String)"diamond_axe", new AxeItem(Tiers.DIAMOND, 5.0F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      DIAMOND_HOE = registerItem((String)"diamond_hoe", new HoeItem(Tiers.DIAMOND, -3, 0.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      NETHERITE_SWORD = registerItem((String)"netherite_sword", new SwordItem(Tiers.NETHERITE, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
      NETHERITE_SHOVEL = registerItem((String)"netherite_shovel", new ShovelItem(Tiers.NETHERITE, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
      NETHERITE_PICKAXE = registerItem((String)"netherite_pickaxe", new PickaxeItem(Tiers.NETHERITE, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
      NETHERITE_AXE = registerItem((String)"netherite_axe", new AxeItem(Tiers.NETHERITE, 5.0F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
      NETHERITE_HOE = registerItem((String)"netherite_hoe", new HoeItem(Tiers.NETHERITE, -4, 0.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
      STICK = registerItem("stick", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BOWL = registerItem("bowl", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      MUSHROOM_STEW = registerItem((String)"mushroom_stew", new BowlFoodItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_FOOD).food(Foods.MUSHROOM_STEW)));
      STRING = registerItem((String)"string", new ItemNameBlockItem(Blocks.TRIPWIRE, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      FEATHER = registerItem("feather", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      GUNPOWDER = registerItem("gunpowder", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      WHEAT_SEEDS = registerItem((String)"wheat_seeds", new ItemNameBlockItem(Blocks.WHEAT, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      WHEAT = registerItem("wheat", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BREAD = registerItem("bread", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.BREAD)));
      LEATHER_HELMET = registerItem((String)"leather_helmet", new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      LEATHER_CHESTPLATE = registerItem((String)"leather_chestplate", new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      LEATHER_LEGGINGS = registerItem((String)"leather_leggings", new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      LEATHER_BOOTS = registerItem((String)"leather_boots", new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      CHAINMAIL_HELMET = registerItem((String)"chainmail_helmet", new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      CHAINMAIL_CHESTPLATE = registerItem((String)"chainmail_chestplate", new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      CHAINMAIL_LEGGINGS = registerItem((String)"chainmail_leggings", new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      CHAINMAIL_BOOTS = registerItem((String)"chainmail_boots", new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      IRON_HELMET = registerItem((String)"iron_helmet", new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      IRON_CHESTPLATE = registerItem((String)"iron_chestplate", new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      IRON_LEGGINGS = registerItem((String)"iron_leggings", new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      IRON_BOOTS = registerItem((String)"iron_boots", new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      DIAMOND_HELMET = registerItem((String)"diamond_helmet", new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      DIAMOND_CHESTPLATE = registerItem((String)"diamond_chestplate", new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      DIAMOND_LEGGINGS = registerItem((String)"diamond_leggings", new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      DIAMOND_BOOTS = registerItem((String)"diamond_boots", new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      GOLDEN_HELMET = registerItem((String)"golden_helmet", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      GOLDEN_CHESTPLATE = registerItem((String)"golden_chestplate", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      GOLDEN_LEGGINGS = registerItem((String)"golden_leggings", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      GOLDEN_BOOTS = registerItem((String)"golden_boots", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      NETHERITE_HELMET = registerItem((String)"netherite_helmet", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
      NETHERITE_CHESTPLATE = registerItem((String)"netherite_chestplate", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
      NETHERITE_LEGGINGS = registerItem((String)"netherite_leggings", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
      NETHERITE_BOOTS = registerItem((String)"netherite_boots", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
      FLINT = registerItem("flint", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      PORKCHOP = registerItem("porkchop", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PORKCHOP)));
      COOKED_PORKCHOP = registerItem("cooked_porkchop", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_PORKCHOP)));
      PAINTING = registerItem((String)"painting", new HangingEntityItem(EntityType.PAINTING, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
      GOLDEN_APPLE = registerItem("golden_apple", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).rarity(Rarity.RARE).food(Foods.GOLDEN_APPLE)));
      ENCHANTED_GOLDEN_APPLE = registerItem((String)"enchanted_golden_apple", new EnchantedGoldenAppleItem((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).rarity(Rarity.EPIC).food(Foods.ENCHANTED_GOLDEN_APPLE)));
      OAK_SIGN = registerItem((String)"oak_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.OAK_SIGN, Blocks.OAK_WALL_SIGN));
      SPRUCE_SIGN = registerItem((String)"spruce_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.SPRUCE_SIGN, Blocks.SPRUCE_WALL_SIGN));
      BIRCH_SIGN = registerItem((String)"birch_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.BIRCH_SIGN, Blocks.BIRCH_WALL_SIGN));
      JUNGLE_SIGN = registerItem((String)"jungle_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.JUNGLE_SIGN, Blocks.JUNGLE_WALL_SIGN));
      ACACIA_SIGN = registerItem((String)"acacia_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.ACACIA_SIGN, Blocks.ACACIA_WALL_SIGN));
      DARK_OAK_SIGN = registerItem((String)"dark_oak_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.DARK_OAK_SIGN, Blocks.DARK_OAK_WALL_SIGN));
      MANGROVE_SIGN = registerItem((String)"mangrove_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.MANGROVE_SIGN, Blocks.MANGROVE_WALL_SIGN));
      CRIMSON_SIGN = registerItem((String)"crimson_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.CRIMSON_SIGN, Blocks.CRIMSON_WALL_SIGN));
      WARPED_SIGN = registerItem((String)"warped_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.WARPED_SIGN, Blocks.WARPED_WALL_SIGN));
      BUCKET = registerItem((String)"bucket", new BucketItem(Fluids.EMPTY, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MISC)));
      WATER_BUCKET = registerItem((String)"water_bucket", new BucketItem(Fluids.WATER, (new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      LAVA_BUCKET = registerItem((String)"lava_bucket", new BucketItem(Fluids.LAVA, (new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      POWDER_SNOW_BUCKET = registerItem((String)"powder_snow_bucket", new SolidBucketItem(Blocks.POWDER_SNOW, SoundEvents.BUCKET_EMPTY_POWDER_SNOW, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      SNOWBALL = registerItem((String)"snowball", new SnowballItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MISC)));
      LEATHER = registerItem("leather", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      MILK_BUCKET = registerItem((String)"milk_bucket", new MilkBucketItem((new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      PUFFERFISH_BUCKET = registerItem((String)"pufferfish_bucket", new MobBucketItem(EntityType.PUFFERFISH, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      SALMON_BUCKET = registerItem((String)"salmon_bucket", new MobBucketItem(EntityType.SALMON, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      COD_BUCKET = registerItem((String)"cod_bucket", new MobBucketItem(EntityType.COD, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      TROPICAL_FISH_BUCKET = registerItem((String)"tropical_fish_bucket", new MobBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      AXOLOTL_BUCKET = registerItem((String)"axolotl_bucket", new MobBucketItem(EntityType.AXOLOTL, Fluids.WATER, SoundEvents.BUCKET_EMPTY_AXOLOTL, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      TADPOLE_BUCKET = registerItem((String)"tadpole_bucket", new MobBucketItem(EntityType.TADPOLE, Fluids.WATER, SoundEvents.BUCKET_EMPTY_TADPOLE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      BRICK = registerItem("brick", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      CLAY_BALL = registerItem("clay_ball", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      DRIED_KELP_BLOCK = registerBlock(Blocks.DRIED_KELP_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
      PAPER = registerItem("paper", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      BOOK = registerItem((String)"book", new BookItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SLIME_BALL = registerItem("slime_ball", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      EGG = registerItem((String)"egg", new EggItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MATERIALS)));
      COMPASS = registerItem((String)"compass", new CompassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      RECOVERY_COMPASS = registerItem("recovery_compass", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      BUNDLE = registerItem((String)"bundle", new BundleItem((new Item.Properties()).stacksTo(1).tab((CreativeModeTab)ifPart2(CreativeModeTab.TAB_TOOLS).orElse((Object)null))));
      FISHING_ROD = registerItem((String)"fishing_rod", new FishingRodItem((new Item.Properties()).durability(64).tab(CreativeModeTab.TAB_TOOLS)));
      CLOCK = registerItem("clock", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      SPYGLASS = registerItem((String)"spyglass", new SpyglassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).stacksTo(1)));
      GLOWSTONE_DUST = registerItem("glowstone_dust", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      COD = registerItem("cod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COD)));
      SALMON = registerItem("salmon", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SALMON)));
      TROPICAL_FISH = registerItem("tropical_fish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.TROPICAL_FISH)));
      PUFFERFISH = registerItem("pufferfish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PUFFERFISH)));
      COOKED_COD = registerItem("cooked_cod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_COD)));
      COOKED_SALMON = registerItem("cooked_salmon", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_SALMON)));
      INK_SAC = registerItem("ink_sac", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      GLOW_INK_SAC = registerItem("glow_ink_sac", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      COCOA_BEANS = registerItem((String)"cocoa_beans", new ItemNameBlockItem(Blocks.COCOA, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      WHITE_DYE = registerItem((String)"white_dye", new DyeItem(DyeColor.WHITE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      ORANGE_DYE = registerItem((String)"orange_dye", new DyeItem(DyeColor.ORANGE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      MAGENTA_DYE = registerItem((String)"magenta_dye", new DyeItem(DyeColor.MAGENTA, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      LIGHT_BLUE_DYE = registerItem((String)"light_blue_dye", new DyeItem(DyeColor.LIGHT_BLUE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      YELLOW_DYE = registerItem((String)"yellow_dye", new DyeItem(DyeColor.YELLOW, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      LIME_DYE = registerItem((String)"lime_dye", new DyeItem(DyeColor.LIME, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      PINK_DYE = registerItem((String)"pink_dye", new DyeItem(DyeColor.PINK, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      GRAY_DYE = registerItem((String)"gray_dye", new DyeItem(DyeColor.GRAY, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      LIGHT_GRAY_DYE = registerItem((String)"light_gray_dye", new DyeItem(DyeColor.LIGHT_GRAY, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      CYAN_DYE = registerItem((String)"cyan_dye", new DyeItem(DyeColor.CYAN, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      PURPLE_DYE = registerItem((String)"purple_dye", new DyeItem(DyeColor.PURPLE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BLUE_DYE = registerItem((String)"blue_dye", new DyeItem(DyeColor.BLUE, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BROWN_DYE = registerItem((String)"brown_dye", new DyeItem(DyeColor.BROWN, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      GREEN_DYE = registerItem((String)"green_dye", new DyeItem(DyeColor.GREEN, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      RED_DYE = registerItem((String)"red_dye", new DyeItem(DyeColor.RED, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BLACK_DYE = registerItem((String)"black_dye", new DyeItem(DyeColor.BLACK, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BONE_MEAL = registerItem((String)"bone_meal", new BoneMealItem((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BONE = registerItem("bone", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SUGAR = registerItem("sugar", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      CAKE = registerBlock(new BlockItem(Blocks.CAKE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_FOOD)));
      WHITE_BED = registerBlock((BlockItem)(new BedItem(Blocks.WHITE_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      ORANGE_BED = registerBlock((BlockItem)(new BedItem(Blocks.ORANGE_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      MAGENTA_BED = registerBlock((BlockItem)(new BedItem(Blocks.MAGENTA_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      LIGHT_BLUE_BED = registerBlock((BlockItem)(new BedItem(Blocks.LIGHT_BLUE_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      YELLOW_BED = registerBlock((BlockItem)(new BedItem(Blocks.YELLOW_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      LIME_BED = registerBlock((BlockItem)(new BedItem(Blocks.LIME_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      PINK_BED = registerBlock((BlockItem)(new BedItem(Blocks.PINK_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      GRAY_BED = registerBlock((BlockItem)(new BedItem(Blocks.GRAY_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      LIGHT_GRAY_BED = registerBlock((BlockItem)(new BedItem(Blocks.LIGHT_GRAY_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      CYAN_BED = registerBlock((BlockItem)(new BedItem(Blocks.CYAN_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      PURPLE_BED = registerBlock((BlockItem)(new BedItem(Blocks.PURPLE_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      BLUE_BED = registerBlock((BlockItem)(new BedItem(Blocks.BLUE_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      BROWN_BED = registerBlock((BlockItem)(new BedItem(Blocks.BROWN_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      GREEN_BED = registerBlock((BlockItem)(new BedItem(Blocks.GREEN_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      RED_BED = registerBlock((BlockItem)(new BedItem(Blocks.RED_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      BLACK_BED = registerBlock((BlockItem)(new BedItem(Blocks.BLACK_BED, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS))));
      COOKIE = registerItem("cookie", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKIE)));
      FILLED_MAP = registerItem((String)"filled_map", new MapItem(new Item.Properties()));
      SHEARS = registerItem((String)"shears", new ShearsItem((new Item.Properties()).durability(238).tab(CreativeModeTab.TAB_TOOLS)));
      MELON_SLICE = registerItem("melon_slice", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.MELON_SLICE)));
      DRIED_KELP = registerItem("dried_kelp", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.DRIED_KELP)));
      PUMPKIN_SEEDS = registerItem((String)"pumpkin_seeds", new ItemNameBlockItem(Blocks.PUMPKIN_STEM, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      MELON_SEEDS = registerItem((String)"melon_seeds", new ItemNameBlockItem(Blocks.MELON_STEM, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BEEF = registerItem("beef", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.BEEF)));
      COOKED_BEEF = registerItem("cooked_beef", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_BEEF)));
      CHICKEN = registerItem("chicken", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.CHICKEN)));
      COOKED_CHICKEN = registerItem("cooked_chicken", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_CHICKEN)));
      ROTTEN_FLESH = registerItem("rotten_flesh", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.ROTTEN_FLESH)));
      ENDER_PEARL = registerItem((String)"ender_pearl", new EnderpearlItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MISC)));
      BLAZE_ROD = registerItem("blaze_rod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      GHAST_TEAR = registerItem("ghast_tear", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      GOLD_NUGGET = registerItem("gold_nugget", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      NETHER_WART = registerItem((String)"nether_wart", new ItemNameBlockItem(Blocks.NETHER_WART, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      POTION = registerItem((String)"potion", new PotionItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_BREWING)));
      GLASS_BOTTLE = registerItem((String)"glass_bottle", new BottleItem((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      SPIDER_EYE = registerItem("spider_eye", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SPIDER_EYE)));
      FERMENTED_SPIDER_EYE = registerItem("fermented_spider_eye", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      BLAZE_POWDER = registerItem("blaze_powder", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      MAGMA_CREAM = registerItem("magma_cream", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      BREWING_STAND = registerBlock(Blocks.BREWING_STAND, CreativeModeTab.TAB_BREWING);
      CAULDRON = registerBlock(Blocks.CAULDRON, CreativeModeTab.TAB_BREWING, Blocks.WATER_CAULDRON, Blocks.LAVA_CAULDRON, Blocks.POWDER_SNOW_CAULDRON);
      ENDER_EYE = registerItem((String)"ender_eye", new EnderEyeItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      GLISTERING_MELON_SLICE = registerItem("glistering_melon_slice", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      ALLAY_SPAWN_EGG = registerItem((String)"allay_spawn_egg", new SpawnEggItem(EntityType.ALLAY, 56063, 44543, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      AXOLOTL_SPAWN_EGG = registerItem((String)"axolotl_spawn_egg", new SpawnEggItem(EntityType.AXOLOTL, 16499171, 10890612, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      BAT_SPAWN_EGG = registerItem((String)"bat_spawn_egg", new SpawnEggItem(EntityType.BAT, 4996656, 986895, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      BEE_SPAWN_EGG = registerItem((String)"bee_spawn_egg", new SpawnEggItem(EntityType.BEE, 15582019, 4400155, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      BLAZE_SPAWN_EGG = registerItem((String)"blaze_spawn_egg", new SpawnEggItem(EntityType.BLAZE, 16167425, 16775294, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      CAT_SPAWN_EGG = registerItem((String)"cat_spawn_egg", new SpawnEggItem(EntityType.CAT, 15714446, 9794134, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      CAVE_SPIDER_SPAWN_EGG = registerItem((String)"cave_spider_spawn_egg", new SpawnEggItem(EntityType.CAVE_SPIDER, 803406, 11013646, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      CHICKEN_SPAWN_EGG = registerItem((String)"chicken_spawn_egg", new SpawnEggItem(EntityType.CHICKEN, 10592673, 16711680, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      COD_SPAWN_EGG = registerItem((String)"cod_spawn_egg", new SpawnEggItem(EntityType.COD, 12691306, 15058059, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      COW_SPAWN_EGG = registerItem((String)"cow_spawn_egg", new SpawnEggItem(EntityType.COW, 4470310, 10592673, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      CREEPER_SPAWN_EGG = registerItem((String)"creeper_spawn_egg", new SpawnEggItem(EntityType.CREEPER, 894731, 0, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      DOLPHIN_SPAWN_EGG = registerItem((String)"dolphin_spawn_egg", new SpawnEggItem(EntityType.DOLPHIN, 2243405, 16382457, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      DONKEY_SPAWN_EGG = registerItem((String)"donkey_spawn_egg", new SpawnEggItem(EntityType.DONKEY, 5457209, 8811878, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      DROWNED_SPAWN_EGG = registerItem((String)"drowned_spawn_egg", new SpawnEggItem(EntityType.DROWNED, 9433559, 7969893, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ELDER_GUARDIAN_SPAWN_EGG = registerItem((String)"elder_guardian_spawn_egg", new SpawnEggItem(EntityType.ELDER_GUARDIAN, 13552826, 7632531, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ENDERMAN_SPAWN_EGG = registerItem((String)"enderman_spawn_egg", new SpawnEggItem(EntityType.ENDERMAN, 1447446, 0, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ENDERMITE_SPAWN_EGG = registerItem((String)"endermite_spawn_egg", new SpawnEggItem(EntityType.ENDERMITE, 1447446, 7237230, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      EVOKER_SPAWN_EGG = registerItem((String)"evoker_spawn_egg", new SpawnEggItem(EntityType.EVOKER, 9804699, 1973274, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      FOX_SPAWN_EGG = registerItem((String)"fox_spawn_egg", new SpawnEggItem(EntityType.FOX, 14005919, 13396256, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      FROG_SPAWN_EGG = registerItem((String)"frog_spawn_egg", new SpawnEggItem(EntityType.FROG, 13661252, 16762748, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      GHAST_SPAWN_EGG = registerItem((String)"ghast_spawn_egg", new SpawnEggItem(EntityType.GHAST, 16382457, 12369084, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      GLOW_SQUID_SPAWN_EGG = registerItem((String)"glow_squid_spawn_egg", new SpawnEggItem(EntityType.GLOW_SQUID, 611926, 8778172, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      GOAT_SPAWN_EGG = registerItem((String)"goat_spawn_egg", new SpawnEggItem(EntityType.GOAT, 10851452, 5589310, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      GUARDIAN_SPAWN_EGG = registerItem((String)"guardian_spawn_egg", new SpawnEggItem(EntityType.GUARDIAN, 5931634, 15826224, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      HOGLIN_SPAWN_EGG = registerItem((String)"hoglin_spawn_egg", new SpawnEggItem(EntityType.HOGLIN, 13004373, 6251620, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      HORSE_SPAWN_EGG = registerItem((String)"horse_spawn_egg", new SpawnEggItem(EntityType.HORSE, 12623485, 15656192, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      HUSK_SPAWN_EGG = registerItem((String)"husk_spawn_egg", new SpawnEggItem(EntityType.HUSK, 7958625, 15125652, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      LLAMA_SPAWN_EGG = registerItem((String)"llama_spawn_egg", new SpawnEggItem(EntityType.LLAMA, 12623485, 10051392, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      MAGMA_CUBE_SPAWN_EGG = registerItem((String)"magma_cube_spawn_egg", new SpawnEggItem(EntityType.MAGMA_CUBE, 3407872, 16579584, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      MOOSHROOM_SPAWN_EGG = registerItem((String)"mooshroom_spawn_egg", new SpawnEggItem(EntityType.MOOSHROOM, 10489616, 12040119, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      MULE_SPAWN_EGG = registerItem((String)"mule_spawn_egg", new SpawnEggItem(EntityType.MULE, 1769984, 5321501, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      OCELOT_SPAWN_EGG = registerItem((String)"ocelot_spawn_egg", new SpawnEggItem(EntityType.OCELOT, 15720061, 5653556, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PANDA_SPAWN_EGG = registerItem((String)"panda_spawn_egg", new SpawnEggItem(EntityType.PANDA, 15198183, 1776418, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PARROT_SPAWN_EGG = registerItem((String)"parrot_spawn_egg", new SpawnEggItem(EntityType.PARROT, 894731, 16711680, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PHANTOM_SPAWN_EGG = registerItem((String)"phantom_spawn_egg", new SpawnEggItem(EntityType.PHANTOM, 4411786, 8978176, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PIG_SPAWN_EGG = registerItem((String)"pig_spawn_egg", new SpawnEggItem(EntityType.PIG, 15771042, 14377823, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PIGLIN_SPAWN_EGG = registerItem((String)"piglin_spawn_egg", new SpawnEggItem(EntityType.PIGLIN, 10051392, 16380836, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PIGLIN_BRUTE_SPAWN_EGG = registerItem((String)"piglin_brute_spawn_egg", new SpawnEggItem(EntityType.PIGLIN_BRUTE, 5843472, 16380836, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PILLAGER_SPAWN_EGG = registerItem((String)"pillager_spawn_egg", new SpawnEggItem(EntityType.PILLAGER, 5451574, 9804699, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      POLAR_BEAR_SPAWN_EGG = registerItem((String)"polar_bear_spawn_egg", new SpawnEggItem(EntityType.POLAR_BEAR, 15921906, 9803152, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      PUFFERFISH_SPAWN_EGG = registerItem((String)"pufferfish_spawn_egg", new SpawnEggItem(EntityType.PUFFERFISH, 16167425, 3654642, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      RABBIT_SPAWN_EGG = registerItem((String)"rabbit_spawn_egg", new SpawnEggItem(EntityType.RABBIT, 10051392, 7555121, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      RAVAGER_SPAWN_EGG = registerItem((String)"ravager_spawn_egg", new SpawnEggItem(EntityType.RAVAGER, 7697520, 5984329, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SALMON_SPAWN_EGG = registerItem((String)"salmon_spawn_egg", new SpawnEggItem(EntityType.SALMON, 10489616, 951412, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SHEEP_SPAWN_EGG = registerItem((String)"sheep_spawn_egg", new SpawnEggItem(EntityType.SHEEP, 15198183, 16758197, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SHULKER_SPAWN_EGG = registerItem((String)"shulker_spawn_egg", new SpawnEggItem(EntityType.SHULKER, 9725844, 5060690, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SILVERFISH_SPAWN_EGG = registerItem((String)"silverfish_spawn_egg", new SpawnEggItem(EntityType.SILVERFISH, 7237230, 3158064, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SKELETON_SPAWN_EGG = registerItem((String)"skeleton_spawn_egg", new SpawnEggItem(EntityType.SKELETON, 12698049, 4802889, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SKELETON_HORSE_SPAWN_EGG = registerItem((String)"skeleton_horse_spawn_egg", new SpawnEggItem(EntityType.SKELETON_HORSE, 6842447, 15066584, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SLIME_SPAWN_EGG = registerItem((String)"slime_spawn_egg", new SpawnEggItem(EntityType.SLIME, 5349438, 8306542, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SPIDER_SPAWN_EGG = registerItem((String)"spider_spawn_egg", new SpawnEggItem(EntityType.SPIDER, 3419431, 11013646, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      SQUID_SPAWN_EGG = registerItem((String)"squid_spawn_egg", new SpawnEggItem(EntityType.SQUID, 2243405, 7375001, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      STRAY_SPAWN_EGG = registerItem((String)"stray_spawn_egg", new SpawnEggItem(EntityType.STRAY, 6387319, 14543594, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      STRIDER_SPAWN_EGG = registerItem((String)"strider_spawn_egg", new SpawnEggItem(EntityType.STRIDER, 10236982, 5065037, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      TADPOLE_SPAWN_EGG = registerItem((String)"tadpole_spawn_egg", new SpawnEggItem(EntityType.TADPOLE, 7164733, 1444352, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      TRADER_LLAMA_SPAWN_EGG = registerItem((String)"trader_llama_spawn_egg", new SpawnEggItem(EntityType.TRADER_LLAMA, 15377456, 4547222, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      TROPICAL_FISH_SPAWN_EGG = registerItem((String)"tropical_fish_spawn_egg", new SpawnEggItem(EntityType.TROPICAL_FISH, 15690005, 16775663, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      TURTLE_SPAWN_EGG = registerItem((String)"turtle_spawn_egg", new SpawnEggItem(EntityType.TURTLE, 15198183, 44975, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      VEX_SPAWN_EGG = registerItem((String)"vex_spawn_egg", new SpawnEggItem(EntityType.VEX, 8032420, 15265265, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      VILLAGER_SPAWN_EGG = registerItem((String)"villager_spawn_egg", new SpawnEggItem(EntityType.VILLAGER, 5651507, 12422002, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      VINDICATOR_SPAWN_EGG = registerItem((String)"vindicator_spawn_egg", new SpawnEggItem(EntityType.VINDICATOR, 9804699, 2580065, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      WANDERING_TRADER_SPAWN_EGG = registerItem((String)"wandering_trader_spawn_egg", new SpawnEggItem(EntityType.WANDERING_TRADER, 4547222, 15377456, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      WARDEN_SPAWN_EGG = registerItem((String)"warden_spawn_egg", new SpawnEggItem(EntityType.WARDEN, 1001033, 3790560, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      WITCH_SPAWN_EGG = registerItem((String)"witch_spawn_egg", new SpawnEggItem(EntityType.WITCH, 3407872, 5349438, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      WITHER_SKELETON_SPAWN_EGG = registerItem((String)"wither_skeleton_spawn_egg", new SpawnEggItem(EntityType.WITHER_SKELETON, 1315860, 4672845, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      WOLF_SPAWN_EGG = registerItem((String)"wolf_spawn_egg", new SpawnEggItem(EntityType.WOLF, 14144467, 13545366, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ZOGLIN_SPAWN_EGG = registerItem((String)"zoglin_spawn_egg", new SpawnEggItem(EntityType.ZOGLIN, 13004373, 15132390, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ZOMBIE_SPAWN_EGG = registerItem((String)"zombie_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE, 44975, 7969893, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ZOMBIE_HORSE_SPAWN_EGG = registerItem((String)"zombie_horse_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_HORSE, 3232308, 9945732, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ZOMBIE_VILLAGER_SPAWN_EGG = registerItem((String)"zombie_villager_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_VILLAGER, 5651507, 7969893, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ZOMBIFIED_PIGLIN_SPAWN_EGG = registerItem((String)"zombified_piglin_spawn_egg", new SpawnEggItem(EntityType.ZOMBIFIED_PIGLIN, 15373203, 5009705, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      EXPERIENCE_BOTTLE = registerItem((String)"experience_bottle", new ExperienceBottleItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
      FIRE_CHARGE = registerItem((String)"fire_charge", new FireChargeItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      WRITABLE_BOOK = registerItem((String)"writable_book", new WritableBookItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      WRITTEN_BOOK = registerItem((String)"written_book", new WrittenBookItem((new Item.Properties()).stacksTo(16)));
      ITEM_FRAME = registerItem((String)"item_frame", new ItemFrameItem(EntityType.ITEM_FRAME, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
      GLOW_ITEM_FRAME = registerItem((String)"glow_item_frame", new ItemFrameItem(EntityType.GLOW_ITEM_FRAME, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
      FLOWER_POT = registerBlock(Blocks.FLOWER_POT, CreativeModeTab.TAB_DECORATIONS);
      CARROT = registerItem((String)"carrot", new ItemNameBlockItem(Blocks.CARROTS, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.CARROT)));
      POTATO = registerItem((String)"potato", new ItemNameBlockItem(Blocks.POTATOES, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.POTATO)));
      BAKED_POTATO = registerItem("baked_potato", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.BAKED_POTATO)));
      POISONOUS_POTATO = registerItem("poisonous_potato", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.POISONOUS_POTATO)));
      MAP = registerItem((String)"map", new EmptyMapItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      GOLDEN_CARROT = registerItem("golden_carrot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING).food(Foods.GOLDEN_CARROT)));
      SKELETON_SKULL = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.SKELETON_SKULL, Blocks.SKELETON_WALL_SKULL, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
      WITHER_SKELETON_SKULL = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.WITHER_SKELETON_SKULL, Blocks.WITHER_SKELETON_WALL_SKULL, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
      PLAYER_HEAD = registerBlock((BlockItem)(new PlayerHeadItem(Blocks.PLAYER_HEAD, Blocks.PLAYER_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
      ZOMBIE_HEAD = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.ZOMBIE_HEAD, Blocks.ZOMBIE_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
      CREEPER_HEAD = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.CREEPER_HEAD, Blocks.CREEPER_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
      DRAGON_HEAD = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.DRAGON_HEAD, Blocks.DRAGON_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
      NETHER_STAR = registerItem((String)"nether_star", new SimpleFoiledItem((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).rarity(Rarity.UNCOMMON)));
      PUMPKIN_PIE = registerItem("pumpkin_pie", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PUMPKIN_PIE)));
      FIREWORK_ROCKET = registerItem((String)"firework_rocket", new FireworkRocketItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      FIREWORK_STAR = registerItem((String)"firework_star", new FireworkStarItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      ENCHANTED_BOOK = registerItem((String)"enchanted_book", new EnchantedBookItem((new Item.Properties()).stacksTo(1).rarity(Rarity.UNCOMMON)));
      NETHER_BRICK = registerItem("nether_brick", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      PRISMARINE_SHARD = registerItem("prismarine_shard", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      PRISMARINE_CRYSTALS = registerItem("prismarine_crystals", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      RABBIT = registerItem("rabbit", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.RABBIT)));
      COOKED_RABBIT = registerItem("cooked_rabbit", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_RABBIT)));
      RABBIT_STEW = registerItem((String)"rabbit_stew", new BowlFoodItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_FOOD).food(Foods.RABBIT_STEW)));
      RABBIT_FOOT = registerItem("rabbit_foot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      RABBIT_HIDE = registerItem("rabbit_hide", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      ARMOR_STAND = registerItem((String)"armor_stand", new ArmorStandItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      IRON_HORSE_ARMOR = registerItem((String)"iron_horse_armor", new HorseArmorItem(5, "iron", (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      GOLDEN_HORSE_ARMOR = registerItem((String)"golden_horse_armor", new HorseArmorItem(7, "gold", (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      DIAMOND_HORSE_ARMOR = registerItem((String)"diamond_horse_armor", new HorseArmorItem(11, "diamond", (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      LEATHER_HORSE_ARMOR = registerItem((String)"leather_horse_armor", new DyeableHorseArmorItem(3, "leather", (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      LEAD = registerItem((String)"lead", new LeadItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      NAME_TAG = registerItem((String)"name_tag", new NameTagItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
      COMMAND_BLOCK_MINECART = registerItem((String)"command_block_minecart", new MinecartItem(AbstractMinecart.Type.COMMAND_BLOCK, (new Item.Properties()).stacksTo(1).rarity(Rarity.EPIC)));
      MUTTON = registerItem("mutton", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.MUTTON)));
      COOKED_MUTTON = registerItem("cooked_mutton", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_MUTTON)));
      WHITE_BANNER = registerItem((String)"white_banner", new BannerItem(Blocks.WHITE_BANNER, Blocks.WHITE_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      ORANGE_BANNER = registerItem((String)"orange_banner", new BannerItem(Blocks.ORANGE_BANNER, Blocks.ORANGE_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      MAGENTA_BANNER = registerItem((String)"magenta_banner", new BannerItem(Blocks.MAGENTA_BANNER, Blocks.MAGENTA_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      LIGHT_BLUE_BANNER = registerItem((String)"light_blue_banner", new BannerItem(Blocks.LIGHT_BLUE_BANNER, Blocks.LIGHT_BLUE_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      YELLOW_BANNER = registerItem((String)"yellow_banner", new BannerItem(Blocks.YELLOW_BANNER, Blocks.YELLOW_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      LIME_BANNER = registerItem((String)"lime_banner", new BannerItem(Blocks.LIME_BANNER, Blocks.LIME_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      PINK_BANNER = registerItem((String)"pink_banner", new BannerItem(Blocks.PINK_BANNER, Blocks.PINK_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      GRAY_BANNER = registerItem((String)"gray_banner", new BannerItem(Blocks.GRAY_BANNER, Blocks.GRAY_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      LIGHT_GRAY_BANNER = registerItem((String)"light_gray_banner", new BannerItem(Blocks.LIGHT_GRAY_BANNER, Blocks.LIGHT_GRAY_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      CYAN_BANNER = registerItem((String)"cyan_banner", new BannerItem(Blocks.CYAN_BANNER, Blocks.CYAN_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      PURPLE_BANNER = registerItem((String)"purple_banner", new BannerItem(Blocks.PURPLE_BANNER, Blocks.PURPLE_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      BLUE_BANNER = registerItem((String)"blue_banner", new BannerItem(Blocks.BLUE_BANNER, Blocks.BLUE_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      BROWN_BANNER = registerItem((String)"brown_banner", new BannerItem(Blocks.BROWN_BANNER, Blocks.BROWN_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      GREEN_BANNER = registerItem((String)"green_banner", new BannerItem(Blocks.GREEN_BANNER, Blocks.GREEN_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      RED_BANNER = registerItem((String)"red_banner", new BannerItem(Blocks.RED_BANNER, Blocks.RED_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      BLACK_BANNER = registerItem((String)"black_banner", new BannerItem(Blocks.BLACK_BANNER, Blocks.BLACK_WALL_BANNER, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS)));
      END_CRYSTAL = registerItem((String)"end_crystal", new EndCrystalItem((new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.RARE)));
      CHORUS_FRUIT = registerItem((String)"chorus_fruit", new ChorusFruitItem((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).food(Foods.CHORUS_FRUIT)));
      POPPED_CHORUS_FRUIT = registerItem("popped_chorus_fruit", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BEETROOT = registerItem("beetroot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.BEETROOT)));
      BEETROOT_SEEDS = registerItem((String)"beetroot_seeds", new ItemNameBlockItem(Blocks.BEETROOTS, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BEETROOT_SOUP = registerItem((String)"beetroot_soup", new BowlFoodItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_FOOD).food(Foods.BEETROOT_SOUP)));
      DRAGON_BREATH = registerItem("dragon_breath", new Item((new Item.Properties()).craftRemainder(GLASS_BOTTLE).tab(CreativeModeTab.TAB_BREWING).rarity(Rarity.UNCOMMON)));
      SPLASH_POTION = registerItem((String)"splash_potion", new SplashPotionItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_BREWING)));
      SPECTRAL_ARROW = registerItem((String)"spectral_arrow", new SpectralArrowItem((new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      TIPPED_ARROW = registerItem((String)"tipped_arrow", new TippedArrowItem((new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
      LINGERING_POTION = registerItem((String)"lingering_potion", new LingeringPotionItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_BREWING)));
      SHIELD = registerItem((String)"shield", new ShieldItem((new Item.Properties()).durability(336).tab(CreativeModeTab.TAB_COMBAT)));
      TOTEM_OF_UNDYING = registerItem("totem_of_undying", new Item((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_COMBAT).rarity(Rarity.UNCOMMON)));
      SHULKER_SHELL = registerItem("shulker_shell", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      IRON_NUGGET = registerItem("iron_nugget", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      KNOWLEDGE_BOOK = registerItem((String)"knowledge_book", new KnowledgeBookItem((new Item.Properties()).stacksTo(1).rarity(Rarity.EPIC)));
      DEBUG_STICK = registerItem((String)"debug_stick", new DebugStickItem((new Item.Properties()).stacksTo(1).rarity(Rarity.EPIC)));
      MUSIC_DISC_13 = registerItem((String)"music_disc_13", new RecordItem(1, SoundEvents.MUSIC_DISC_13, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 178));
      MUSIC_DISC_CAT = registerItem((String)"music_disc_cat", new RecordItem(2, SoundEvents.MUSIC_DISC_CAT, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 185));
      MUSIC_DISC_BLOCKS = registerItem((String)"music_disc_blocks", new RecordItem(3, SoundEvents.MUSIC_DISC_BLOCKS, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 345));
      MUSIC_DISC_CHIRP = registerItem((String)"music_disc_chirp", new RecordItem(4, SoundEvents.MUSIC_DISC_CHIRP, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 185));
      MUSIC_DISC_FAR = registerItem((String)"music_disc_far", new RecordItem(5, SoundEvents.MUSIC_DISC_FAR, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 174));
      MUSIC_DISC_MALL = registerItem((String)"music_disc_mall", new RecordItem(6, SoundEvents.MUSIC_DISC_MALL, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 197));
      MUSIC_DISC_MELLOHI = registerItem((String)"music_disc_mellohi", new RecordItem(7, SoundEvents.MUSIC_DISC_MELLOHI, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 96));
      MUSIC_DISC_STAL = registerItem((String)"music_disc_stal", new RecordItem(8, SoundEvents.MUSIC_DISC_STAL, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 150));
      MUSIC_DISC_STRAD = registerItem((String)"music_disc_strad", new RecordItem(9, SoundEvents.MUSIC_DISC_STRAD, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 188));
      MUSIC_DISC_WARD = registerItem((String)"music_disc_ward", new RecordItem(10, SoundEvents.MUSIC_DISC_WARD, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 251));
      MUSIC_DISC_11 = registerItem((String)"music_disc_11", new RecordItem(11, SoundEvents.MUSIC_DISC_11, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 71));
      MUSIC_DISC_WAIT = registerItem((String)"music_disc_wait", new RecordItem(12, SoundEvents.MUSIC_DISC_WAIT, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 238));
      MUSIC_DISC_OTHERSIDE = registerItem((String)"music_disc_otherside", new RecordItem(14, SoundEvents.MUSIC_DISC_OTHERSIDE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 195));
      MUSIC_DISC_5 = registerItem((String)"music_disc_5", new RecordItem(15, SoundEvents.MUSIC_DISC_5, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 178));
      MUSIC_DISC_PIGSTEP = registerItem((String)"music_disc_pigstep", new RecordItem(13, SoundEvents.MUSIC_DISC_PIGSTEP, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE), 149));
      DISC_FRAGMENT_5 = registerItem((String)"disc_fragment_5", new DiscFragmentItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
      TRIDENT = registerItem((String)"trident", new TridentItem((new Item.Properties()).durability(250).tab(CreativeModeTab.TAB_COMBAT)));
      PHANTOM_MEMBRANE = registerItem("phantom_membrane", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
      NAUTILUS_SHELL = registerItem("nautilus_shell", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      HEART_OF_THE_SEA = registerItem("heart_of_the_sea", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).rarity(Rarity.UNCOMMON)));
      CROSSBOW = registerItem((String)"crossbow", new CrossbowItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_COMBAT).durability(465)));
      SUSPICIOUS_STEW = registerItem((String)"suspicious_stew", new SuspiciousStewItem((new Item.Properties()).stacksTo(1).food(Foods.SUSPICIOUS_STEW)));
      LOOM = registerBlock(Blocks.LOOM, CreativeModeTab.TAB_DECORATIONS);
      FLOWER_BANNER_PATTERN = registerItem((String)"flower_banner_pattern", new BannerPatternItem(BannerPatternTags.PATTERN_ITEM_FLOWER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      CREEPER_BANNER_PATTERN = registerItem((String)"creeper_banner_pattern", new BannerPatternItem(BannerPatternTags.PATTERN_ITEM_CREEPER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
      SKULL_BANNER_PATTERN = registerItem((String)"skull_banner_pattern", new BannerPatternItem(BannerPatternTags.PATTERN_ITEM_SKULL, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
      MOJANG_BANNER_PATTERN = registerItem((String)"mojang_banner_pattern", new BannerPatternItem(BannerPatternTags.PATTERN_ITEM_MOJANG, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.EPIC)));
      GLOBE_BANNER_PATTERN = registerItem((String)"globe_banner_pattern", new BannerPatternItem(BannerPatternTags.PATTERN_ITEM_GLOBE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      PIGLIN_BANNER_PATTERN = registerItem((String)"piglin_banner_pattern", new BannerPatternItem(BannerPatternTags.PATTERN_ITEM_PIGLIN, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
      GOAT_HORN = registerItem((String)"goat_horn", new InstrumentItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC).stacksTo(1), InstrumentTags.GOAT_HORNS));
      COMPOSTER = registerBlock(Blocks.COMPOSTER, CreativeModeTab.TAB_DECORATIONS);
      BARREL = registerBlock(Blocks.BARREL, CreativeModeTab.TAB_DECORATIONS);
      SMOKER = registerBlock(Blocks.SMOKER, CreativeModeTab.TAB_DECORATIONS);
      BLAST_FURNACE = registerBlock(Blocks.BLAST_FURNACE, CreativeModeTab.TAB_DECORATIONS);
      CARTOGRAPHY_TABLE = registerBlock(Blocks.CARTOGRAPHY_TABLE, CreativeModeTab.TAB_DECORATIONS);
      FLETCHING_TABLE = registerBlock(Blocks.FLETCHING_TABLE, CreativeModeTab.TAB_DECORATIONS);
      GRINDSTONE = registerBlock(Blocks.GRINDSTONE, CreativeModeTab.TAB_DECORATIONS);
      SMITHING_TABLE = registerBlock(Blocks.SMITHING_TABLE, CreativeModeTab.TAB_DECORATIONS);
      STONECUTTER = registerBlock(Blocks.STONECUTTER, CreativeModeTab.TAB_DECORATIONS);
      BELL = registerBlock(Blocks.BELL, CreativeModeTab.TAB_DECORATIONS);
      LANTERN = registerBlock(Blocks.LANTERN, CreativeModeTab.TAB_DECORATIONS);
      SOUL_LANTERN = registerBlock(Blocks.SOUL_LANTERN, CreativeModeTab.TAB_DECORATIONS);
      SWEET_BERRIES = registerItem((String)"sweet_berries", new ItemNameBlockItem(Blocks.SWEET_BERRY_BUSH, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SWEET_BERRIES)));
      GLOW_BERRIES = registerItem((String)"glow_berries", new ItemNameBlockItem(Blocks.CAVE_VINES, (new Item.Properties()).food(Foods.GLOW_BERRIES).tab(CreativeModeTab.TAB_FOOD)));
      CAMPFIRE = registerBlock(Blocks.CAMPFIRE, CreativeModeTab.TAB_DECORATIONS);
      SOUL_CAMPFIRE = registerBlock(Blocks.SOUL_CAMPFIRE, CreativeModeTab.TAB_DECORATIONS);
      SHROOMLIGHT = registerBlock(Blocks.SHROOMLIGHT, CreativeModeTab.TAB_DECORATIONS);
      HONEYCOMB = registerItem((String)"honeycomb", new HoneycombItem((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
      BEE_NEST = registerBlock(Blocks.BEE_NEST, CreativeModeTab.TAB_DECORATIONS);
      BEEHIVE = registerBlock(Blocks.BEEHIVE, CreativeModeTab.TAB_DECORATIONS);
      HONEY_BOTTLE = registerItem((String)"honey_bottle", new HoneyBottleItem((new Item.Properties()).craftRemainder(GLASS_BOTTLE).food(Foods.HONEY_BOTTLE).tab(CreativeModeTab.TAB_FOOD).stacksTo(16)));
      HONEYCOMB_BLOCK = registerBlock(Blocks.HONEYCOMB_BLOCK, CreativeModeTab.TAB_DECORATIONS);
      LODESTONE = registerBlock(Blocks.LODESTONE, CreativeModeTab.TAB_DECORATIONS);
      CRYING_OBSIDIAN = registerBlock(Blocks.CRYING_OBSIDIAN, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACKSTONE = registerBlock(Blocks.BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACKSTONE_SLAB = registerBlock(Blocks.BLACKSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      BLACKSTONE_STAIRS = registerBlock(Blocks.BLACKSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      GILDED_BLACKSTONE = registerBlock(Blocks.GILDED_BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_BLACKSTONE = registerBlock(Blocks.POLISHED_BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_BLACKSTONE_SLAB = registerBlock(Blocks.POLISHED_BLACKSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_BLACKSTONE_STAIRS = registerBlock(Blocks.POLISHED_BLACKSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CHISELED_POLISHED_BLACKSTONE = registerBlock(Blocks.CHISELED_POLISHED_BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_BLACKSTONE_BRICK_SLAB = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
      POLISHED_BLACKSTONE_BRICK_STAIRS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      CRACKED_POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
      RESPAWN_ANCHOR = registerBlock(Blocks.RESPAWN_ANCHOR, CreativeModeTab.TAB_DECORATIONS);
      CANDLE = registerBlock(Blocks.CANDLE, CreativeModeTab.TAB_DECORATIONS);
      WHITE_CANDLE = registerBlock(Blocks.WHITE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      ORANGE_CANDLE = registerBlock(Blocks.ORANGE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      MAGENTA_CANDLE = registerBlock(Blocks.MAGENTA_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_BLUE_CANDLE = registerBlock(Blocks.LIGHT_BLUE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      YELLOW_CANDLE = registerBlock(Blocks.YELLOW_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      LIME_CANDLE = registerBlock(Blocks.LIME_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      PINK_CANDLE = registerBlock(Blocks.PINK_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      GRAY_CANDLE = registerBlock(Blocks.GRAY_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      LIGHT_GRAY_CANDLE = registerBlock(Blocks.LIGHT_GRAY_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      CYAN_CANDLE = registerBlock(Blocks.CYAN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      PURPLE_CANDLE = registerBlock(Blocks.PURPLE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      BLUE_CANDLE = registerBlock(Blocks.BLUE_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      BROWN_CANDLE = registerBlock(Blocks.BROWN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      GREEN_CANDLE = registerBlock(Blocks.GREEN_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      RED_CANDLE = registerBlock(Blocks.RED_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      BLACK_CANDLE = registerBlock(Blocks.BLACK_CANDLE, CreativeModeTab.TAB_DECORATIONS);
      SMALL_AMETHYST_BUD = registerBlock(Blocks.SMALL_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
      MEDIUM_AMETHYST_BUD = registerBlock(Blocks.MEDIUM_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
      LARGE_AMETHYST_BUD = registerBlock(Blocks.LARGE_AMETHYST_BUD, CreativeModeTab.TAB_DECORATIONS);
      AMETHYST_CLUSTER = registerBlock(Blocks.AMETHYST_CLUSTER, CreativeModeTab.TAB_DECORATIONS);
      POINTED_DRIPSTONE = registerBlock(Blocks.POINTED_DRIPSTONE, CreativeModeTab.TAB_DECORATIONS);
      OCHRE_FROGLIGHT = registerBlock(Blocks.OCHRE_FROGLIGHT, CreativeModeTab.TAB_DECORATIONS);
      VERDANT_FROGLIGHT = registerBlock(Blocks.VERDANT_FROGLIGHT, CreativeModeTab.TAB_DECORATIONS);
      PEARLESCENT_FROGLIGHT = registerBlock(Blocks.PEARLESCENT_FROGLIGHT, CreativeModeTab.TAB_DECORATIONS);
      FROGSPAWN = registerBlock((BlockItem)(new PlaceOnWaterBlockItem(Blocks.FROGSPAWN, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC))));
      ECHO_SHARD = registerItem("echo_shard", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
   }
}
