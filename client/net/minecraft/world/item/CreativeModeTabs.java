package net.minecraft.world.item;

import com.mojang.datafixers.util.Pair;
import com.mojang.serialization.DynamicOps;
import com.mojang.serialization.MapEncoder;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.function.Predicate;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import javax.annotation.Nullable;
import net.minecraft.core.Holder;
import net.minecraft.core.HolderLookup;
import net.minecraft.core.Registry;
import net.minecraft.core.component.DataComponents;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.core.registries.Registries;
import net.minecraft.nbt.NbtOps;
import net.minecraft.network.chat.Component;
import net.minecraft.resources.RegistryOps;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.InstrumentTags;
import net.minecraft.tags.PaintingVariantTags;
import net.minecraft.tags.TagKey;
import net.minecraft.world.entity.decoration.Painting;
import net.minecraft.world.entity.decoration.PaintingVariant;
import net.minecraft.world.entity.raid.Raid;
import net.minecraft.world.flag.FeatureFlagSet;
import net.minecraft.world.flag.FeatureFlags;
import net.minecraft.world.item.alchemy.Potion;
import net.minecraft.world.item.alchemy.PotionContents;
import net.minecraft.world.item.component.CustomData;
import net.minecraft.world.item.component.Fireworks;
import net.minecraft.world.item.enchantment.Enchantment;
import net.minecraft.world.item.enchantment.EnchantmentInstance;
import net.minecraft.world.level.ItemLike;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.LightBlock;
import net.minecraft.world.level.block.SuspiciousEffectHolder;

public class CreativeModeTabs {
   private static final ResourceLocation INVENTORY_BACKGROUND = CreativeModeTab.createTextureLocation("inventory");
   private static final ResourceLocation SEARCH_BACKGROUND = CreativeModeTab.createTextureLocation("item_search");
   private static final ResourceKey<CreativeModeTab> BUILDING_BLOCKS = createKey("building_blocks");
   private static final ResourceKey<CreativeModeTab> COLORED_BLOCKS = createKey("colored_blocks");
   private static final ResourceKey<CreativeModeTab> NATURAL_BLOCKS = createKey("natural_blocks");
   private static final ResourceKey<CreativeModeTab> FUNCTIONAL_BLOCKS = createKey("functional_blocks");
   private static final ResourceKey<CreativeModeTab> REDSTONE_BLOCKS = createKey("redstone_blocks");
   private static final ResourceKey<CreativeModeTab> HOTBAR = createKey("hotbar");
   private static final ResourceKey<CreativeModeTab> SEARCH = createKey("search");
   private static final ResourceKey<CreativeModeTab> TOOLS_AND_UTILITIES = createKey("tools_and_utilities");
   private static final ResourceKey<CreativeModeTab> COMBAT = createKey("combat");
   private static final ResourceKey<CreativeModeTab> FOOD_AND_DRINKS = createKey("food_and_drinks");
   private static final ResourceKey<CreativeModeTab> INGREDIENTS = createKey("ingredients");
   private static final ResourceKey<CreativeModeTab> SPAWN_EGGS = createKey("spawn_eggs");
   private static final ResourceKey<CreativeModeTab> OP_BLOCKS = createKey("op_blocks");
   private static final ResourceKey<CreativeModeTab> INVENTORY = createKey("inventory");
   private static final Comparator<Holder<PaintingVariant>> PAINTING_COMPARATOR = Comparator.comparing(Holder::value, Comparator.comparingInt(PaintingVariant::area).thenComparing(PaintingVariant::width));
   @Nullable
   private static CreativeModeTab.ItemDisplayParameters CACHED_PARAMETERS;

   public CreativeModeTabs() {
      super();
   }

   private static ResourceKey<CreativeModeTab> createKey(String var0) {
      return ResourceKey.create(Registries.CREATIVE_MODE_TAB, ResourceLocation.withDefaultNamespace(var0));
   }

   public static CreativeModeTab bootstrap(Registry<CreativeModeTab> var0) {
      Registry.register(var0, (ResourceKey)BUILDING_BLOCKS, CreativeModeTab.builder(CreativeModeTab.Row.TOP, 0).title(Component.translatable("itemGroup.buildingBlocks")).icon(() -> {
         return new ItemStack(Blocks.BRICKS);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.OAK_LOG);
         var1.accept((ItemLike)Items.OAK_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_OAK_LOG);
         var1.accept((ItemLike)Items.STRIPPED_OAK_WOOD);
         var1.accept((ItemLike)Items.OAK_PLANKS);
         var1.accept((ItemLike)Items.OAK_STAIRS);
         var1.accept((ItemLike)Items.OAK_SLAB);
         var1.accept((ItemLike)Items.OAK_FENCE);
         var1.accept((ItemLike)Items.OAK_FENCE_GATE);
         var1.accept((ItemLike)Items.OAK_DOOR);
         var1.accept((ItemLike)Items.OAK_TRAPDOOR);
         var1.accept((ItemLike)Items.OAK_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.OAK_BUTTON);
         var1.accept((ItemLike)Items.SPRUCE_LOG);
         var1.accept((ItemLike)Items.SPRUCE_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_SPRUCE_LOG);
         var1.accept((ItemLike)Items.STRIPPED_SPRUCE_WOOD);
         var1.accept((ItemLike)Items.SPRUCE_PLANKS);
         var1.accept((ItemLike)Items.SPRUCE_STAIRS);
         var1.accept((ItemLike)Items.SPRUCE_SLAB);
         var1.accept((ItemLike)Items.SPRUCE_FENCE);
         var1.accept((ItemLike)Items.SPRUCE_FENCE_GATE);
         var1.accept((ItemLike)Items.SPRUCE_DOOR);
         var1.accept((ItemLike)Items.SPRUCE_TRAPDOOR);
         var1.accept((ItemLike)Items.SPRUCE_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.SPRUCE_BUTTON);
         var1.accept((ItemLike)Items.BIRCH_LOG);
         var1.accept((ItemLike)Items.BIRCH_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_BIRCH_LOG);
         var1.accept((ItemLike)Items.STRIPPED_BIRCH_WOOD);
         var1.accept((ItemLike)Items.BIRCH_PLANKS);
         var1.accept((ItemLike)Items.BIRCH_STAIRS);
         var1.accept((ItemLike)Items.BIRCH_SLAB);
         var1.accept((ItemLike)Items.BIRCH_FENCE);
         var1.accept((ItemLike)Items.BIRCH_FENCE_GATE);
         var1.accept((ItemLike)Items.BIRCH_DOOR);
         var1.accept((ItemLike)Items.BIRCH_TRAPDOOR);
         var1.accept((ItemLike)Items.BIRCH_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.BIRCH_BUTTON);
         var1.accept((ItemLike)Items.JUNGLE_LOG);
         var1.accept((ItemLike)Items.JUNGLE_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_JUNGLE_LOG);
         var1.accept((ItemLike)Items.STRIPPED_JUNGLE_WOOD);
         var1.accept((ItemLike)Items.JUNGLE_PLANKS);
         var1.accept((ItemLike)Items.JUNGLE_STAIRS);
         var1.accept((ItemLike)Items.JUNGLE_SLAB);
         var1.accept((ItemLike)Items.JUNGLE_FENCE);
         var1.accept((ItemLike)Items.JUNGLE_FENCE_GATE);
         var1.accept((ItemLike)Items.JUNGLE_DOOR);
         var1.accept((ItemLike)Items.JUNGLE_TRAPDOOR);
         var1.accept((ItemLike)Items.JUNGLE_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.JUNGLE_BUTTON);
         var1.accept((ItemLike)Items.ACACIA_LOG);
         var1.accept((ItemLike)Items.ACACIA_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_ACACIA_LOG);
         var1.accept((ItemLike)Items.STRIPPED_ACACIA_WOOD);
         var1.accept((ItemLike)Items.ACACIA_PLANKS);
         var1.accept((ItemLike)Items.ACACIA_STAIRS);
         var1.accept((ItemLike)Items.ACACIA_SLAB);
         var1.accept((ItemLike)Items.ACACIA_FENCE);
         var1.accept((ItemLike)Items.ACACIA_FENCE_GATE);
         var1.accept((ItemLike)Items.ACACIA_DOOR);
         var1.accept((ItemLike)Items.ACACIA_TRAPDOOR);
         var1.accept((ItemLike)Items.ACACIA_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.ACACIA_BUTTON);
         var1.accept((ItemLike)Items.DARK_OAK_LOG);
         var1.accept((ItemLike)Items.DARK_OAK_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_DARK_OAK_LOG);
         var1.accept((ItemLike)Items.STRIPPED_DARK_OAK_WOOD);
         var1.accept((ItemLike)Items.DARK_OAK_PLANKS);
         var1.accept((ItemLike)Items.DARK_OAK_STAIRS);
         var1.accept((ItemLike)Items.DARK_OAK_SLAB);
         var1.accept((ItemLike)Items.DARK_OAK_FENCE);
         var1.accept((ItemLike)Items.DARK_OAK_FENCE_GATE);
         var1.accept((ItemLike)Items.DARK_OAK_DOOR);
         var1.accept((ItemLike)Items.DARK_OAK_TRAPDOOR);
         var1.accept((ItemLike)Items.DARK_OAK_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.DARK_OAK_BUTTON);
         var1.accept((ItemLike)Items.MANGROVE_LOG);
         var1.accept((ItemLike)Items.MANGROVE_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_MANGROVE_LOG);
         var1.accept((ItemLike)Items.STRIPPED_MANGROVE_WOOD);
         var1.accept((ItemLike)Items.MANGROVE_PLANKS);
         var1.accept((ItemLike)Items.MANGROVE_STAIRS);
         var1.accept((ItemLike)Items.MANGROVE_SLAB);
         var1.accept((ItemLike)Items.MANGROVE_FENCE);
         var1.accept((ItemLike)Items.MANGROVE_FENCE_GATE);
         var1.accept((ItemLike)Items.MANGROVE_DOOR);
         var1.accept((ItemLike)Items.MANGROVE_TRAPDOOR);
         var1.accept((ItemLike)Items.MANGROVE_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.MANGROVE_BUTTON);
         var1.accept((ItemLike)Items.CHERRY_LOG);
         var1.accept((ItemLike)Items.CHERRY_WOOD);
         var1.accept((ItemLike)Items.STRIPPED_CHERRY_LOG);
         var1.accept((ItemLike)Items.STRIPPED_CHERRY_WOOD);
         var1.accept((ItemLike)Items.CHERRY_PLANKS);
         var1.accept((ItemLike)Items.CHERRY_STAIRS);
         var1.accept((ItemLike)Items.CHERRY_SLAB);
         var1.accept((ItemLike)Items.CHERRY_FENCE);
         var1.accept((ItemLike)Items.CHERRY_FENCE_GATE);
         var1.accept((ItemLike)Items.CHERRY_DOOR);
         var1.accept((ItemLike)Items.CHERRY_TRAPDOOR);
         var1.accept((ItemLike)Items.CHERRY_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.CHERRY_BUTTON);
         var1.accept((ItemLike)Items.BAMBOO_BLOCK);
         var1.accept((ItemLike)Items.STRIPPED_BAMBOO_BLOCK);
         var1.accept((ItemLike)Items.BAMBOO_PLANKS);
         var1.accept((ItemLike)Items.BAMBOO_MOSAIC);
         var1.accept((ItemLike)Items.BAMBOO_STAIRS);
         var1.accept((ItemLike)Items.BAMBOO_MOSAIC_STAIRS);
         var1.accept((ItemLike)Items.BAMBOO_SLAB);
         var1.accept((ItemLike)Items.BAMBOO_MOSAIC_SLAB);
         var1.accept((ItemLike)Items.BAMBOO_FENCE);
         var1.accept((ItemLike)Items.BAMBOO_FENCE_GATE);
         var1.accept((ItemLike)Items.BAMBOO_DOOR);
         var1.accept((ItemLike)Items.BAMBOO_TRAPDOOR);
         var1.accept((ItemLike)Items.BAMBOO_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.BAMBOO_BUTTON);
         var1.accept((ItemLike)Items.CRIMSON_STEM);
         var1.accept((ItemLike)Items.CRIMSON_HYPHAE);
         var1.accept((ItemLike)Items.STRIPPED_CRIMSON_STEM);
         var1.accept((ItemLike)Items.STRIPPED_CRIMSON_HYPHAE);
         var1.accept((ItemLike)Items.CRIMSON_PLANKS);
         var1.accept((ItemLike)Items.CRIMSON_STAIRS);
         var1.accept((ItemLike)Items.CRIMSON_SLAB);
         var1.accept((ItemLike)Items.CRIMSON_FENCE);
         var1.accept((ItemLike)Items.CRIMSON_FENCE_GATE);
         var1.accept((ItemLike)Items.CRIMSON_DOOR);
         var1.accept((ItemLike)Items.CRIMSON_TRAPDOOR);
         var1.accept((ItemLike)Items.CRIMSON_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.CRIMSON_BUTTON);
         var1.accept((ItemLike)Items.WARPED_STEM);
         var1.accept((ItemLike)Items.WARPED_HYPHAE);
         var1.accept((ItemLike)Items.STRIPPED_WARPED_STEM);
         var1.accept((ItemLike)Items.STRIPPED_WARPED_HYPHAE);
         var1.accept((ItemLike)Items.WARPED_PLANKS);
         var1.accept((ItemLike)Items.WARPED_STAIRS);
         var1.accept((ItemLike)Items.WARPED_SLAB);
         var1.accept((ItemLike)Items.WARPED_FENCE);
         var1.accept((ItemLike)Items.WARPED_FENCE_GATE);
         var1.accept((ItemLike)Items.WARPED_DOOR);
         var1.accept((ItemLike)Items.WARPED_TRAPDOOR);
         var1.accept((ItemLike)Items.WARPED_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.WARPED_BUTTON);
         var1.accept((ItemLike)Items.STONE);
         var1.accept((ItemLike)Items.STONE_STAIRS);
         var1.accept((ItemLike)Items.STONE_SLAB);
         var1.accept((ItemLike)Items.STONE_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.STONE_BUTTON);
         var1.accept((ItemLike)Items.COBBLESTONE);
         var1.accept((ItemLike)Items.COBBLESTONE_STAIRS);
         var1.accept((ItemLike)Items.COBBLESTONE_SLAB);
         var1.accept((ItemLike)Items.COBBLESTONE_WALL);
         var1.accept((ItemLike)Items.MOSSY_COBBLESTONE);
         var1.accept((ItemLike)Items.MOSSY_COBBLESTONE_STAIRS);
         var1.accept((ItemLike)Items.MOSSY_COBBLESTONE_SLAB);
         var1.accept((ItemLike)Items.MOSSY_COBBLESTONE_WALL);
         var1.accept((ItemLike)Items.SMOOTH_STONE);
         var1.accept((ItemLike)Items.SMOOTH_STONE_SLAB);
         var1.accept((ItemLike)Items.STONE_BRICKS);
         var1.accept((ItemLike)Items.CRACKED_STONE_BRICKS);
         var1.accept((ItemLike)Items.STONE_BRICK_STAIRS);
         var1.accept((ItemLike)Items.STONE_BRICK_SLAB);
         var1.accept((ItemLike)Items.STONE_BRICK_WALL);
         var1.accept((ItemLike)Items.CHISELED_STONE_BRICKS);
         var1.accept((ItemLike)Items.MOSSY_STONE_BRICKS);
         var1.accept((ItemLike)Items.MOSSY_STONE_BRICK_STAIRS);
         var1.accept((ItemLike)Items.MOSSY_STONE_BRICK_SLAB);
         var1.accept((ItemLike)Items.MOSSY_STONE_BRICK_WALL);
         var1.accept((ItemLike)Items.GRANITE);
         var1.accept((ItemLike)Items.GRANITE_STAIRS);
         var1.accept((ItemLike)Items.GRANITE_SLAB);
         var1.accept((ItemLike)Items.GRANITE_WALL);
         var1.accept((ItemLike)Items.POLISHED_GRANITE);
         var1.accept((ItemLike)Items.POLISHED_GRANITE_STAIRS);
         var1.accept((ItemLike)Items.POLISHED_GRANITE_SLAB);
         var1.accept((ItemLike)Items.DIORITE);
         var1.accept((ItemLike)Items.DIORITE_STAIRS);
         var1.accept((ItemLike)Items.DIORITE_SLAB);
         var1.accept((ItemLike)Items.DIORITE_WALL);
         var1.accept((ItemLike)Items.POLISHED_DIORITE);
         var1.accept((ItemLike)Items.POLISHED_DIORITE_STAIRS);
         var1.accept((ItemLike)Items.POLISHED_DIORITE_SLAB);
         var1.accept((ItemLike)Items.ANDESITE);
         var1.accept((ItemLike)Items.ANDESITE_STAIRS);
         var1.accept((ItemLike)Items.ANDESITE_SLAB);
         var1.accept((ItemLike)Items.ANDESITE_WALL);
         var1.accept((ItemLike)Items.POLISHED_ANDESITE);
         var1.accept((ItemLike)Items.POLISHED_ANDESITE_STAIRS);
         var1.accept((ItemLike)Items.POLISHED_ANDESITE_SLAB);
         var1.accept((ItemLike)Items.DEEPSLATE);
         var1.accept((ItemLike)Items.COBBLED_DEEPSLATE);
         var1.accept((ItemLike)Items.COBBLED_DEEPSLATE_STAIRS);
         var1.accept((ItemLike)Items.COBBLED_DEEPSLATE_SLAB);
         var1.accept((ItemLike)Items.COBBLED_DEEPSLATE_WALL);
         var1.accept((ItemLike)Items.CHISELED_DEEPSLATE);
         var1.accept((ItemLike)Items.POLISHED_DEEPSLATE);
         var1.accept((ItemLike)Items.POLISHED_DEEPSLATE_STAIRS);
         var1.accept((ItemLike)Items.POLISHED_DEEPSLATE_SLAB);
         var1.accept((ItemLike)Items.POLISHED_DEEPSLATE_WALL);
         var1.accept((ItemLike)Items.DEEPSLATE_BRICKS);
         var1.accept((ItemLike)Items.CRACKED_DEEPSLATE_BRICKS);
         var1.accept((ItemLike)Items.DEEPSLATE_BRICK_STAIRS);
         var1.accept((ItemLike)Items.DEEPSLATE_BRICK_SLAB);
         var1.accept((ItemLike)Items.DEEPSLATE_BRICK_WALL);
         var1.accept((ItemLike)Items.DEEPSLATE_TILES);
         var1.accept((ItemLike)Items.CRACKED_DEEPSLATE_TILES);
         var1.accept((ItemLike)Items.DEEPSLATE_TILE_STAIRS);
         var1.accept((ItemLike)Items.DEEPSLATE_TILE_SLAB);
         var1.accept((ItemLike)Items.DEEPSLATE_TILE_WALL);
         var1.accept((ItemLike)Items.REINFORCED_DEEPSLATE);
         var1.accept((ItemLike)Items.TUFF);
         var1.accept((ItemLike)Items.TUFF_STAIRS);
         var1.accept((ItemLike)Items.TUFF_SLAB);
         var1.accept((ItemLike)Items.TUFF_WALL);
         var1.accept((ItemLike)Items.CHISELED_TUFF);
         var1.accept((ItemLike)Items.POLISHED_TUFF);
         var1.accept((ItemLike)Items.POLISHED_TUFF_STAIRS);
         var1.accept((ItemLike)Items.POLISHED_TUFF_SLAB);
         var1.accept((ItemLike)Items.POLISHED_TUFF_WALL);
         var1.accept((ItemLike)Items.TUFF_BRICKS);
         var1.accept((ItemLike)Items.TUFF_BRICK_STAIRS);
         var1.accept((ItemLike)Items.TUFF_BRICK_SLAB);
         var1.accept((ItemLike)Items.TUFF_BRICK_WALL);
         var1.accept((ItemLike)Items.CHISELED_TUFF_BRICKS);
         var1.accept((ItemLike)Items.BRICKS);
         var1.accept((ItemLike)Items.BRICK_STAIRS);
         var1.accept((ItemLike)Items.BRICK_SLAB);
         var1.accept((ItemLike)Items.BRICK_WALL);
         var1.accept((ItemLike)Items.PACKED_MUD);
         var1.accept((ItemLike)Items.MUD_BRICKS);
         var1.accept((ItemLike)Items.MUD_BRICK_STAIRS);
         var1.accept((ItemLike)Items.MUD_BRICK_SLAB);
         var1.accept((ItemLike)Items.MUD_BRICK_WALL);
         var1.accept((ItemLike)Items.SANDSTONE);
         var1.accept((ItemLike)Items.SANDSTONE_STAIRS);
         var1.accept((ItemLike)Items.SANDSTONE_SLAB);
         var1.accept((ItemLike)Items.SANDSTONE_WALL);
         var1.accept((ItemLike)Items.CHISELED_SANDSTONE);
         var1.accept((ItemLike)Items.SMOOTH_SANDSTONE);
         var1.accept((ItemLike)Items.SMOOTH_SANDSTONE_STAIRS);
         var1.accept((ItemLike)Items.SMOOTH_SANDSTONE_SLAB);
         var1.accept((ItemLike)Items.CUT_SANDSTONE);
         var1.accept((ItemLike)Items.CUT_STANDSTONE_SLAB);
         var1.accept((ItemLike)Items.RED_SANDSTONE);
         var1.accept((ItemLike)Items.RED_SANDSTONE_STAIRS);
         var1.accept((ItemLike)Items.RED_SANDSTONE_SLAB);
         var1.accept((ItemLike)Items.RED_SANDSTONE_WALL);
         var1.accept((ItemLike)Items.CHISELED_RED_SANDSTONE);
         var1.accept((ItemLike)Items.SMOOTH_RED_SANDSTONE);
         var1.accept((ItemLike)Items.SMOOTH_RED_SANDSTONE_STAIRS);
         var1.accept((ItemLike)Items.SMOOTH_RED_SANDSTONE_SLAB);
         var1.accept((ItemLike)Items.CUT_RED_SANDSTONE);
         var1.accept((ItemLike)Items.CUT_RED_SANDSTONE_SLAB);
         var1.accept((ItemLike)Items.SEA_LANTERN);
         var1.accept((ItemLike)Items.PRISMARINE);
         var1.accept((ItemLike)Items.PRISMARINE_STAIRS);
         var1.accept((ItemLike)Items.PRISMARINE_SLAB);
         var1.accept((ItemLike)Items.PRISMARINE_WALL);
         var1.accept((ItemLike)Items.PRISMARINE_BRICKS);
         var1.accept((ItemLike)Items.PRISMARINE_BRICK_STAIRS);
         var1.accept((ItemLike)Items.PRISMARINE_BRICK_SLAB);
         var1.accept((ItemLike)Items.DARK_PRISMARINE);
         var1.accept((ItemLike)Items.DARK_PRISMARINE_STAIRS);
         var1.accept((ItemLike)Items.DARK_PRISMARINE_SLAB);
         var1.accept((ItemLike)Items.NETHERRACK);
         var1.accept((ItemLike)Items.NETHER_BRICKS);
         var1.accept((ItemLike)Items.CRACKED_NETHER_BRICKS);
         var1.accept((ItemLike)Items.NETHER_BRICK_STAIRS);
         var1.accept((ItemLike)Items.NETHER_BRICK_SLAB);
         var1.accept((ItemLike)Items.NETHER_BRICK_WALL);
         var1.accept((ItemLike)Items.NETHER_BRICK_FENCE);
         var1.accept((ItemLike)Items.CHISELED_NETHER_BRICKS);
         var1.accept((ItemLike)Items.RED_NETHER_BRICKS);
         var1.accept((ItemLike)Items.RED_NETHER_BRICK_STAIRS);
         var1.accept((ItemLike)Items.RED_NETHER_BRICK_SLAB);
         var1.accept((ItemLike)Items.RED_NETHER_BRICK_WALL);
         var1.accept((ItemLike)Items.BASALT);
         var1.accept((ItemLike)Items.SMOOTH_BASALT);
         var1.accept((ItemLike)Items.POLISHED_BASALT);
         var1.accept((ItemLike)Items.BLACKSTONE);
         var1.accept((ItemLike)Items.GILDED_BLACKSTONE);
         var1.accept((ItemLike)Items.BLACKSTONE_STAIRS);
         var1.accept((ItemLike)Items.BLACKSTONE_SLAB);
         var1.accept((ItemLike)Items.BLACKSTONE_WALL);
         var1.accept((ItemLike)Items.CHISELED_POLISHED_BLACKSTONE);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_STAIRS);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_SLAB);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_WALL);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_BUTTON);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_BRICKS);
         var1.accept((ItemLike)Items.CRACKED_POLISHED_BLACKSTONE_BRICKS);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_BRICK_STAIRS);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_BRICK_SLAB);
         var1.accept((ItemLike)Items.POLISHED_BLACKSTONE_BRICK_WALL);
         var1.accept((ItemLike)Items.END_STONE);
         var1.accept((ItemLike)Items.END_STONE_BRICKS);
         var1.accept((ItemLike)Items.END_STONE_BRICK_STAIRS);
         var1.accept((ItemLike)Items.END_STONE_BRICK_SLAB);
         var1.accept((ItemLike)Items.END_STONE_BRICK_WALL);
         var1.accept((ItemLike)Items.PURPUR_BLOCK);
         var1.accept((ItemLike)Items.PURPUR_PILLAR);
         var1.accept((ItemLike)Items.PURPUR_STAIRS);
         var1.accept((ItemLike)Items.PURPUR_SLAB);
         var1.accept((ItemLike)Items.COAL_BLOCK);
         var1.accept((ItemLike)Items.IRON_BLOCK);
         var1.accept((ItemLike)Items.IRON_BARS);
         var1.accept((ItemLike)Items.IRON_DOOR);
         var1.accept((ItemLike)Items.IRON_TRAPDOOR);
         var1.accept((ItemLike)Items.HEAVY_WEIGHTED_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.CHAIN);
         var1.accept((ItemLike)Items.GOLD_BLOCK);
         var1.accept((ItemLike)Items.LIGHT_WEIGHTED_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.REDSTONE_BLOCK);
         var1.accept((ItemLike)Items.EMERALD_BLOCK);
         var1.accept((ItemLike)Items.LAPIS_BLOCK);
         var1.accept((ItemLike)Items.DIAMOND_BLOCK);
         var1.accept((ItemLike)Items.NETHERITE_BLOCK);
         var1.accept((ItemLike)Items.QUARTZ_BLOCK);
         var1.accept((ItemLike)Items.QUARTZ_STAIRS);
         var1.accept((ItemLike)Items.QUARTZ_SLAB);
         var1.accept((ItemLike)Items.CHISELED_QUARTZ_BLOCK);
         var1.accept((ItemLike)Items.QUARTZ_BRICKS);
         var1.accept((ItemLike)Items.QUARTZ_PILLAR);
         var1.accept((ItemLike)Items.SMOOTH_QUARTZ);
         var1.accept((ItemLike)Items.SMOOTH_QUARTZ_STAIRS);
         var1.accept((ItemLike)Items.SMOOTH_QUARTZ_SLAB);
         var1.accept((ItemLike)Items.AMETHYST_BLOCK);
         var1.accept((ItemLike)Items.COPPER_BLOCK);
         var1.accept((ItemLike)Items.CHISELED_COPPER);
         var1.accept((ItemLike)Items.COPPER_GRATE);
         var1.accept((ItemLike)Items.CUT_COPPER);
         var1.accept((ItemLike)Items.CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.COPPER_DOOR);
         var1.accept((ItemLike)Items.COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.COPPER_BULB);
         var1.accept((ItemLike)Items.EXPOSED_COPPER);
         var1.accept((ItemLike)Items.EXPOSED_CHISELED_COPPER);
         var1.accept((ItemLike)Items.EXPOSED_COPPER_GRATE);
         var1.accept((ItemLike)Items.EXPOSED_CUT_COPPER);
         var1.accept((ItemLike)Items.EXPOSED_CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.EXPOSED_CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.EXPOSED_COPPER_DOOR);
         var1.accept((ItemLike)Items.EXPOSED_COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.EXPOSED_COPPER_BULB);
         var1.accept((ItemLike)Items.WEATHERED_COPPER);
         var1.accept((ItemLike)Items.WEATHERED_CHISELED_COPPER);
         var1.accept((ItemLike)Items.WEATHERED_COPPER_GRATE);
         var1.accept((ItemLike)Items.WEATHERED_CUT_COPPER);
         var1.accept((ItemLike)Items.WEATHERED_CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.WEATHERED_CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.WEATHERED_COPPER_DOOR);
         var1.accept((ItemLike)Items.WEATHERED_COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.WEATHERED_COPPER_BULB);
         var1.accept((ItemLike)Items.OXIDIZED_COPPER);
         var1.accept((ItemLike)Items.OXIDIZED_CHISELED_COPPER);
         var1.accept((ItemLike)Items.OXIDIZED_COPPER_GRATE);
         var1.accept((ItemLike)Items.OXIDIZED_CUT_COPPER);
         var1.accept((ItemLike)Items.OXIDIZED_CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.OXIDIZED_CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.OXIDIZED_COPPER_DOOR);
         var1.accept((ItemLike)Items.OXIDIZED_COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.OXIDIZED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_COPPER_BLOCK);
         var1.accept((ItemLike)Items.WAXED_CHISELED_COPPER);
         var1.accept((ItemLike)Items.WAXED_COPPER_GRATE);
         var1.accept((ItemLike)Items.WAXED_CUT_COPPER);
         var1.accept((ItemLike)Items.WAXED_CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.WAXED_CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.WAXED_COPPER_DOOR);
         var1.accept((ItemLike)Items.WAXED_COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.WAXED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_COPPER);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_CHISELED_COPPER);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_COPPER_GRATE);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_CUT_COPPER);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_COPPER_DOOR);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_COPPER);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_CHISELED_COPPER);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_COPPER_GRATE);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_CUT_COPPER);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_COPPER_DOOR);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_COPPER);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_CHISELED_COPPER);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_COPPER_GRATE);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_CUT_COPPER);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_CUT_COPPER_STAIRS);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_CUT_COPPER_SLAB);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_COPPER_DOOR);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_COPPER_TRAPDOOR);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_COPPER_BULB);
      }).build());
      Registry.register(var0, (ResourceKey)COLORED_BLOCKS, CreativeModeTab.builder(CreativeModeTab.Row.TOP, 1).title(Component.translatable("itemGroup.coloredBlocks")).icon(() -> {
         return new ItemStack(Blocks.CYAN_WOOL);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.WHITE_WOOL);
         var1.accept((ItemLike)Items.LIGHT_GRAY_WOOL);
         var1.accept((ItemLike)Items.GRAY_WOOL);
         var1.accept((ItemLike)Items.BLACK_WOOL);
         var1.accept((ItemLike)Items.BROWN_WOOL);
         var1.accept((ItemLike)Items.RED_WOOL);
         var1.accept((ItemLike)Items.ORANGE_WOOL);
         var1.accept((ItemLike)Items.YELLOW_WOOL);
         var1.accept((ItemLike)Items.LIME_WOOL);
         var1.accept((ItemLike)Items.GREEN_WOOL);
         var1.accept((ItemLike)Items.CYAN_WOOL);
         var1.accept((ItemLike)Items.LIGHT_BLUE_WOOL);
         var1.accept((ItemLike)Items.BLUE_WOOL);
         var1.accept((ItemLike)Items.PURPLE_WOOL);
         var1.accept((ItemLike)Items.MAGENTA_WOOL);
         var1.accept((ItemLike)Items.PINK_WOOL);
         var1.accept((ItemLike)Items.WHITE_CARPET);
         var1.accept((ItemLike)Items.LIGHT_GRAY_CARPET);
         var1.accept((ItemLike)Items.GRAY_CARPET);
         var1.accept((ItemLike)Items.BLACK_CARPET);
         var1.accept((ItemLike)Items.BROWN_CARPET);
         var1.accept((ItemLike)Items.RED_CARPET);
         var1.accept((ItemLike)Items.ORANGE_CARPET);
         var1.accept((ItemLike)Items.YELLOW_CARPET);
         var1.accept((ItemLike)Items.LIME_CARPET);
         var1.accept((ItemLike)Items.GREEN_CARPET);
         var1.accept((ItemLike)Items.CYAN_CARPET);
         var1.accept((ItemLike)Items.LIGHT_BLUE_CARPET);
         var1.accept((ItemLike)Items.BLUE_CARPET);
         var1.accept((ItemLike)Items.PURPLE_CARPET);
         var1.accept((ItemLike)Items.MAGENTA_CARPET);
         var1.accept((ItemLike)Items.PINK_CARPET);
         var1.accept((ItemLike)Items.TERRACOTTA);
         var1.accept((ItemLike)Items.WHITE_TERRACOTTA);
         var1.accept((ItemLike)Items.LIGHT_GRAY_TERRACOTTA);
         var1.accept((ItemLike)Items.GRAY_TERRACOTTA);
         var1.accept((ItemLike)Items.BLACK_TERRACOTTA);
         var1.accept((ItemLike)Items.BROWN_TERRACOTTA);
         var1.accept((ItemLike)Items.RED_TERRACOTTA);
         var1.accept((ItemLike)Items.ORANGE_TERRACOTTA);
         var1.accept((ItemLike)Items.YELLOW_TERRACOTTA);
         var1.accept((ItemLike)Items.LIME_TERRACOTTA);
         var1.accept((ItemLike)Items.GREEN_TERRACOTTA);
         var1.accept((ItemLike)Items.CYAN_TERRACOTTA);
         var1.accept((ItemLike)Items.LIGHT_BLUE_TERRACOTTA);
         var1.accept((ItemLike)Items.BLUE_TERRACOTTA);
         var1.accept((ItemLike)Items.PURPLE_TERRACOTTA);
         var1.accept((ItemLike)Items.MAGENTA_TERRACOTTA);
         var1.accept((ItemLike)Items.PINK_TERRACOTTA);
         var1.accept((ItemLike)Items.WHITE_CONCRETE);
         var1.accept((ItemLike)Items.LIGHT_GRAY_CONCRETE);
         var1.accept((ItemLike)Items.GRAY_CONCRETE);
         var1.accept((ItemLike)Items.BLACK_CONCRETE);
         var1.accept((ItemLike)Items.BROWN_CONCRETE);
         var1.accept((ItemLike)Items.RED_CONCRETE);
         var1.accept((ItemLike)Items.ORANGE_CONCRETE);
         var1.accept((ItemLike)Items.YELLOW_CONCRETE);
         var1.accept((ItemLike)Items.LIME_CONCRETE);
         var1.accept((ItemLike)Items.GREEN_CONCRETE);
         var1.accept((ItemLike)Items.CYAN_CONCRETE);
         var1.accept((ItemLike)Items.LIGHT_BLUE_CONCRETE);
         var1.accept((ItemLike)Items.BLUE_CONCRETE);
         var1.accept((ItemLike)Items.PURPLE_CONCRETE);
         var1.accept((ItemLike)Items.MAGENTA_CONCRETE);
         var1.accept((ItemLike)Items.PINK_CONCRETE);
         var1.accept((ItemLike)Items.WHITE_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.LIGHT_GRAY_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.GRAY_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.BLACK_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.BROWN_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.RED_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.ORANGE_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.YELLOW_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.LIME_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.GREEN_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.CYAN_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.LIGHT_BLUE_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.BLUE_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.PURPLE_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.MAGENTA_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.PINK_CONCRETE_POWDER);
         var1.accept((ItemLike)Items.WHITE_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.LIGHT_GRAY_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.GRAY_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.BLACK_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.BROWN_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.RED_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.ORANGE_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.YELLOW_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.LIME_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.GREEN_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.CYAN_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.LIGHT_BLUE_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.BLUE_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.PURPLE_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.MAGENTA_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.PINK_GLAZED_TERRACOTTA);
         var1.accept((ItemLike)Items.GLASS);
         var1.accept((ItemLike)Items.TINTED_GLASS);
         var1.accept((ItemLike)Items.WHITE_STAINED_GLASS);
         var1.accept((ItemLike)Items.LIGHT_GRAY_STAINED_GLASS);
         var1.accept((ItemLike)Items.GRAY_STAINED_GLASS);
         var1.accept((ItemLike)Items.BLACK_STAINED_GLASS);
         var1.accept((ItemLike)Items.BROWN_STAINED_GLASS);
         var1.accept((ItemLike)Items.RED_STAINED_GLASS);
         var1.accept((ItemLike)Items.ORANGE_STAINED_GLASS);
         var1.accept((ItemLike)Items.YELLOW_STAINED_GLASS);
         var1.accept((ItemLike)Items.LIME_STAINED_GLASS);
         var1.accept((ItemLike)Items.GREEN_STAINED_GLASS);
         var1.accept((ItemLike)Items.CYAN_STAINED_GLASS);
         var1.accept((ItemLike)Items.LIGHT_BLUE_STAINED_GLASS);
         var1.accept((ItemLike)Items.BLUE_STAINED_GLASS);
         var1.accept((ItemLike)Items.PURPLE_STAINED_GLASS);
         var1.accept((ItemLike)Items.MAGENTA_STAINED_GLASS);
         var1.accept((ItemLike)Items.PINK_STAINED_GLASS);
         var1.accept((ItemLike)Items.GLASS_PANE);
         var1.accept((ItemLike)Items.WHITE_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.LIGHT_GRAY_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.GRAY_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.BLACK_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.BROWN_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.RED_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.ORANGE_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.YELLOW_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.LIME_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.GREEN_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.CYAN_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.LIGHT_BLUE_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.BLUE_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.PURPLE_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.MAGENTA_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.PINK_STAINED_GLASS_PANE);
         var1.accept((ItemLike)Items.SHULKER_BOX);
         var1.accept((ItemLike)Items.WHITE_SHULKER_BOX);
         var1.accept((ItemLike)Items.LIGHT_GRAY_SHULKER_BOX);
         var1.accept((ItemLike)Items.GRAY_SHULKER_BOX);
         var1.accept((ItemLike)Items.BLACK_SHULKER_BOX);
         var1.accept((ItemLike)Items.BROWN_SHULKER_BOX);
         var1.accept((ItemLike)Items.RED_SHULKER_BOX);
         var1.accept((ItemLike)Items.ORANGE_SHULKER_BOX);
         var1.accept((ItemLike)Items.YELLOW_SHULKER_BOX);
         var1.accept((ItemLike)Items.LIME_SHULKER_BOX);
         var1.accept((ItemLike)Items.GREEN_SHULKER_BOX);
         var1.accept((ItemLike)Items.CYAN_SHULKER_BOX);
         var1.accept((ItemLike)Items.LIGHT_BLUE_SHULKER_BOX);
         var1.accept((ItemLike)Items.BLUE_SHULKER_BOX);
         var1.accept((ItemLike)Items.PURPLE_SHULKER_BOX);
         var1.accept((ItemLike)Items.MAGENTA_SHULKER_BOX);
         var1.accept((ItemLike)Items.PINK_SHULKER_BOX);
         var1.accept((ItemLike)Items.WHITE_BED);
         var1.accept((ItemLike)Items.LIGHT_GRAY_BED);
         var1.accept((ItemLike)Items.GRAY_BED);
         var1.accept((ItemLike)Items.BLACK_BED);
         var1.accept((ItemLike)Items.BROWN_BED);
         var1.accept((ItemLike)Items.RED_BED);
         var1.accept((ItemLike)Items.ORANGE_BED);
         var1.accept((ItemLike)Items.YELLOW_BED);
         var1.accept((ItemLike)Items.LIME_BED);
         var1.accept((ItemLike)Items.GREEN_BED);
         var1.accept((ItemLike)Items.CYAN_BED);
         var1.accept((ItemLike)Items.LIGHT_BLUE_BED);
         var1.accept((ItemLike)Items.BLUE_BED);
         var1.accept((ItemLike)Items.PURPLE_BED);
         var1.accept((ItemLike)Items.MAGENTA_BED);
         var1.accept((ItemLike)Items.PINK_BED);
         var1.accept((ItemLike)Items.CANDLE);
         var1.accept((ItemLike)Items.WHITE_CANDLE);
         var1.accept((ItemLike)Items.LIGHT_GRAY_CANDLE);
         var1.accept((ItemLike)Items.GRAY_CANDLE);
         var1.accept((ItemLike)Items.BLACK_CANDLE);
         var1.accept((ItemLike)Items.BROWN_CANDLE);
         var1.accept((ItemLike)Items.RED_CANDLE);
         var1.accept((ItemLike)Items.ORANGE_CANDLE);
         var1.accept((ItemLike)Items.YELLOW_CANDLE);
         var1.accept((ItemLike)Items.LIME_CANDLE);
         var1.accept((ItemLike)Items.GREEN_CANDLE);
         var1.accept((ItemLike)Items.CYAN_CANDLE);
         var1.accept((ItemLike)Items.LIGHT_BLUE_CANDLE);
         var1.accept((ItemLike)Items.BLUE_CANDLE);
         var1.accept((ItemLike)Items.PURPLE_CANDLE);
         var1.accept((ItemLike)Items.MAGENTA_CANDLE);
         var1.accept((ItemLike)Items.PINK_CANDLE);
         var1.accept((ItemLike)Items.WHITE_BANNER);
         var1.accept((ItemLike)Items.LIGHT_GRAY_BANNER);
         var1.accept((ItemLike)Items.GRAY_BANNER);
         var1.accept((ItemLike)Items.BLACK_BANNER);
         var1.accept((ItemLike)Items.BROWN_BANNER);
         var1.accept((ItemLike)Items.RED_BANNER);
         var1.accept((ItemLike)Items.ORANGE_BANNER);
         var1.accept((ItemLike)Items.YELLOW_BANNER);
         var1.accept((ItemLike)Items.LIME_BANNER);
         var1.accept((ItemLike)Items.GREEN_BANNER);
         var1.accept((ItemLike)Items.CYAN_BANNER);
         var1.accept((ItemLike)Items.LIGHT_BLUE_BANNER);
         var1.accept((ItemLike)Items.BLUE_BANNER);
         var1.accept((ItemLike)Items.PURPLE_BANNER);
         var1.accept((ItemLike)Items.MAGENTA_BANNER);
         var1.accept((ItemLike)Items.PINK_BANNER);
      }).build());
      Registry.register(var0, (ResourceKey)NATURAL_BLOCKS, CreativeModeTab.builder(CreativeModeTab.Row.TOP, 2).title(Component.translatable("itemGroup.natural")).icon(() -> {
         return new ItemStack(Blocks.GRASS_BLOCK);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.GRASS_BLOCK);
         var1.accept((ItemLike)Items.PODZOL);
         var1.accept((ItemLike)Items.MYCELIUM);
         var1.accept((ItemLike)Items.DIRT_PATH);
         var1.accept((ItemLike)Items.DIRT);
         var1.accept((ItemLike)Items.COARSE_DIRT);
         var1.accept((ItemLike)Items.ROOTED_DIRT);
         var1.accept((ItemLike)Items.FARMLAND);
         var1.accept((ItemLike)Items.MUD);
         var1.accept((ItemLike)Items.CLAY);
         var1.accept((ItemLike)Items.GRAVEL);
         var1.accept((ItemLike)Items.SAND);
         var1.accept((ItemLike)Items.SANDSTONE);
         var1.accept((ItemLike)Items.RED_SAND);
         var1.accept((ItemLike)Items.RED_SANDSTONE);
         var1.accept((ItemLike)Items.ICE);
         var1.accept((ItemLike)Items.PACKED_ICE);
         var1.accept((ItemLike)Items.BLUE_ICE);
         var1.accept((ItemLike)Items.SNOW_BLOCK);
         var1.accept((ItemLike)Items.SNOW);
         var1.accept((ItemLike)Items.MOSS_BLOCK);
         var1.accept((ItemLike)Items.MOSS_CARPET);
         var1.accept((ItemLike)Items.STONE);
         var1.accept((ItemLike)Items.DEEPSLATE);
         var1.accept((ItemLike)Items.GRANITE);
         var1.accept((ItemLike)Items.DIORITE);
         var1.accept((ItemLike)Items.ANDESITE);
         var1.accept((ItemLike)Items.CALCITE);
         var1.accept((ItemLike)Items.TUFF);
         var1.accept((ItemLike)Items.DRIPSTONE_BLOCK);
         var1.accept((ItemLike)Items.POINTED_DRIPSTONE);
         var1.accept((ItemLike)Items.PRISMARINE);
         var1.accept((ItemLike)Items.MAGMA_BLOCK);
         var1.accept((ItemLike)Items.OBSIDIAN);
         var1.accept((ItemLike)Items.CRYING_OBSIDIAN);
         var1.accept((ItemLike)Items.NETHERRACK);
         var1.accept((ItemLike)Items.CRIMSON_NYLIUM);
         var1.accept((ItemLike)Items.WARPED_NYLIUM);
         var1.accept((ItemLike)Items.SOUL_SAND);
         var1.accept((ItemLike)Items.SOUL_SOIL);
         var1.accept((ItemLike)Items.BONE_BLOCK);
         var1.accept((ItemLike)Items.BLACKSTONE);
         var1.accept((ItemLike)Items.BASALT);
         var1.accept((ItemLike)Items.SMOOTH_BASALT);
         var1.accept((ItemLike)Items.END_STONE);
         var1.accept((ItemLike)Items.COAL_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_COAL_ORE);
         var1.accept((ItemLike)Items.IRON_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_IRON_ORE);
         var1.accept((ItemLike)Items.COPPER_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_COPPER_ORE);
         var1.accept((ItemLike)Items.GOLD_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_GOLD_ORE);
         var1.accept((ItemLike)Items.REDSTONE_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_REDSTONE_ORE);
         var1.accept((ItemLike)Items.EMERALD_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_EMERALD_ORE);
         var1.accept((ItemLike)Items.LAPIS_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_LAPIS_ORE);
         var1.accept((ItemLike)Items.DIAMOND_ORE);
         var1.accept((ItemLike)Items.DEEPSLATE_DIAMOND_ORE);
         var1.accept((ItemLike)Items.NETHER_GOLD_ORE);
         var1.accept((ItemLike)Items.NETHER_QUARTZ_ORE);
         var1.accept((ItemLike)Items.ANCIENT_DEBRIS);
         var1.accept((ItemLike)Items.RAW_IRON_BLOCK);
         var1.accept((ItemLike)Items.RAW_COPPER_BLOCK);
         var1.accept((ItemLike)Items.RAW_GOLD_BLOCK);
         var1.accept((ItemLike)Items.GLOWSTONE);
         var1.accept((ItemLike)Items.AMETHYST_BLOCK);
         var1.accept((ItemLike)Items.BUDDING_AMETHYST);
         var1.accept((ItemLike)Items.SMALL_AMETHYST_BUD);
         var1.accept((ItemLike)Items.MEDIUM_AMETHYST_BUD);
         var1.accept((ItemLike)Items.LARGE_AMETHYST_BUD);
         var1.accept((ItemLike)Items.AMETHYST_CLUSTER);
         var1.accept((ItemLike)Items.OAK_LOG);
         var1.accept((ItemLike)Items.SPRUCE_LOG);
         var1.accept((ItemLike)Items.BIRCH_LOG);
         var1.accept((ItemLike)Items.JUNGLE_LOG);
         var1.accept((ItemLike)Items.ACACIA_LOG);
         var1.accept((ItemLike)Items.DARK_OAK_LOG);
         var1.accept((ItemLike)Items.MANGROVE_LOG);
         var1.accept((ItemLike)Items.MANGROVE_ROOTS);
         var1.accept((ItemLike)Items.MUDDY_MANGROVE_ROOTS);
         var1.accept((ItemLike)Items.CHERRY_LOG);
         var1.accept((ItemLike)Items.MUSHROOM_STEM);
         var1.accept((ItemLike)Items.CRIMSON_STEM);
         var1.accept((ItemLike)Items.WARPED_STEM);
         var1.accept((ItemLike)Items.OAK_LEAVES);
         var1.accept((ItemLike)Items.SPRUCE_LEAVES);
         var1.accept((ItemLike)Items.BIRCH_LEAVES);
         var1.accept((ItemLike)Items.JUNGLE_LEAVES);
         var1.accept((ItemLike)Items.ACACIA_LEAVES);
         var1.accept((ItemLike)Items.DARK_OAK_LEAVES);
         var1.accept((ItemLike)Items.MANGROVE_LEAVES);
         var1.accept((ItemLike)Items.CHERRY_LEAVES);
         var1.accept((ItemLike)Items.AZALEA_LEAVES);
         var1.accept((ItemLike)Items.FLOWERING_AZALEA_LEAVES);
         var1.accept((ItemLike)Items.BROWN_MUSHROOM_BLOCK);
         var1.accept((ItemLike)Items.RED_MUSHROOM_BLOCK);
         var1.accept((ItemLike)Items.NETHER_WART_BLOCK);
         var1.accept((ItemLike)Items.WARPED_WART_BLOCK);
         var1.accept((ItemLike)Items.SHROOMLIGHT);
         var1.accept((ItemLike)Items.OAK_SAPLING);
         var1.accept((ItemLike)Items.SPRUCE_SAPLING);
         var1.accept((ItemLike)Items.BIRCH_SAPLING);
         var1.accept((ItemLike)Items.JUNGLE_SAPLING);
         var1.accept((ItemLike)Items.ACACIA_SAPLING);
         var1.accept((ItemLike)Items.DARK_OAK_SAPLING);
         var1.accept((ItemLike)Items.MANGROVE_PROPAGULE);
         var1.accept((ItemLike)Items.CHERRY_SAPLING);
         var1.accept((ItemLike)Items.AZALEA);
         var1.accept((ItemLike)Items.FLOWERING_AZALEA);
         var1.accept((ItemLike)Items.BROWN_MUSHROOM);
         var1.accept((ItemLike)Items.RED_MUSHROOM);
         var1.accept((ItemLike)Items.CRIMSON_FUNGUS);
         var1.accept((ItemLike)Items.WARPED_FUNGUS);
         var1.accept((ItemLike)Items.SHORT_GRASS);
         var1.accept((ItemLike)Items.FERN);
         var1.accept((ItemLike)Items.DEAD_BUSH);
         var1.accept((ItemLike)Items.DANDELION);
         var1.accept((ItemLike)Items.POPPY);
         var1.accept((ItemLike)Items.BLUE_ORCHID);
         var1.accept((ItemLike)Items.ALLIUM);
         var1.accept((ItemLike)Items.AZURE_BLUET);
         var1.accept((ItemLike)Items.RED_TULIP);
         var1.accept((ItemLike)Items.ORANGE_TULIP);
         var1.accept((ItemLike)Items.WHITE_TULIP);
         var1.accept((ItemLike)Items.PINK_TULIP);
         var1.accept((ItemLike)Items.OXEYE_DAISY);
         var1.accept((ItemLike)Items.CORNFLOWER);
         var1.accept((ItemLike)Items.LILY_OF_THE_VALLEY);
         var1.accept((ItemLike)Items.TORCHFLOWER);
         var1.accept((ItemLike)Items.WITHER_ROSE);
         var1.accept((ItemLike)Items.PINK_PETALS);
         var1.accept((ItemLike)Items.SPORE_BLOSSOM);
         var1.accept((ItemLike)Items.BAMBOO);
         var1.accept((ItemLike)Items.SUGAR_CANE);
         var1.accept((ItemLike)Items.CACTUS);
         var1.accept((ItemLike)Items.CRIMSON_ROOTS);
         var1.accept((ItemLike)Items.WARPED_ROOTS);
         var1.accept((ItemLike)Items.NETHER_SPROUTS);
         var1.accept((ItemLike)Items.WEEPING_VINES);
         var1.accept((ItemLike)Items.TWISTING_VINES);
         var1.accept((ItemLike)Items.VINE);
         var1.accept((ItemLike)Items.TALL_GRASS);
         var1.accept((ItemLike)Items.LARGE_FERN);
         var1.accept((ItemLike)Items.SUNFLOWER);
         var1.accept((ItemLike)Items.LILAC);
         var1.accept((ItemLike)Items.ROSE_BUSH);
         var1.accept((ItemLike)Items.PEONY);
         var1.accept((ItemLike)Items.PITCHER_PLANT);
         var1.accept((ItemLike)Items.BIG_DRIPLEAF);
         var1.accept((ItemLike)Items.SMALL_DRIPLEAF);
         var1.accept((ItemLike)Items.CHORUS_PLANT);
         var1.accept((ItemLike)Items.CHORUS_FLOWER);
         var1.accept((ItemLike)Items.GLOW_LICHEN);
         var1.accept((ItemLike)Items.HANGING_ROOTS);
         var1.accept((ItemLike)Items.FROGSPAWN);
         var1.accept((ItemLike)Items.TURTLE_EGG);
         var1.accept((ItemLike)Items.SNIFFER_EGG);
         var1.accept((ItemLike)Items.WHEAT_SEEDS);
         var1.accept((ItemLike)Items.COCOA_BEANS);
         var1.accept((ItemLike)Items.PUMPKIN_SEEDS);
         var1.accept((ItemLike)Items.MELON_SEEDS);
         var1.accept((ItemLike)Items.BEETROOT_SEEDS);
         var1.accept((ItemLike)Items.TORCHFLOWER_SEEDS);
         var1.accept((ItemLike)Items.PITCHER_POD);
         var1.accept((ItemLike)Items.GLOW_BERRIES);
         var1.accept((ItemLike)Items.SWEET_BERRIES);
         var1.accept((ItemLike)Items.NETHER_WART);
         var1.accept((ItemLike)Items.LILY_PAD);
         var1.accept((ItemLike)Items.SEAGRASS);
         var1.accept((ItemLike)Items.SEA_PICKLE);
         var1.accept((ItemLike)Items.KELP);
         var1.accept((ItemLike)Items.DRIED_KELP_BLOCK);
         var1.accept((ItemLike)Items.TUBE_CORAL_BLOCK);
         var1.accept((ItemLike)Items.BRAIN_CORAL_BLOCK);
         var1.accept((ItemLike)Items.BUBBLE_CORAL_BLOCK);
         var1.accept((ItemLike)Items.FIRE_CORAL_BLOCK);
         var1.accept((ItemLike)Items.HORN_CORAL_BLOCK);
         var1.accept((ItemLike)Items.DEAD_TUBE_CORAL_BLOCK);
         var1.accept((ItemLike)Items.DEAD_BRAIN_CORAL_BLOCK);
         var1.accept((ItemLike)Items.DEAD_BUBBLE_CORAL_BLOCK);
         var1.accept((ItemLike)Items.DEAD_FIRE_CORAL_BLOCK);
         var1.accept((ItemLike)Items.DEAD_HORN_CORAL_BLOCK);
         var1.accept((ItemLike)Items.TUBE_CORAL);
         var1.accept((ItemLike)Items.BRAIN_CORAL);
         var1.accept((ItemLike)Items.BUBBLE_CORAL);
         var1.accept((ItemLike)Items.FIRE_CORAL);
         var1.accept((ItemLike)Items.HORN_CORAL);
         var1.accept((ItemLike)Items.DEAD_TUBE_CORAL);
         var1.accept((ItemLike)Items.DEAD_BRAIN_CORAL);
         var1.accept((ItemLike)Items.DEAD_BUBBLE_CORAL);
         var1.accept((ItemLike)Items.DEAD_FIRE_CORAL);
         var1.accept((ItemLike)Items.DEAD_HORN_CORAL);
         var1.accept((ItemLike)Items.TUBE_CORAL_FAN);
         var1.accept((ItemLike)Items.BRAIN_CORAL_FAN);
         var1.accept((ItemLike)Items.BUBBLE_CORAL_FAN);
         var1.accept((ItemLike)Items.FIRE_CORAL_FAN);
         var1.accept((ItemLike)Items.HORN_CORAL_FAN);
         var1.accept((ItemLike)Items.DEAD_TUBE_CORAL_FAN);
         var1.accept((ItemLike)Items.DEAD_BRAIN_CORAL_FAN);
         var1.accept((ItemLike)Items.DEAD_BUBBLE_CORAL_FAN);
         var1.accept((ItemLike)Items.DEAD_FIRE_CORAL_FAN);
         var1.accept((ItemLike)Items.DEAD_HORN_CORAL_FAN);
         var1.accept((ItemLike)Items.SPONGE);
         var1.accept((ItemLike)Items.WET_SPONGE);
         var1.accept((ItemLike)Items.MELON);
         var1.accept((ItemLike)Items.PUMPKIN);
         var1.accept((ItemLike)Items.CARVED_PUMPKIN);
         var1.accept((ItemLike)Items.JACK_O_LANTERN);
         var1.accept((ItemLike)Items.HAY_BLOCK);
         var1.accept((ItemLike)Items.BEE_NEST);
         var1.accept((ItemLike)Items.HONEYCOMB_BLOCK);
         var1.accept((ItemLike)Items.SLIME_BLOCK);
         var1.accept((ItemLike)Items.HONEY_BLOCK);
         var1.accept((ItemLike)Items.OCHRE_FROGLIGHT);
         var1.accept((ItemLike)Items.VERDANT_FROGLIGHT);
         var1.accept((ItemLike)Items.PEARLESCENT_FROGLIGHT);
         var1.accept((ItemLike)Items.SCULK);
         var1.accept((ItemLike)Items.SCULK_VEIN);
         var1.accept((ItemLike)Items.SCULK_CATALYST);
         var1.accept((ItemLike)Items.SCULK_SHRIEKER);
         var1.accept((ItemLike)Items.SCULK_SENSOR);
         var1.accept((ItemLike)Items.COBWEB);
         var1.accept((ItemLike)Items.BEDROCK);
      }).build());
      Registry.register(var0, (ResourceKey)FUNCTIONAL_BLOCKS, CreativeModeTab.builder(CreativeModeTab.Row.TOP, 3).title(Component.translatable("itemGroup.functional")).icon(() -> {
         return new ItemStack(Items.OAK_SIGN);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.TORCH);
         var1.accept((ItemLike)Items.SOUL_TORCH);
         var1.accept((ItemLike)Items.REDSTONE_TORCH);
         var1.accept((ItemLike)Items.LANTERN);
         var1.accept((ItemLike)Items.SOUL_LANTERN);
         var1.accept((ItemLike)Items.CHAIN);
         var1.accept((ItemLike)Items.END_ROD);
         var1.accept((ItemLike)Items.SEA_LANTERN);
         var1.accept((ItemLike)Items.REDSTONE_LAMP);
         var1.accept((ItemLike)Items.COPPER_BULB);
         var1.accept((ItemLike)Items.EXPOSED_COPPER_BULB);
         var1.accept((ItemLike)Items.WEATHERED_COPPER_BULB);
         var1.accept((ItemLike)Items.OXIDIZED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_COPPER_BULB);
         var1.accept((ItemLike)Items.GLOWSTONE);
         var1.accept((ItemLike)Items.SHROOMLIGHT);
         var1.accept((ItemLike)Items.OCHRE_FROGLIGHT);
         var1.accept((ItemLike)Items.VERDANT_FROGLIGHT);
         var1.accept((ItemLike)Items.PEARLESCENT_FROGLIGHT);
         var1.accept((ItemLike)Items.CRYING_OBSIDIAN);
         var1.accept((ItemLike)Items.GLOW_LICHEN);
         var1.accept((ItemLike)Items.MAGMA_BLOCK);
         var1.accept((ItemLike)Items.CRAFTING_TABLE);
         var1.accept((ItemLike)Items.STONECUTTER);
         var1.accept((ItemLike)Items.CARTOGRAPHY_TABLE);
         var1.accept((ItemLike)Items.FLETCHING_TABLE);
         var1.accept((ItemLike)Items.SMITHING_TABLE);
         var1.accept((ItemLike)Items.GRINDSTONE);
         var1.accept((ItemLike)Items.LOOM);
         var1.accept((ItemLike)Items.FURNACE);
         var1.accept((ItemLike)Items.SMOKER);
         var1.accept((ItemLike)Items.BLAST_FURNACE);
         var1.accept((ItemLike)Items.CAMPFIRE);
         var1.accept((ItemLike)Items.SOUL_CAMPFIRE);
         var1.accept((ItemLike)Items.ANVIL);
         var1.accept((ItemLike)Items.CHIPPED_ANVIL);
         var1.accept((ItemLike)Items.DAMAGED_ANVIL);
         var1.accept((ItemLike)Items.COMPOSTER);
         var1.accept((ItemLike)Items.NOTE_BLOCK);
         var1.accept((ItemLike)Items.JUKEBOX);
         var1.accept((ItemLike)Items.ENCHANTING_TABLE);
         var1.accept((ItemLike)Items.END_CRYSTAL);
         var1.accept((ItemLike)Items.BREWING_STAND);
         var1.accept((ItemLike)Items.CAULDRON);
         var1.accept((ItemLike)Items.BELL);
         var1.accept((ItemLike)Items.BEACON);
         var1.accept((ItemLike)Items.CONDUIT);
         var1.accept((ItemLike)Items.LODESTONE);
         var1.accept((ItemLike)Items.LADDER);
         var1.accept((ItemLike)Items.SCAFFOLDING);
         var1.accept((ItemLike)Items.BEE_NEST);
         var1.accept((ItemLike)Items.BEEHIVE);
         var1.accept((ItemLike)Items.SUSPICIOUS_SAND);
         var1.accept((ItemLike)Items.SUSPICIOUS_GRAVEL);
         var1.accept((ItemLike)Items.LIGHTNING_ROD);
         var1.accept((ItemLike)Items.FLOWER_POT);
         var1.accept((ItemLike)Items.DECORATED_POT);
         var1.accept((ItemLike)Items.ARMOR_STAND);
         var1.accept((ItemLike)Items.ITEM_FRAME);
         var1.accept((ItemLike)Items.GLOW_ITEM_FRAME);
         var1.accept((ItemLike)Items.PAINTING);
         var0x.holders().lookup(Registries.PAINTING_VARIANT).ifPresent((var2) -> {
            generatePresetPaintings(var1, var0x.holders(), var2, (var0) -> {
               return var0.is(PaintingVariantTags.PLACEABLE);
            }, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS);
         });
         var1.accept((ItemLike)Items.BOOKSHELF);
         var1.accept((ItemLike)Items.CHISELED_BOOKSHELF);
         var1.accept((ItemLike)Items.LECTERN);
         var1.accept((ItemLike)Items.TINTED_GLASS);
         var1.accept((ItemLike)Items.OAK_SIGN);
         var1.accept((ItemLike)Items.OAK_HANGING_SIGN);
         var1.accept((ItemLike)Items.SPRUCE_SIGN);
         var1.accept((ItemLike)Items.SPRUCE_HANGING_SIGN);
         var1.accept((ItemLike)Items.BIRCH_SIGN);
         var1.accept((ItemLike)Items.BIRCH_HANGING_SIGN);
         var1.accept((ItemLike)Items.JUNGLE_SIGN);
         var1.accept((ItemLike)Items.JUNGLE_HANGING_SIGN);
         var1.accept((ItemLike)Items.ACACIA_SIGN);
         var1.accept((ItemLike)Items.ACACIA_HANGING_SIGN);
         var1.accept((ItemLike)Items.DARK_OAK_SIGN);
         var1.accept((ItemLike)Items.DARK_OAK_HANGING_SIGN);
         var1.accept((ItemLike)Items.MANGROVE_SIGN);
         var1.accept((ItemLike)Items.MANGROVE_HANGING_SIGN);
         var1.accept((ItemLike)Items.CHERRY_SIGN);
         var1.accept((ItemLike)Items.CHERRY_HANGING_SIGN);
         var1.accept((ItemLike)Items.BAMBOO_SIGN);
         var1.accept((ItemLike)Items.BAMBOO_HANGING_SIGN);
         var1.accept((ItemLike)Items.CRIMSON_SIGN);
         var1.accept((ItemLike)Items.CRIMSON_HANGING_SIGN);
         var1.accept((ItemLike)Items.WARPED_SIGN);
         var1.accept((ItemLike)Items.WARPED_HANGING_SIGN);
         var1.accept((ItemLike)Items.CHEST);
         var1.accept((ItemLike)Items.BARREL);
         var1.accept((ItemLike)Items.ENDER_CHEST);
         var1.accept((ItemLike)Items.SHULKER_BOX);
         var1.accept((ItemLike)Items.WHITE_SHULKER_BOX);
         var1.accept((ItemLike)Items.LIGHT_GRAY_SHULKER_BOX);
         var1.accept((ItemLike)Items.GRAY_SHULKER_BOX);
         var1.accept((ItemLike)Items.BLACK_SHULKER_BOX);
         var1.accept((ItemLike)Items.BROWN_SHULKER_BOX);
         var1.accept((ItemLike)Items.RED_SHULKER_BOX);
         var1.accept((ItemLike)Items.ORANGE_SHULKER_BOX);
         var1.accept((ItemLike)Items.YELLOW_SHULKER_BOX);
         var1.accept((ItemLike)Items.LIME_SHULKER_BOX);
         var1.accept((ItemLike)Items.GREEN_SHULKER_BOX);
         var1.accept((ItemLike)Items.CYAN_SHULKER_BOX);
         var1.accept((ItemLike)Items.LIGHT_BLUE_SHULKER_BOX);
         var1.accept((ItemLike)Items.BLUE_SHULKER_BOX);
         var1.accept((ItemLike)Items.PURPLE_SHULKER_BOX);
         var1.accept((ItemLike)Items.MAGENTA_SHULKER_BOX);
         var1.accept((ItemLike)Items.PINK_SHULKER_BOX);
         var1.accept((ItemLike)Items.RESPAWN_ANCHOR);
         var1.accept((ItemLike)Items.WHITE_BED);
         var1.accept((ItemLike)Items.LIGHT_GRAY_BED);
         var1.accept((ItemLike)Items.GRAY_BED);
         var1.accept((ItemLike)Items.BLACK_BED);
         var1.accept((ItemLike)Items.BROWN_BED);
         var1.accept((ItemLike)Items.RED_BED);
         var1.accept((ItemLike)Items.ORANGE_BED);
         var1.accept((ItemLike)Items.YELLOW_BED);
         var1.accept((ItemLike)Items.LIME_BED);
         var1.accept((ItemLike)Items.GREEN_BED);
         var1.accept((ItemLike)Items.CYAN_BED);
         var1.accept((ItemLike)Items.LIGHT_BLUE_BED);
         var1.accept((ItemLike)Items.BLUE_BED);
         var1.accept((ItemLike)Items.PURPLE_BED);
         var1.accept((ItemLike)Items.MAGENTA_BED);
         var1.accept((ItemLike)Items.PINK_BED);
         var1.accept((ItemLike)Items.CANDLE);
         var1.accept((ItemLike)Items.WHITE_CANDLE);
         var1.accept((ItemLike)Items.LIGHT_GRAY_CANDLE);
         var1.accept((ItemLike)Items.GRAY_CANDLE);
         var1.accept((ItemLike)Items.BLACK_CANDLE);
         var1.accept((ItemLike)Items.BROWN_CANDLE);
         var1.accept((ItemLike)Items.RED_CANDLE);
         var1.accept((ItemLike)Items.ORANGE_CANDLE);
         var1.accept((ItemLike)Items.YELLOW_CANDLE);
         var1.accept((ItemLike)Items.LIME_CANDLE);
         var1.accept((ItemLike)Items.GREEN_CANDLE);
         var1.accept((ItemLike)Items.CYAN_CANDLE);
         var1.accept((ItemLike)Items.LIGHT_BLUE_CANDLE);
         var1.accept((ItemLike)Items.BLUE_CANDLE);
         var1.accept((ItemLike)Items.PURPLE_CANDLE);
         var1.accept((ItemLike)Items.MAGENTA_CANDLE);
         var1.accept((ItemLike)Items.PINK_CANDLE);
         var1.accept((ItemLike)Items.WHITE_BANNER);
         var1.accept((ItemLike)Items.LIGHT_GRAY_BANNER);
         var1.accept((ItemLike)Items.GRAY_BANNER);
         var1.accept((ItemLike)Items.BLACK_BANNER);
         var1.accept((ItemLike)Items.BROWN_BANNER);
         var1.accept((ItemLike)Items.RED_BANNER);
         var1.accept((ItemLike)Items.ORANGE_BANNER);
         var1.accept((ItemLike)Items.YELLOW_BANNER);
         var1.accept((ItemLike)Items.LIME_BANNER);
         var1.accept((ItemLike)Items.GREEN_BANNER);
         var1.accept((ItemLike)Items.CYAN_BANNER);
         var1.accept((ItemLike)Items.LIGHT_BLUE_BANNER);
         var1.accept((ItemLike)Items.BLUE_BANNER);
         var1.accept((ItemLike)Items.PURPLE_BANNER);
         var1.accept((ItemLike)Items.MAGENTA_BANNER);
         var1.accept((ItemLike)Items.PINK_BANNER);
         var1.accept(Raid.getLeaderBannerInstance(var0x.holders().lookupOrThrow(Registries.BANNER_PATTERN)));
         var1.accept((ItemLike)Items.SKELETON_SKULL);
         var1.accept((ItemLike)Items.WITHER_SKELETON_SKULL);
         var1.accept((ItemLike)Items.PLAYER_HEAD);
         var1.accept((ItemLike)Items.ZOMBIE_HEAD);
         var1.accept((ItemLike)Items.CREEPER_HEAD);
         var1.accept((ItemLike)Items.PIGLIN_HEAD);
         var1.accept((ItemLike)Items.DRAGON_HEAD);
         var1.accept((ItemLike)Items.DRAGON_EGG);
         var1.accept((ItemLike)Items.END_PORTAL_FRAME);
         var1.accept((ItemLike)Items.ENDER_EYE);
         var1.accept((ItemLike)Items.VAULT);
         var1.accept((ItemLike)Items.INFESTED_STONE);
         var1.accept((ItemLike)Items.INFESTED_COBBLESTONE);
         var1.accept((ItemLike)Items.INFESTED_STONE_BRICKS);
         var1.accept((ItemLike)Items.INFESTED_MOSSY_STONE_BRICKS);
         var1.accept((ItemLike)Items.INFESTED_CRACKED_STONE_BRICKS);
         var1.accept((ItemLike)Items.INFESTED_CHISELED_STONE_BRICKS);
         var1.accept((ItemLike)Items.INFESTED_DEEPSLATE);
      }).build());
      Registry.register(var0, (ResourceKey)REDSTONE_BLOCKS, CreativeModeTab.builder(CreativeModeTab.Row.TOP, 4).title(Component.translatable("itemGroup.redstone")).icon(() -> {
         return new ItemStack(Items.REDSTONE);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.REDSTONE);
         var1.accept((ItemLike)Items.REDSTONE_TORCH);
         var1.accept((ItemLike)Items.REDSTONE_BLOCK);
         var1.accept((ItemLike)Items.REPEATER);
         var1.accept((ItemLike)Items.COMPARATOR);
         var1.accept((ItemLike)Items.TARGET);
         var1.accept((ItemLike)Items.WAXED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_EXPOSED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_WEATHERED_COPPER_BULB);
         var1.accept((ItemLike)Items.WAXED_OXIDIZED_COPPER_BULB);
         var1.accept((ItemLike)Items.LEVER);
         var1.accept((ItemLike)Items.OAK_BUTTON);
         var1.accept((ItemLike)Items.STONE_BUTTON);
         var1.accept((ItemLike)Items.OAK_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.STONE_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.LIGHT_WEIGHTED_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.HEAVY_WEIGHTED_PRESSURE_PLATE);
         var1.accept((ItemLike)Items.SCULK_SENSOR);
         var1.accept((ItemLike)Items.CALIBRATED_SCULK_SENSOR);
         var1.accept((ItemLike)Items.SCULK_SHRIEKER);
         var1.accept((ItemLike)Items.AMETHYST_BLOCK);
         var1.accept((ItemLike)Items.WHITE_WOOL);
         var1.accept((ItemLike)Items.TRIPWIRE_HOOK);
         var1.accept((ItemLike)Items.STRING);
         var1.accept((ItemLike)Items.LECTERN);
         var1.accept((ItemLike)Items.DAYLIGHT_DETECTOR);
         var1.accept((ItemLike)Items.LIGHTNING_ROD);
         var1.accept((ItemLike)Items.PISTON);
         var1.accept((ItemLike)Items.STICKY_PISTON);
         var1.accept((ItemLike)Items.SLIME_BLOCK);
         var1.accept((ItemLike)Items.HONEY_BLOCK);
         var1.accept((ItemLike)Items.DISPENSER);
         var1.accept((ItemLike)Items.DROPPER);
         var1.accept((ItemLike)Items.CRAFTER);
         var1.accept((ItemLike)Items.HOPPER);
         var1.accept((ItemLike)Items.CHEST);
         var1.accept((ItemLike)Items.BARREL);
         var1.accept((ItemLike)Items.CHISELED_BOOKSHELF);
         var1.accept((ItemLike)Items.FURNACE);
         var1.accept((ItemLike)Items.TRAPPED_CHEST);
         var1.accept((ItemLike)Items.JUKEBOX);
         var1.accept((ItemLike)Items.DECORATED_POT);
         var1.accept((ItemLike)Items.OBSERVER);
         var1.accept((ItemLike)Items.NOTE_BLOCK);
         var1.accept((ItemLike)Items.COMPOSTER);
         var1.accept((ItemLike)Items.CAULDRON);
         var1.accept((ItemLike)Items.RAIL);
         var1.accept((ItemLike)Items.POWERED_RAIL);
         var1.accept((ItemLike)Items.DETECTOR_RAIL);
         var1.accept((ItemLike)Items.ACTIVATOR_RAIL);
         var1.accept((ItemLike)Items.MINECART);
         var1.accept((ItemLike)Items.HOPPER_MINECART);
         var1.accept((ItemLike)Items.CHEST_MINECART);
         var1.accept((ItemLike)Items.FURNACE_MINECART);
         var1.accept((ItemLike)Items.TNT_MINECART);
         var1.accept((ItemLike)Items.OAK_CHEST_BOAT);
         var1.accept((ItemLike)Items.BAMBOO_CHEST_RAFT);
         var1.accept((ItemLike)Items.OAK_DOOR);
         var1.accept((ItemLike)Items.IRON_DOOR);
         var1.accept((ItemLike)Items.OAK_FENCE_GATE);
         var1.accept((ItemLike)Items.OAK_TRAPDOOR);
         var1.accept((ItemLike)Items.IRON_TRAPDOOR);
         var1.accept((ItemLike)Items.TNT);
         var1.accept((ItemLike)Items.REDSTONE_LAMP);
         var1.accept((ItemLike)Items.BELL);
         var1.accept((ItemLike)Items.BIG_DRIPLEAF);
         var1.accept((ItemLike)Items.ARMOR_STAND);
         var1.accept((ItemLike)Items.REDSTONE_ORE);
      }).build());
      Registry.register(var0, (ResourceKey)HOTBAR, CreativeModeTab.builder(CreativeModeTab.Row.TOP, 5).title(Component.translatable("itemGroup.hotbar")).icon(() -> {
         return new ItemStack(Blocks.BOOKSHELF);
      }).alignedRight().type(CreativeModeTab.Type.HOTBAR).build());
      Registry.register(var0, (ResourceKey)SEARCH, CreativeModeTab.builder(CreativeModeTab.Row.TOP, 6).title(Component.translatable("itemGroup.search")).icon(() -> {
         return new ItemStack(Items.COMPASS);
      }).displayItems((var1, var2) -> {
         Set var3 = ItemStackLinkedSet.createTypeAndComponentsSet();
         Iterator var4 = var0.iterator();

         while(var4.hasNext()) {
            CreativeModeTab var5 = (CreativeModeTab)var4.next();
            if (var5.getType() != CreativeModeTab.Type.SEARCH) {
               var3.addAll(var5.getSearchTabDisplayItems());
            }
         }

         var2.acceptAll(var3);
      }).backgroundTexture(SEARCH_BACKGROUND).alignedRight().type(CreativeModeTab.Type.SEARCH).build());
      Registry.register(var0, (ResourceKey)TOOLS_AND_UTILITIES, CreativeModeTab.builder(CreativeModeTab.Row.BOTTOM, 0).title(Component.translatable("itemGroup.tools")).icon(() -> {
         return new ItemStack(Items.DIAMOND_PICKAXE);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.WOODEN_SHOVEL);
         var1.accept((ItemLike)Items.WOODEN_PICKAXE);
         var1.accept((ItemLike)Items.WOODEN_AXE);
         var1.accept((ItemLike)Items.WOODEN_HOE);
         var1.accept((ItemLike)Items.STONE_SHOVEL);
         var1.accept((ItemLike)Items.STONE_PICKAXE);
         var1.accept((ItemLike)Items.STONE_AXE);
         var1.accept((ItemLike)Items.STONE_HOE);
         var1.accept((ItemLike)Items.IRON_SHOVEL);
         var1.accept((ItemLike)Items.IRON_PICKAXE);
         var1.accept((ItemLike)Items.IRON_AXE);
         var1.accept((ItemLike)Items.IRON_HOE);
         var1.accept((ItemLike)Items.GOLDEN_SHOVEL);
         var1.accept((ItemLike)Items.GOLDEN_PICKAXE);
         var1.accept((ItemLike)Items.GOLDEN_AXE);
         var1.accept((ItemLike)Items.GOLDEN_HOE);
         var1.accept((ItemLike)Items.DIAMOND_SHOVEL);
         var1.accept((ItemLike)Items.DIAMOND_PICKAXE);
         var1.accept((ItemLike)Items.DIAMOND_AXE);
         var1.accept((ItemLike)Items.DIAMOND_HOE);
         var1.accept((ItemLike)Items.NETHERITE_SHOVEL);
         var1.accept((ItemLike)Items.NETHERITE_PICKAXE);
         var1.accept((ItemLike)Items.NETHERITE_AXE);
         var1.accept((ItemLike)Items.NETHERITE_HOE);
         var1.accept((ItemLike)Items.BUCKET);
         var1.accept((ItemLike)Items.WATER_BUCKET);
         var1.accept((ItemLike)Items.COD_BUCKET);
         var1.accept((ItemLike)Items.SALMON_BUCKET);
         var1.accept((ItemLike)Items.TROPICAL_FISH_BUCKET);
         var1.accept((ItemLike)Items.PUFFERFISH_BUCKET);
         var1.accept((ItemLike)Items.AXOLOTL_BUCKET);
         var1.accept((ItemLike)Items.TADPOLE_BUCKET);
         var1.accept((ItemLike)Items.LAVA_BUCKET);
         var1.accept((ItemLike)Items.POWDER_SNOW_BUCKET);
         var1.accept((ItemLike)Items.MILK_BUCKET);
         var1.accept((ItemLike)Items.FISHING_ROD);
         var1.accept((ItemLike)Items.FLINT_AND_STEEL);
         var1.accept((ItemLike)Items.FIRE_CHARGE);
         var1.accept((ItemLike)Items.BONE_MEAL);
         var1.accept((ItemLike)Items.SHEARS);
         var1.accept((ItemLike)Items.BRUSH);
         var1.accept((ItemLike)Items.NAME_TAG);
         var1.accept((ItemLike)Items.LEAD);
         if (var0x.enabledFeatures().contains(FeatureFlags.BUNDLE)) {
            var1.accept((ItemLike)Items.BUNDLE);
         }

         var1.accept((ItemLike)Items.COMPASS);
         var1.accept((ItemLike)Items.RECOVERY_COMPASS);
         var1.accept((ItemLike)Items.CLOCK);
         var1.accept((ItemLike)Items.SPYGLASS);
         var1.accept((ItemLike)Items.MAP);
         var1.accept((ItemLike)Items.WRITABLE_BOOK);
         var1.accept((ItemLike)Items.WIND_CHARGE);
         var1.accept((ItemLike)Items.ENDER_PEARL);
         var1.accept((ItemLike)Items.ENDER_EYE);
         var1.accept((ItemLike)Items.ELYTRA);
         generateFireworksAllDurations(var1, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS);
         var1.accept((ItemLike)Items.SADDLE);
         var1.accept((ItemLike)Items.CARROT_ON_A_STICK);
         var1.accept((ItemLike)Items.WARPED_FUNGUS_ON_A_STICK);
         var1.accept((ItemLike)Items.OAK_BOAT);
         var1.accept((ItemLike)Items.OAK_CHEST_BOAT);
         var1.accept((ItemLike)Items.SPRUCE_BOAT);
         var1.accept((ItemLike)Items.SPRUCE_CHEST_BOAT);
         var1.accept((ItemLike)Items.BIRCH_BOAT);
         var1.accept((ItemLike)Items.BIRCH_CHEST_BOAT);
         var1.accept((ItemLike)Items.JUNGLE_BOAT);
         var1.accept((ItemLike)Items.JUNGLE_CHEST_BOAT);
         var1.accept((ItemLike)Items.ACACIA_BOAT);
         var1.accept((ItemLike)Items.ACACIA_CHEST_BOAT);
         var1.accept((ItemLike)Items.DARK_OAK_BOAT);
         var1.accept((ItemLike)Items.DARK_OAK_CHEST_BOAT);
         var1.accept((ItemLike)Items.MANGROVE_BOAT);
         var1.accept((ItemLike)Items.MANGROVE_CHEST_BOAT);
         var1.accept((ItemLike)Items.CHERRY_BOAT);
         var1.accept((ItemLike)Items.CHERRY_CHEST_BOAT);
         var1.accept((ItemLike)Items.BAMBOO_RAFT);
         var1.accept((ItemLike)Items.BAMBOO_CHEST_RAFT);
         var1.accept((ItemLike)Items.RAIL);
         var1.accept((ItemLike)Items.POWERED_RAIL);
         var1.accept((ItemLike)Items.DETECTOR_RAIL);
         var1.accept((ItemLike)Items.ACTIVATOR_RAIL);
         var1.accept((ItemLike)Items.MINECART);
         var1.accept((ItemLike)Items.HOPPER_MINECART);
         var1.accept((ItemLike)Items.CHEST_MINECART);
         var1.accept((ItemLike)Items.FURNACE_MINECART);
         var1.accept((ItemLike)Items.TNT_MINECART);
         var0x.holders().lookup(Registries.INSTRUMENT).ifPresent((var1x) -> {
            generateInstrumentTypes(var1, var1x, Items.GOAT_HORN, InstrumentTags.GOAT_HORNS, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS);
         });
         var1.accept((ItemLike)Items.MUSIC_DISC_13);
         var1.accept((ItemLike)Items.MUSIC_DISC_CAT);
         var1.accept((ItemLike)Items.MUSIC_DISC_BLOCKS);
         var1.accept((ItemLike)Items.MUSIC_DISC_CHIRP);
         var1.accept((ItemLike)Items.MUSIC_DISC_FAR);
         var1.accept((ItemLike)Items.MUSIC_DISC_MALL);
         var1.accept((ItemLike)Items.MUSIC_DISC_MELLOHI);
         var1.accept((ItemLike)Items.MUSIC_DISC_STAL);
         var1.accept((ItemLike)Items.MUSIC_DISC_STRAD);
         var1.accept((ItemLike)Items.MUSIC_DISC_WARD);
         var1.accept((ItemLike)Items.MUSIC_DISC_11);
         var1.accept((ItemLike)Items.MUSIC_DISC_CREATOR_MUSIC_BOX);
         var1.accept((ItemLike)Items.MUSIC_DISC_WAIT);
         var1.accept((ItemLike)Items.MUSIC_DISC_CREATOR);
         var1.accept((ItemLike)Items.MUSIC_DISC_PRECIPICE);
         var1.accept((ItemLike)Items.MUSIC_DISC_OTHERSIDE);
         var1.accept((ItemLike)Items.MUSIC_DISC_RELIC);
         var1.accept((ItemLike)Items.MUSIC_DISC_5);
         var1.accept((ItemLike)Items.MUSIC_DISC_PIGSTEP);
      }).build());
      Registry.register(var0, (ResourceKey)COMBAT, CreativeModeTab.builder(CreativeModeTab.Row.BOTTOM, 1).title(Component.translatable("itemGroup.combat")).icon(() -> {
         return new ItemStack(Items.NETHERITE_SWORD);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.WOODEN_SWORD);
         var1.accept((ItemLike)Items.STONE_SWORD);
         var1.accept((ItemLike)Items.IRON_SWORD);
         var1.accept((ItemLike)Items.GOLDEN_SWORD);
         var1.accept((ItemLike)Items.DIAMOND_SWORD);
         var1.accept((ItemLike)Items.NETHERITE_SWORD);
         var1.accept((ItemLike)Items.WOODEN_AXE);
         var1.accept((ItemLike)Items.STONE_AXE);
         var1.accept((ItemLike)Items.IRON_AXE);
         var1.accept((ItemLike)Items.GOLDEN_AXE);
         var1.accept((ItemLike)Items.DIAMOND_AXE);
         var1.accept((ItemLike)Items.NETHERITE_AXE);
         var1.accept((ItemLike)Items.TRIDENT);
         var1.accept((ItemLike)Items.MACE);
         var1.accept((ItemLike)Items.SHIELD);
         var1.accept((ItemLike)Items.LEATHER_HELMET);
         var1.accept((ItemLike)Items.LEATHER_CHESTPLATE);
         var1.accept((ItemLike)Items.LEATHER_LEGGINGS);
         var1.accept((ItemLike)Items.LEATHER_BOOTS);
         var1.accept((ItemLike)Items.CHAINMAIL_HELMET);
         var1.accept((ItemLike)Items.CHAINMAIL_CHESTPLATE);
         var1.accept((ItemLike)Items.CHAINMAIL_LEGGINGS);
         var1.accept((ItemLike)Items.CHAINMAIL_BOOTS);
         var1.accept((ItemLike)Items.IRON_HELMET);
         var1.accept((ItemLike)Items.IRON_CHESTPLATE);
         var1.accept((ItemLike)Items.IRON_LEGGINGS);
         var1.accept((ItemLike)Items.IRON_BOOTS);
         var1.accept((ItemLike)Items.GOLDEN_HELMET);
         var1.accept((ItemLike)Items.GOLDEN_CHESTPLATE);
         var1.accept((ItemLike)Items.GOLDEN_LEGGINGS);
         var1.accept((ItemLike)Items.GOLDEN_BOOTS);
         var1.accept((ItemLike)Items.DIAMOND_HELMET);
         var1.accept((ItemLike)Items.DIAMOND_CHESTPLATE);
         var1.accept((ItemLike)Items.DIAMOND_LEGGINGS);
         var1.accept((ItemLike)Items.DIAMOND_BOOTS);
         var1.accept((ItemLike)Items.NETHERITE_HELMET);
         var1.accept((ItemLike)Items.NETHERITE_CHESTPLATE);
         var1.accept((ItemLike)Items.NETHERITE_LEGGINGS);
         var1.accept((ItemLike)Items.NETHERITE_BOOTS);
         var1.accept((ItemLike)Items.TURTLE_HELMET);
         var1.accept((ItemLike)Items.LEATHER_HORSE_ARMOR);
         var1.accept((ItemLike)Items.IRON_HORSE_ARMOR);
         var1.accept((ItemLike)Items.GOLDEN_HORSE_ARMOR);
         var1.accept((ItemLike)Items.DIAMOND_HORSE_ARMOR);
         var1.accept((ItemLike)Items.WOLF_ARMOR);
         var1.accept((ItemLike)Items.TOTEM_OF_UNDYING);
         var1.accept((ItemLike)Items.TNT);
         var1.accept((ItemLike)Items.END_CRYSTAL);
         var1.accept((ItemLike)Items.SNOWBALL);
         var1.accept((ItemLike)Items.EGG);
         var1.accept((ItemLike)Items.WIND_CHARGE);
         var1.accept((ItemLike)Items.BOW);
         var1.accept((ItemLike)Items.CROSSBOW);
         generateFireworksAllDurations(var1, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS);
         var1.accept((ItemLike)Items.ARROW);
         var1.accept((ItemLike)Items.SPECTRAL_ARROW);
         var0x.holders().lookup(Registries.POTION).ifPresent((var2) -> {
            generatePotionEffectTypes(var1, var2, Items.TIPPED_ARROW, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS, var0x.enabledFeatures());
         });
      }).build());
      Registry.register(var0, (ResourceKey)FOOD_AND_DRINKS, CreativeModeTab.builder(CreativeModeTab.Row.BOTTOM, 2).title(Component.translatable("itemGroup.foodAndDrink")).icon(() -> {
         return new ItemStack(Items.GOLDEN_APPLE);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.APPLE);
         var1.accept((ItemLike)Items.GOLDEN_APPLE);
         var1.accept((ItemLike)Items.ENCHANTED_GOLDEN_APPLE);
         var1.accept((ItemLike)Items.MELON_SLICE);
         var1.accept((ItemLike)Items.SWEET_BERRIES);
         var1.accept((ItemLike)Items.GLOW_BERRIES);
         var1.accept((ItemLike)Items.CHORUS_FRUIT);
         var1.accept((ItemLike)Items.CARROT);
         var1.accept((ItemLike)Items.GOLDEN_CARROT);
         var1.accept((ItemLike)Items.POTATO);
         var1.accept((ItemLike)Items.BAKED_POTATO);
         var1.accept((ItemLike)Items.POISONOUS_POTATO);
         var1.accept((ItemLike)Items.BEETROOT);
         var1.accept((ItemLike)Items.DRIED_KELP);
         var1.accept((ItemLike)Items.BEEF);
         var1.accept((ItemLike)Items.COOKED_BEEF);
         var1.accept((ItemLike)Items.PORKCHOP);
         var1.accept((ItemLike)Items.COOKED_PORKCHOP);
         var1.accept((ItemLike)Items.MUTTON);
         var1.accept((ItemLike)Items.COOKED_MUTTON);
         var1.accept((ItemLike)Items.CHICKEN);
         var1.accept((ItemLike)Items.COOKED_CHICKEN);
         var1.accept((ItemLike)Items.RABBIT);
         var1.accept((ItemLike)Items.COOKED_RABBIT);
         var1.accept((ItemLike)Items.COD);
         var1.accept((ItemLike)Items.COOKED_COD);
         var1.accept((ItemLike)Items.SALMON);
         var1.accept((ItemLike)Items.COOKED_SALMON);
         var1.accept((ItemLike)Items.TROPICAL_FISH);
         var1.accept((ItemLike)Items.PUFFERFISH);
         var1.accept((ItemLike)Items.BREAD);
         var1.accept((ItemLike)Items.COOKIE);
         var1.accept((ItemLike)Items.CAKE);
         var1.accept((ItemLike)Items.PUMPKIN_PIE);
         var1.accept((ItemLike)Items.ROTTEN_FLESH);
         var1.accept((ItemLike)Items.SPIDER_EYE);
         var1.accept((ItemLike)Items.MUSHROOM_STEW);
         var1.accept((ItemLike)Items.BEETROOT_SOUP);
         var1.accept((ItemLike)Items.RABBIT_STEW);
         generateSuspiciousStews(var1, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS);
         var1.accept((ItemLike)Items.MILK_BUCKET);
         var1.accept((ItemLike)Items.HONEY_BOTTLE);
         generateOminousVials(var1, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS);
         var0x.holders().lookup(Registries.POTION).ifPresent((var2) -> {
            generatePotionEffectTypes(var1, var2, Items.POTION, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS, var0x.enabledFeatures());
            generatePotionEffectTypes(var1, var2, Items.SPLASH_POTION, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS, var0x.enabledFeatures());
            generatePotionEffectTypes(var1, var2, Items.LINGERING_POTION, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS, var0x.enabledFeatures());
         });
      }).build());
      Registry.register(var0, (ResourceKey)INGREDIENTS, CreativeModeTab.builder(CreativeModeTab.Row.BOTTOM, 3).title(Component.translatable("itemGroup.ingredients")).icon(() -> {
         return new ItemStack(Items.IRON_INGOT);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.COAL);
         var1.accept((ItemLike)Items.CHARCOAL);
         var1.accept((ItemLike)Items.RAW_IRON);
         var1.accept((ItemLike)Items.RAW_COPPER);
         var1.accept((ItemLike)Items.RAW_GOLD);
         var1.accept((ItemLike)Items.EMERALD);
         var1.accept((ItemLike)Items.LAPIS_LAZULI);
         var1.accept((ItemLike)Items.DIAMOND);
         var1.accept((ItemLike)Items.ANCIENT_DEBRIS);
         var1.accept((ItemLike)Items.QUARTZ);
         var1.accept((ItemLike)Items.AMETHYST_SHARD);
         var1.accept((ItemLike)Items.IRON_NUGGET);
         var1.accept((ItemLike)Items.GOLD_NUGGET);
         var1.accept((ItemLike)Items.IRON_INGOT);
         var1.accept((ItemLike)Items.COPPER_INGOT);
         var1.accept((ItemLike)Items.GOLD_INGOT);
         var1.accept((ItemLike)Items.NETHERITE_SCRAP);
         var1.accept((ItemLike)Items.NETHERITE_INGOT);
         var1.accept((ItemLike)Items.STICK);
         var1.accept((ItemLike)Items.FLINT);
         var1.accept((ItemLike)Items.WHEAT);
         var1.accept((ItemLike)Items.BONE);
         var1.accept((ItemLike)Items.BONE_MEAL);
         var1.accept((ItemLike)Items.STRING);
         var1.accept((ItemLike)Items.FEATHER);
         var1.accept((ItemLike)Items.SNOWBALL);
         var1.accept((ItemLike)Items.EGG);
         var1.accept((ItemLike)Items.LEATHER);
         var1.accept((ItemLike)Items.RABBIT_HIDE);
         var1.accept((ItemLike)Items.HONEYCOMB);
         var1.accept((ItemLike)Items.INK_SAC);
         var1.accept((ItemLike)Items.GLOW_INK_SAC);
         var1.accept((ItemLike)Items.TURTLE_SCUTE);
         var1.accept((ItemLike)Items.ARMADILLO_SCUTE);
         var1.accept((ItemLike)Items.SLIME_BALL);
         var1.accept((ItemLike)Items.CLAY_BALL);
         var1.accept((ItemLike)Items.PRISMARINE_SHARD);
         var1.accept((ItemLike)Items.PRISMARINE_CRYSTALS);
         var1.accept((ItemLike)Items.NAUTILUS_SHELL);
         var1.accept((ItemLike)Items.HEART_OF_THE_SEA);
         var1.accept((ItemLike)Items.FIRE_CHARGE);
         var1.accept((ItemLike)Items.BLAZE_ROD);
         var1.accept((ItemLike)Items.BREEZE_ROD);
         var1.accept((ItemLike)Items.HEAVY_CORE);
         var1.accept((ItemLike)Items.NETHER_STAR);
         var1.accept((ItemLike)Items.ENDER_PEARL);
         var1.accept((ItemLike)Items.ENDER_EYE);
         var1.accept((ItemLike)Items.SHULKER_SHELL);
         var1.accept((ItemLike)Items.POPPED_CHORUS_FRUIT);
         var1.accept((ItemLike)Items.ECHO_SHARD);
         var1.accept((ItemLike)Items.DISC_FRAGMENT_5);
         var1.accept((ItemLike)Items.WHITE_DYE);
         var1.accept((ItemLike)Items.LIGHT_GRAY_DYE);
         var1.accept((ItemLike)Items.GRAY_DYE);
         var1.accept((ItemLike)Items.BLACK_DYE);
         var1.accept((ItemLike)Items.BROWN_DYE);
         var1.accept((ItemLike)Items.RED_DYE);
         var1.accept((ItemLike)Items.ORANGE_DYE);
         var1.accept((ItemLike)Items.YELLOW_DYE);
         var1.accept((ItemLike)Items.LIME_DYE);
         var1.accept((ItemLike)Items.GREEN_DYE);
         var1.accept((ItemLike)Items.CYAN_DYE);
         var1.accept((ItemLike)Items.LIGHT_BLUE_DYE);
         var1.accept((ItemLike)Items.BLUE_DYE);
         var1.accept((ItemLike)Items.PURPLE_DYE);
         var1.accept((ItemLike)Items.MAGENTA_DYE);
         var1.accept((ItemLike)Items.PINK_DYE);
         var1.accept((ItemLike)Items.BOWL);
         var1.accept((ItemLike)Items.BRICK);
         var1.accept((ItemLike)Items.NETHER_BRICK);
         var1.accept((ItemLike)Items.PAPER);
         var1.accept((ItemLike)Items.BOOK);
         var1.accept((ItemLike)Items.FIREWORK_STAR);
         var1.accept((ItemLike)Items.GLASS_BOTTLE);
         var1.accept((ItemLike)Items.NETHER_WART);
         var1.accept((ItemLike)Items.REDSTONE);
         var1.accept((ItemLike)Items.GLOWSTONE_DUST);
         var1.accept((ItemLike)Items.GUNPOWDER);
         var1.accept((ItemLike)Items.DRAGON_BREATH);
         var1.accept((ItemLike)Items.FERMENTED_SPIDER_EYE);
         var1.accept((ItemLike)Items.BLAZE_POWDER);
         var1.accept((ItemLike)Items.SUGAR);
         var1.accept((ItemLike)Items.RABBIT_FOOT);
         var1.accept((ItemLike)Items.GLISTERING_MELON_SLICE);
         var1.accept((ItemLike)Items.SPIDER_EYE);
         var1.accept((ItemLike)Items.PUFFERFISH);
         var1.accept((ItemLike)Items.MAGMA_CREAM);
         var1.accept((ItemLike)Items.GOLDEN_CARROT);
         var1.accept((ItemLike)Items.GHAST_TEAR);
         var1.accept((ItemLike)Items.TURTLE_HELMET);
         var1.accept((ItemLike)Items.PHANTOM_MEMBRANE);
         var1.accept((ItemLike)Items.FLOWER_BANNER_PATTERN);
         var1.accept((ItemLike)Items.CREEPER_BANNER_PATTERN);
         var1.accept((ItemLike)Items.SKULL_BANNER_PATTERN);
         var1.accept((ItemLike)Items.MOJANG_BANNER_PATTERN);
         var1.accept((ItemLike)Items.GLOBE_BANNER_PATTERN);
         var1.accept((ItemLike)Items.PIGLIN_BANNER_PATTERN);
         var1.accept((ItemLike)Items.FLOW_BANNER_PATTERN);
         var1.accept((ItemLike)Items.GUSTER_BANNER_PATTERN);
         var1.accept((ItemLike)Items.ANGLER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.ARCHER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.ARMS_UP_POTTERY_SHERD);
         var1.accept((ItemLike)Items.BLADE_POTTERY_SHERD);
         var1.accept((ItemLike)Items.BREWER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.BURN_POTTERY_SHERD);
         var1.accept((ItemLike)Items.DANGER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.FLOW_POTTERY_SHERD);
         var1.accept((ItemLike)Items.EXPLORER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.FRIEND_POTTERY_SHERD);
         var1.accept((ItemLike)Items.GUSTER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.HEART_POTTERY_SHERD);
         var1.accept((ItemLike)Items.HEARTBREAK_POTTERY_SHERD);
         var1.accept((ItemLike)Items.HOWL_POTTERY_SHERD);
         var1.accept((ItemLike)Items.MINER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.MOURNER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.PLENTY_POTTERY_SHERD);
         var1.accept((ItemLike)Items.PRIZE_POTTERY_SHERD);
         var1.accept((ItemLike)Items.SCRAPE_POTTERY_SHERD);
         var1.accept((ItemLike)Items.SHEAF_POTTERY_SHERD);
         var1.accept((ItemLike)Items.SHELTER_POTTERY_SHERD);
         var1.accept((ItemLike)Items.SKULL_POTTERY_SHERD);
         var1.accept((ItemLike)Items.SNORT_POTTERY_SHERD);
         var1.accept((ItemLike)Items.NETHERITE_UPGRADE_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.VEX_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.WILD_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.COAST_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.DUNE_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.RAISER_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.HOST_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.WARD_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.TIDE_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.RIB_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.EYE_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.FLOW_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.BOLT_ARMOR_TRIM_SMITHING_TEMPLATE);
         var1.accept((ItemLike)Items.EXPERIENCE_BOTTLE);
         var1.accept((ItemLike)Items.TRIAL_KEY);
         var1.accept((ItemLike)Items.OMINOUS_TRIAL_KEY);
         var0x.holders().lookup(Registries.ENCHANTMENT).ifPresent((var1x) -> {
            generateEnchantmentBookTypesOnlyMaxLevel(var1, var1x, CreativeModeTab.TabVisibility.PARENT_TAB_ONLY);
            generateEnchantmentBookTypesAllLevels(var1, var1x, CreativeModeTab.TabVisibility.SEARCH_TAB_ONLY);
         });
      }).build());
      Registry.register(var0, (ResourceKey)SPAWN_EGGS, CreativeModeTab.builder(CreativeModeTab.Row.BOTTOM, 4).title(Component.translatable("itemGroup.spawnEggs")).icon(() -> {
         return new ItemStack(Items.PIG_SPAWN_EGG);
      }).displayItems((var0x, var1) -> {
         var1.accept((ItemLike)Items.SPAWNER);
         var1.accept((ItemLike)Items.TRIAL_SPAWNER);
         var1.accept((ItemLike)Items.ALLAY_SPAWN_EGG);
         var1.accept((ItemLike)Items.ARMADILLO_SPAWN_EGG);
         var1.accept((ItemLike)Items.AXOLOTL_SPAWN_EGG);
         var1.accept((ItemLike)Items.BAT_SPAWN_EGG);
         var1.accept((ItemLike)Items.BEE_SPAWN_EGG);
         var1.accept((ItemLike)Items.BLAZE_SPAWN_EGG);
         var1.accept((ItemLike)Items.BOGGED_SPAWN_EGG);
         var1.accept((ItemLike)Items.BREEZE_SPAWN_EGG);
         var1.accept((ItemLike)Items.CAMEL_SPAWN_EGG);
         var1.accept((ItemLike)Items.CAT_SPAWN_EGG);
         var1.accept((ItemLike)Items.CAVE_SPIDER_SPAWN_EGG);
         var1.accept((ItemLike)Items.CHICKEN_SPAWN_EGG);
         var1.accept((ItemLike)Items.COD_SPAWN_EGG);
         var1.accept((ItemLike)Items.COW_SPAWN_EGG);
         var1.accept((ItemLike)Items.CREEPER_SPAWN_EGG);
         var1.accept((ItemLike)Items.DOLPHIN_SPAWN_EGG);
         var1.accept((ItemLike)Items.DONKEY_SPAWN_EGG);
         var1.accept((ItemLike)Items.DROWNED_SPAWN_EGG);
         var1.accept((ItemLike)Items.ELDER_GUARDIAN_SPAWN_EGG);
         var1.accept((ItemLike)Items.ENDERMAN_SPAWN_EGG);
         var1.accept((ItemLike)Items.ENDERMITE_SPAWN_EGG);
         var1.accept((ItemLike)Items.EVOKER_SPAWN_EGG);
         var1.accept((ItemLike)Items.FOX_SPAWN_EGG);
         var1.accept((ItemLike)Items.FROG_SPAWN_EGG);
         var1.accept((ItemLike)Items.GHAST_SPAWN_EGG);
         var1.accept((ItemLike)Items.GLOW_SQUID_SPAWN_EGG);
         var1.accept((ItemLike)Items.GOAT_SPAWN_EGG);
         var1.accept((ItemLike)Items.GUARDIAN_SPAWN_EGG);
         var1.accept((ItemLike)Items.HOGLIN_SPAWN_EGG);
         var1.accept((ItemLike)Items.HORSE_SPAWN_EGG);
         var1.accept((ItemLike)Items.HUSK_SPAWN_EGG);
         var1.accept((ItemLike)Items.IRON_GOLEM_SPAWN_EGG);
         var1.accept((ItemLike)Items.LLAMA_SPAWN_EGG);
         var1.accept((ItemLike)Items.MAGMA_CUBE_SPAWN_EGG);
         var1.accept((ItemLike)Items.MOOSHROOM_SPAWN_EGG);
         var1.accept((ItemLike)Items.MULE_SPAWN_EGG);
         var1.accept((ItemLike)Items.OCELOT_SPAWN_EGG);
         var1.accept((ItemLike)Items.PANDA_SPAWN_EGG);
         var1.accept((ItemLike)Items.PARROT_SPAWN_EGG);
         var1.accept((ItemLike)Items.PHANTOM_SPAWN_EGG);
         var1.accept((ItemLike)Items.PIG_SPAWN_EGG);
         var1.accept((ItemLike)Items.PIGLIN_SPAWN_EGG);
         var1.accept((ItemLike)Items.PIGLIN_BRUTE_SPAWN_EGG);
         var1.accept((ItemLike)Items.PILLAGER_SPAWN_EGG);
         var1.accept((ItemLike)Items.POLAR_BEAR_SPAWN_EGG);
         var1.accept((ItemLike)Items.PUFFERFISH_SPAWN_EGG);
         var1.accept((ItemLike)Items.RABBIT_SPAWN_EGG);
         var1.accept((ItemLike)Items.RAVAGER_SPAWN_EGG);
         var1.accept((ItemLike)Items.SALMON_SPAWN_EGG);
         var1.accept((ItemLike)Items.SHEEP_SPAWN_EGG);
         var1.accept((ItemLike)Items.SHULKER_SPAWN_EGG);
         var1.accept((ItemLike)Items.SILVERFISH_SPAWN_EGG);
         var1.accept((ItemLike)Items.SKELETON_SPAWN_EGG);
         var1.accept((ItemLike)Items.SKELETON_HORSE_SPAWN_EGG);
         var1.accept((ItemLike)Items.SLIME_SPAWN_EGG);
         var1.accept((ItemLike)Items.SNIFFER_SPAWN_EGG);
         var1.accept((ItemLike)Items.SNOW_GOLEM_SPAWN_EGG);
         var1.accept((ItemLike)Items.SPIDER_SPAWN_EGG);
         var1.accept((ItemLike)Items.SQUID_SPAWN_EGG);
         var1.accept((ItemLike)Items.STRAY_SPAWN_EGG);
         var1.accept((ItemLike)Items.STRIDER_SPAWN_EGG);
         var1.accept((ItemLike)Items.TADPOLE_SPAWN_EGG);
         var1.accept((ItemLike)Items.TRADER_LLAMA_SPAWN_EGG);
         var1.accept((ItemLike)Items.TROPICAL_FISH_SPAWN_EGG);
         var1.accept((ItemLike)Items.TURTLE_SPAWN_EGG);
         var1.accept((ItemLike)Items.VEX_SPAWN_EGG);
         var1.accept((ItemLike)Items.VILLAGER_SPAWN_EGG);
         var1.accept((ItemLike)Items.VINDICATOR_SPAWN_EGG);
         var1.accept((ItemLike)Items.WANDERING_TRADER_SPAWN_EGG);
         var1.accept((ItemLike)Items.WARDEN_SPAWN_EGG);
         var1.accept((ItemLike)Items.WITCH_SPAWN_EGG);
         var1.accept((ItemLike)Items.WITHER_SKELETON_SPAWN_EGG);
         var1.accept((ItemLike)Items.WOLF_SPAWN_EGG);
         var1.accept((ItemLike)Items.ZOGLIN_SPAWN_EGG);
         var1.accept((ItemLike)Items.ZOMBIE_SPAWN_EGG);
         var1.accept((ItemLike)Items.ZOMBIE_HORSE_SPAWN_EGG);
         var1.accept((ItemLike)Items.ZOMBIE_VILLAGER_SPAWN_EGG);
         var1.accept((ItemLike)Items.ZOMBIFIED_PIGLIN_SPAWN_EGG);
      }).build());
      Registry.register(var0, (ResourceKey)OP_BLOCKS, CreativeModeTab.builder(CreativeModeTab.Row.BOTTOM, 5).title(Component.translatable("itemGroup.op")).icon(() -> {
         return new ItemStack(Items.COMMAND_BLOCK);
      }).alignedRight().displayItems((var0x, var1) -> {
         if (var0x.hasPermissions()) {
            var1.accept((ItemLike)Items.COMMAND_BLOCK);
            var1.accept((ItemLike)Items.CHAIN_COMMAND_BLOCK);
            var1.accept((ItemLike)Items.REPEATING_COMMAND_BLOCK);
            var1.accept((ItemLike)Items.COMMAND_BLOCK_MINECART);
            var1.accept((ItemLike)Items.JIGSAW);
            var1.accept((ItemLike)Items.STRUCTURE_BLOCK);
            var1.accept((ItemLike)Items.STRUCTURE_VOID);
            var1.accept((ItemLike)Items.BARRIER);
            var1.accept((ItemLike)Items.DEBUG_STICK);

            for(int var2 = 15; var2 >= 0; --var2) {
               var1.accept(LightBlock.setLightOnStack(new ItemStack(Items.LIGHT), var2));
            }

            var0x.holders().lookup(Registries.PAINTING_VARIANT).ifPresent((var2x) -> {
               generatePresetPaintings(var1, var0x.holders(), var2x, (var0) -> {
                  return !var0.is(PaintingVariantTags.PLACEABLE);
               }, CreativeModeTab.TabVisibility.PARENT_AND_SEARCH_TABS);
            });
         }

      }).build());
      return (CreativeModeTab)Registry.register(var0, (ResourceKey)INVENTORY, CreativeModeTab.builder(CreativeModeTab.Row.BOTTOM, 6).title(Component.translatable("itemGroup.inventory")).icon(() -> {
         return new ItemStack(Blocks.CHEST);
      }).backgroundTexture(INVENTORY_BACKGROUND).hideTitle().alignedRight().type(CreativeModeTab.Type.INVENTORY).noScrollBar().build());
   }

   public static void validate() {
      HashMap var0 = new HashMap();
      Iterator var1 = BuiltInRegistries.CREATIVE_MODE_TAB.registryKeySet().iterator();

      String var4;
      String var5;
      do {
         if (!var1.hasNext()) {
            return;
         }

         ResourceKey var2 = (ResourceKey)var1.next();
         CreativeModeTab var3 = (CreativeModeTab)BuiltInRegistries.CREATIVE_MODE_TAB.getOrThrow(var2);
         var4 = var3.getDisplayName().getString();
         var5 = (String)var0.put(Pair.of(var3.row(), var3.column()), var4);
      } while(var5 == null);

      throw new IllegalArgumentException("Duplicate position: " + var4 + " vs. " + var5);
   }

   public static CreativeModeTab getDefaultTab() {
      return (CreativeModeTab)BuiltInRegistries.CREATIVE_MODE_TAB.getOrThrow(BUILDING_BLOCKS);
   }

   private static void generatePotionEffectTypes(CreativeModeTab.Output var0, HolderLookup<Potion> var1, Item var2, CreativeModeTab.TabVisibility var3, FeatureFlagSet var4) {
      var1.listElements().filter((var1x) -> {
         return ((Potion)var1x.value()).isEnabled(var4);
      }).map((var1x) -> {
         return PotionContents.createItemStack(var2, var1x);
      }).forEach((var2x) -> {
         var0.accept(var2x, var3);
      });
   }

   private static void generateEnchantmentBookTypesOnlyMaxLevel(CreativeModeTab.Output var0, HolderLookup<Enchantment> var1, CreativeModeTab.TabVisibility var2) {
      var1.listElements().map((var0x) -> {
         return EnchantedBookItem.createForEnchantment(new EnchantmentInstance(var0x, ((Enchantment)var0x.value()).getMaxLevel()));
      }).forEach((var2x) -> {
         var0.accept(var2x, var2);
      });
   }

   private static void generateEnchantmentBookTypesAllLevels(CreativeModeTab.Output var0, HolderLookup<Enchantment> var1, CreativeModeTab.TabVisibility var2) {
      var1.listElements().flatMap((var0x) -> {
         return IntStream.rangeClosed(((Enchantment)var0x.value()).getMinLevel(), ((Enchantment)var0x.value()).getMaxLevel()).mapToObj((var1) -> {
            return EnchantedBookItem.createForEnchantment(new EnchantmentInstance(var0x, var1));
         });
      }).forEach((var2x) -> {
         var0.accept(var2x, var2);
      });
   }

   private static void generateInstrumentTypes(CreativeModeTab.Output var0, HolderLookup<Instrument> var1, Item var2, TagKey<Instrument> var3, CreativeModeTab.TabVisibility var4) {
      var1.get(var3).ifPresent((var3x) -> {
         var3x.stream().map((var1) -> {
            return InstrumentItem.create(var2, var1);
         }).forEach((var2x) -> {
            var0.accept(var2x, var4);
         });
      });
   }

   private static void generateSuspiciousStews(CreativeModeTab.Output var0, CreativeModeTab.TabVisibility var1) {
      List var2 = SuspiciousEffectHolder.getAllEffectHolders();
      Set var3 = ItemStackLinkedSet.createTypeAndComponentsSet();
      Iterator var4 = var2.iterator();

      while(var4.hasNext()) {
         SuspiciousEffectHolder var5 = (SuspiciousEffectHolder)var4.next();
         ItemStack var6 = new ItemStack(Items.SUSPICIOUS_STEW);
         var6.set(DataComponents.SUSPICIOUS_STEW_EFFECTS, var5.getSuspiciousEffects());
         var3.add(var6);
      }

      var0.acceptAll(var3, var1);
   }

   private static void generateOminousVials(CreativeModeTab.Output var0, CreativeModeTab.TabVisibility var1) {
      for(int var2 = 0; var2 <= 4; ++var2) {
         ItemStack var3 = new ItemStack(Items.OMINOUS_BOTTLE);
         var3.set(DataComponents.OMINOUS_BOTTLE_AMPLIFIER, var2);
         var0.accept(var3, var1);
      }

   }

   private static void generateFireworksAllDurations(CreativeModeTab.Output var0, CreativeModeTab.TabVisibility var1) {
      byte[] var2 = FireworkRocketItem.CRAFTABLE_DURATIONS;
      int var3 = var2.length;

      for(int var4 = 0; var4 < var3; ++var4) {
         byte var5 = var2[var4];
         ItemStack var6 = new ItemStack(Items.FIREWORK_ROCKET);
         var6.set(DataComponents.FIREWORKS, new Fireworks(var5, List.of()));
         var0.accept(var6, var1);
      }

   }

   private static void generatePresetPaintings(CreativeModeTab.Output var0, HolderLookup.Provider var1, HolderLookup.RegistryLookup<PaintingVariant> var2, Predicate<Holder<PaintingVariant>> var3, CreativeModeTab.TabVisibility var4) {
      RegistryOps var5 = var1.createSerializationContext(NbtOps.INSTANCE);
      var2.listElements().filter(var3).sorted(PAINTING_COMPARATOR).forEach((var3x) -> {
         CustomData var4x = ((CustomData)CustomData.EMPTY.update((DynamicOps)var5, (MapEncoder)Painting.VARIANT_MAP_CODEC, (Object)var3x).getOrThrow()).update((var0x) -> {
            var0x.putString("id", "minecraft:painting");
         });
         ItemStack var5x = new ItemStack(Items.PAINTING);
         var5x.set(DataComponents.ENTITY_DATA, var4x);
         var0.accept(var5x, var4);
      });
   }

   public static List<CreativeModeTab> tabs() {
      return streamAllTabs().filter(CreativeModeTab::shouldDisplay).toList();
   }

   public static List<CreativeModeTab> allTabs() {
      return streamAllTabs().toList();
   }

   private static Stream<CreativeModeTab> streamAllTabs() {
      return BuiltInRegistries.CREATIVE_MODE_TAB.stream();
   }

   public static CreativeModeTab searchTab() {
      return (CreativeModeTab)BuiltInRegistries.CREATIVE_MODE_TAB.getOrThrow(SEARCH);
   }

   private static void buildAllTabContents(CreativeModeTab.ItemDisplayParameters var0) {
      streamAllTabs().filter((var0x) -> {
         return var0x.getType() == CreativeModeTab.Type.CATEGORY;
      }).forEach((var1) -> {
         var1.buildContents(var0);
      });
      streamAllTabs().filter((var0x) -> {
         return var0x.getType() != CreativeModeTab.Type.CATEGORY;
      }).forEach((var1) -> {
         var1.buildContents(var0);
      });
   }

   public static boolean tryRebuildTabContents(FeatureFlagSet var0, boolean var1, HolderLookup.Provider var2) {
      if (CACHED_PARAMETERS != null && !CACHED_PARAMETERS.needsUpdate(var0, var1, var2)) {
         return false;
      } else {
         CACHED_PARAMETERS = new CreativeModeTab.ItemDisplayParameters(var0, var1, var2);
         buildAllTabContents(CACHED_PARAMETERS);
         return true;
      }
   }
}
