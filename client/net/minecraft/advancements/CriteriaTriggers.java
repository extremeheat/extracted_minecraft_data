package net.minecraft.advancements;

import com.mojang.serialization.Codec;
import net.minecraft.advancements.critereon.AnyBlockInteractionTrigger;
import net.minecraft.advancements.critereon.BeeNestDestroyedTrigger;
import net.minecraft.advancements.critereon.BredAnimalsTrigger;
import net.minecraft.advancements.critereon.BrewedPotionTrigger;
import net.minecraft.advancements.critereon.ChangeDimensionTrigger;
import net.minecraft.advancements.critereon.ChanneledLightningTrigger;
import net.minecraft.advancements.critereon.ConstructBeaconTrigger;
import net.minecraft.advancements.critereon.ConsumeItemTrigger;
import net.minecraft.advancements.critereon.CuredZombieVillagerTrigger;
import net.minecraft.advancements.critereon.DefaultBlockInteractionTrigger;
import net.minecraft.advancements.critereon.DistanceTrigger;
import net.minecraft.advancements.critereon.EffectsChangedTrigger;
import net.minecraft.advancements.critereon.EnchantedItemTrigger;
import net.minecraft.advancements.critereon.EnterBlockTrigger;
import net.minecraft.advancements.critereon.EntityHurtPlayerTrigger;
import net.minecraft.advancements.critereon.FallAfterExplosionTrigger;
import net.minecraft.advancements.critereon.FilledBucketTrigger;
import net.minecraft.advancements.critereon.FishingRodHookedTrigger;
import net.minecraft.advancements.critereon.ImpossibleTrigger;
import net.minecraft.advancements.critereon.InventoryChangeTrigger;
import net.minecraft.advancements.critereon.ItemDurabilityTrigger;
import net.minecraft.advancements.critereon.ItemUsedOnLocationTrigger;
import net.minecraft.advancements.critereon.KilledByCrossbowTrigger;
import net.minecraft.advancements.critereon.KilledTrigger;
import net.minecraft.advancements.critereon.LevitationTrigger;
import net.minecraft.advancements.critereon.LightningStrikeTrigger;
import net.minecraft.advancements.critereon.LootTableTrigger;
import net.minecraft.advancements.critereon.PickedUpItemTrigger;
import net.minecraft.advancements.critereon.PlayerHurtEntityTrigger;
import net.minecraft.advancements.critereon.PlayerInteractTrigger;
import net.minecraft.advancements.critereon.PlayerTrigger;
import net.minecraft.advancements.critereon.RecipeCraftedTrigger;
import net.minecraft.advancements.critereon.RecipeUnlockedTrigger;
import net.minecraft.advancements.critereon.ShotCrossbowTrigger;
import net.minecraft.advancements.critereon.SlideDownBlockTrigger;
import net.minecraft.advancements.critereon.StartRidingTrigger;
import net.minecraft.advancements.critereon.SummonedEntityTrigger;
import net.minecraft.advancements.critereon.TameAnimalTrigger;
import net.minecraft.advancements.critereon.TargetBlockTrigger;
import net.minecraft.advancements.critereon.TradeTrigger;
import net.minecraft.advancements.critereon.UsedEnderEyeTrigger;
import net.minecraft.advancements.critereon.UsedTotemTrigger;
import net.minecraft.advancements.critereon.UsingItemTrigger;
import net.minecraft.core.Registry;
import net.minecraft.core.registries.BuiltInRegistries;

public class CriteriaTriggers {
   public static final Codec<CriterionTrigger<?>> CODEC;
   public static final ImpossibleTrigger IMPOSSIBLE;
   public static final KilledTrigger PLAYER_KILLED_ENTITY;
   public static final KilledTrigger ENTITY_KILLED_PLAYER;
   public static final EnterBlockTrigger ENTER_BLOCK;
   public static final InventoryChangeTrigger INVENTORY_CHANGED;
   public static final RecipeUnlockedTrigger RECIPE_UNLOCKED;
   public static final PlayerHurtEntityTrigger PLAYER_HURT_ENTITY;
   public static final EntityHurtPlayerTrigger ENTITY_HURT_PLAYER;
   public static final EnchantedItemTrigger ENCHANTED_ITEM;
   public static final FilledBucketTrigger FILLED_BUCKET;
   public static final BrewedPotionTrigger BREWED_POTION;
   public static final ConstructBeaconTrigger CONSTRUCT_BEACON;
   public static final UsedEnderEyeTrigger USED_ENDER_EYE;
   public static final SummonedEntityTrigger SUMMONED_ENTITY;
   public static final BredAnimalsTrigger BRED_ANIMALS;
   public static final PlayerTrigger LOCATION;
   public static final PlayerTrigger SLEPT_IN_BED;
   public static final CuredZombieVillagerTrigger CURED_ZOMBIE_VILLAGER;
   public static final TradeTrigger TRADE;
   public static final ItemDurabilityTrigger ITEM_DURABILITY_CHANGED;
   public static final LevitationTrigger LEVITATION;
   public static final ChangeDimensionTrigger CHANGED_DIMENSION;
   public static final PlayerTrigger TICK;
   public static final TameAnimalTrigger TAME_ANIMAL;
   public static final ItemUsedOnLocationTrigger PLACED_BLOCK;
   public static final ConsumeItemTrigger CONSUME_ITEM;
   public static final EffectsChangedTrigger EFFECTS_CHANGED;
   public static final UsedTotemTrigger USED_TOTEM;
   public static final DistanceTrigger NETHER_TRAVEL;
   public static final FishingRodHookedTrigger FISHING_ROD_HOOKED;
   public static final ChanneledLightningTrigger CHANNELED_LIGHTNING;
   public static final ShotCrossbowTrigger SHOT_CROSSBOW;
   public static final KilledByCrossbowTrigger KILLED_BY_CROSSBOW;
   public static final PlayerTrigger RAID_WIN;
   public static final PlayerTrigger RAID_OMEN;
   public static final SlideDownBlockTrigger HONEY_BLOCK_SLIDE;
   public static final BeeNestDestroyedTrigger BEE_NEST_DESTROYED;
   public static final TargetBlockTrigger TARGET_BLOCK_HIT;
   public static final ItemUsedOnLocationTrigger ITEM_USED_ON_BLOCK;
   public static final DefaultBlockInteractionTrigger DEFAULT_BLOCK_USE;
   public static final AnyBlockInteractionTrigger ANY_BLOCK_USE;
   public static final LootTableTrigger GENERATE_LOOT;
   public static final PickedUpItemTrigger THROWN_ITEM_PICKED_UP_BY_ENTITY;
   public static final PickedUpItemTrigger THROWN_ITEM_PICKED_UP_BY_PLAYER;
   public static final PlayerInteractTrigger PLAYER_INTERACTED_WITH_ENTITY;
   public static final StartRidingTrigger START_RIDING_TRIGGER;
   public static final LightningStrikeTrigger LIGHTNING_STRIKE;
   public static final UsingItemTrigger USING_ITEM;
   public static final DistanceTrigger FALL_FROM_HEIGHT;
   public static final DistanceTrigger RIDE_ENTITY_IN_LAVA_TRIGGER;
   public static final KilledTrigger KILL_MOB_NEAR_SCULK_CATALYST;
   public static final ItemUsedOnLocationTrigger ALLAY_DROP_ITEM_ON_BLOCK;
   public static final PlayerTrigger AVOID_VIBRATION;
   public static final RecipeCraftedTrigger RECIPE_CRAFTED;
   public static final RecipeCraftedTrigger CRAFTER_RECIPE_CRAFTED;
   public static final FallAfterExplosionTrigger FALL_AFTER_EXPLOSION;

   public CriteriaTriggers() {
      super();
   }

   private static <T extends CriterionTrigger<?>> T register(String var0, T var1) {
      return (CriterionTrigger)Registry.register(BuiltInRegistries.TRIGGER_TYPES, (String)var0, var1);
   }

   public static CriterionTrigger<?> bootstrap(Registry<CriterionTrigger<?>> var0) {
      return IMPOSSIBLE;
   }

   static {
      CODEC = BuiltInRegistries.TRIGGER_TYPES.byNameCodec();
      IMPOSSIBLE = (ImpossibleTrigger)register("impossible", new ImpossibleTrigger());
      PLAYER_KILLED_ENTITY = (KilledTrigger)register("player_killed_entity", new KilledTrigger());
      ENTITY_KILLED_PLAYER = (KilledTrigger)register("entity_killed_player", new KilledTrigger());
      ENTER_BLOCK = (EnterBlockTrigger)register("enter_block", new EnterBlockTrigger());
      INVENTORY_CHANGED = (InventoryChangeTrigger)register("inventory_changed", new InventoryChangeTrigger());
      RECIPE_UNLOCKED = (RecipeUnlockedTrigger)register("recipe_unlocked", new RecipeUnlockedTrigger());
      PLAYER_HURT_ENTITY = (PlayerHurtEntityTrigger)register("player_hurt_entity", new PlayerHurtEntityTrigger());
      ENTITY_HURT_PLAYER = (EntityHurtPlayerTrigger)register("entity_hurt_player", new EntityHurtPlayerTrigger());
      ENCHANTED_ITEM = (EnchantedItemTrigger)register("enchanted_item", new EnchantedItemTrigger());
      FILLED_BUCKET = (FilledBucketTrigger)register("filled_bucket", new FilledBucketTrigger());
      BREWED_POTION = (BrewedPotionTrigger)register("brewed_potion", new BrewedPotionTrigger());
      CONSTRUCT_BEACON = (ConstructBeaconTrigger)register("construct_beacon", new ConstructBeaconTrigger());
      USED_ENDER_EYE = (UsedEnderEyeTrigger)register("used_ender_eye", new UsedEnderEyeTrigger());
      SUMMONED_ENTITY = (SummonedEntityTrigger)register("summoned_entity", new SummonedEntityTrigger());
      BRED_ANIMALS = (BredAnimalsTrigger)register("bred_animals", new BredAnimalsTrigger());
      LOCATION = (PlayerTrigger)register("location", new PlayerTrigger());
      SLEPT_IN_BED = (PlayerTrigger)register("slept_in_bed", new PlayerTrigger());
      CURED_ZOMBIE_VILLAGER = (CuredZombieVillagerTrigger)register("cured_zombie_villager", new CuredZombieVillagerTrigger());
      TRADE = (TradeTrigger)register("villager_trade", new TradeTrigger());
      ITEM_DURABILITY_CHANGED = (ItemDurabilityTrigger)register("item_durability_changed", new ItemDurabilityTrigger());
      LEVITATION = (LevitationTrigger)register("levitation", new LevitationTrigger());
      CHANGED_DIMENSION = (ChangeDimensionTrigger)register("changed_dimension", new ChangeDimensionTrigger());
      TICK = (PlayerTrigger)register("tick", new PlayerTrigger());
      TAME_ANIMAL = (TameAnimalTrigger)register("tame_animal", new TameAnimalTrigger());
      PLACED_BLOCK = (ItemUsedOnLocationTrigger)register("placed_block", new ItemUsedOnLocationTrigger());
      CONSUME_ITEM = (ConsumeItemTrigger)register("consume_item", new ConsumeItemTrigger());
      EFFECTS_CHANGED = (EffectsChangedTrigger)register("effects_changed", new EffectsChangedTrigger());
      USED_TOTEM = (UsedTotemTrigger)register("used_totem", new UsedTotemTrigger());
      NETHER_TRAVEL = (DistanceTrigger)register("nether_travel", new DistanceTrigger());
      FISHING_ROD_HOOKED = (FishingRodHookedTrigger)register("fishing_rod_hooked", new FishingRodHookedTrigger());
      CHANNELED_LIGHTNING = (ChanneledLightningTrigger)register("channeled_lightning", new ChanneledLightningTrigger());
      SHOT_CROSSBOW = (ShotCrossbowTrigger)register("shot_crossbow", new ShotCrossbowTrigger());
      KILLED_BY_CROSSBOW = (KilledByCrossbowTrigger)register("killed_by_crossbow", new KilledByCrossbowTrigger());
      RAID_WIN = (PlayerTrigger)register("hero_of_the_village", new PlayerTrigger());
      RAID_OMEN = (PlayerTrigger)register("voluntary_exile", new PlayerTrigger());
      HONEY_BLOCK_SLIDE = (SlideDownBlockTrigger)register("slide_down_block", new SlideDownBlockTrigger());
      BEE_NEST_DESTROYED = (BeeNestDestroyedTrigger)register("bee_nest_destroyed", new BeeNestDestroyedTrigger());
      TARGET_BLOCK_HIT = (TargetBlockTrigger)register("target_hit", new TargetBlockTrigger());
      ITEM_USED_ON_BLOCK = (ItemUsedOnLocationTrigger)register("item_used_on_block", new ItemUsedOnLocationTrigger());
      DEFAULT_BLOCK_USE = (DefaultBlockInteractionTrigger)register("default_block_use", new DefaultBlockInteractionTrigger());
      ANY_BLOCK_USE = (AnyBlockInteractionTrigger)register("any_block_use", new AnyBlockInteractionTrigger());
      GENERATE_LOOT = (LootTableTrigger)register("player_generates_container_loot", new LootTableTrigger());
      THROWN_ITEM_PICKED_UP_BY_ENTITY = (PickedUpItemTrigger)register("thrown_item_picked_up_by_entity", new PickedUpItemTrigger());
      THROWN_ITEM_PICKED_UP_BY_PLAYER = (PickedUpItemTrigger)register("thrown_item_picked_up_by_player", new PickedUpItemTrigger());
      PLAYER_INTERACTED_WITH_ENTITY = (PlayerInteractTrigger)register("player_interacted_with_entity", new PlayerInteractTrigger());
      START_RIDING_TRIGGER = (StartRidingTrigger)register("started_riding", new StartRidingTrigger());
      LIGHTNING_STRIKE = (LightningStrikeTrigger)register("lightning_strike", new LightningStrikeTrigger());
      USING_ITEM = (UsingItemTrigger)register("using_item", new UsingItemTrigger());
      FALL_FROM_HEIGHT = (DistanceTrigger)register("fall_from_height", new DistanceTrigger());
      RIDE_ENTITY_IN_LAVA_TRIGGER = (DistanceTrigger)register("ride_entity_in_lava", new DistanceTrigger());
      KILL_MOB_NEAR_SCULK_CATALYST = (KilledTrigger)register("kill_mob_near_sculk_catalyst", new KilledTrigger());
      ALLAY_DROP_ITEM_ON_BLOCK = (ItemUsedOnLocationTrigger)register("allay_drop_item_on_block", new ItemUsedOnLocationTrigger());
      AVOID_VIBRATION = (PlayerTrigger)register("avoid_vibration", new PlayerTrigger());
      RECIPE_CRAFTED = (RecipeCraftedTrigger)register("recipe_crafted", new RecipeCraftedTrigger());
      CRAFTER_RECIPE_CRAFTED = (RecipeCraftedTrigger)register("crafter_recipe_crafted", new RecipeCraftedTrigger());
      FALL_AFTER_EXPLOSION = (FallAfterExplosionTrigger)register("fall_after_explosion", new FallAfterExplosionTrigger());
   }
}
